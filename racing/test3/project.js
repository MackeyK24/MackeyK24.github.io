window.BabylonToolkitLicense = "I-ABCDEF12345";

// Xbox Project Shim Services
var EnableXboxLiveServices = true;

// babylon.toolkit.js
var BABYLON;!function(e){var t=function(){function e(e){this.motion=e.motion,this.posX=e.posX||0,this.posY=e.posY,this.weight=e.weight||0}return e.GetIdleBlendTree=function(e){for(var t=0,r=e;t<r.length;t++){var i=r[t];if(0===i.posX&&0===i.posY)return i}return null},e.GetDefaultIdleBlendTree=function(){return e.DefaultIdleBlendTree},e.DefaultIdleBlendTree=new e({motion:"Idle",posX:0,posY:0}),e}();e.BlendTreeValue=t;var r=function(){function t(){}return t.ZCross=function(e,t){return e.x*t.y-t.x*e.y},t.ClampValue=function(e,t,r){return e<=t?t:e>=r?r:e},t.ClampVector=function(r,i,s){var o=e.Vector3.Zero();return t.ClampVectorToRef(r,i,s,o),o},t.ClampVectorToRef=function(e,r,i,s){null!=s&&(s.x=t.ClampValue(e.x,r,i),s.y=t.ClampValue(e.y,r,i),s.z=t.ClampValue(e.z,r,i))},t.GetSignedAngle=function(e,t){return Math.atan2(e.x*t.y-e.y*t.x,e.x*t.x+e.y*t.y)},t.GetBarycentricVector=function(r,i,s,o){var n=e.Vector3.Zero();return t.GetBarycentricVectorToRef(r,i,s,o,n),n},t.GetBarycentricVectorToRef=function(e,r,i,s,o){t.TempVector2_AB.set(0,0),t.TempVector2_AB.set(0,0),t.TempVector2_AB.set(0,0),i.subtractToRef(r,t.TempVector2_AB),s.subtractToRef(r,t.TempVector2_AC),e.subtractToRef(r,t.TempVector2_AP);var n=1/t.ZCross(t.TempVector2_AB,t.TempVector2_AC),a=n*t.ZCross(t.TempVector2_AB,t.TempVector2_AP),l=n*t.ZCross(t.TempVector2_AP,t.TempVector2_AC),h=1-a-l;null!=o&&(o.x=h,o.y=a,o.z=l)},t.GetLinearInterpolation=function(e,t,r,i,s){return t+(s-e)*((i-t)/(r-e))},t.TempVector2_AB=new e.Vector2(0,0),t.TempVector2_AC=new e.Vector2(0,0),t.TempVector2_AP=new e.Vector2(0,0),t}();e.BlendTreeUtils=r;var i=function(){function i(){}return i.Calculate1DSimpleBlend=function(e,t){var s=t[0],o=t[t.length-1];if(e<=s.posY)s.weight=1;else if(e>=o.posY)o.weight=1;else{var n=i.GetRightNeighbourBlendTreeIndex(e,t),a=t[n-1],l=t[n],h=r.GetLinearInterpolation(a.posY,1,l.posY,0,e);a.weight=h,l.weight=1-a.weight}},i.Calculate2DSimpleDirectional=function(e,s,o){i.TempVector2_IP.set(e,s),i.TempVector2_TA.set(0,0),i.TempVector2_TB.set(0,0),i.TempVector2_TC.set(0,0),i.TempVector3_BARY.set(0,0,0);var n=!0,a=t.GetIdleBlendTree(o);if(a){var l=o.indexOf(a);o.splice(l,1)}else n=!1,a=t.GetDefaultIdleBlendTree();o.sort(function(e,t){return Math.atan2(e.posY,e.posX)-Math.atan2(t.posY,t.posX)}),o.unshift(a);for(var h=0,c=2;c<o.length;++c)i.TempVector2_TB.set(o[c-1].posX,o[c-1].posY),i.TempVector2_TC.set(o[c].posX,o[c].posY),r.GetBarycentricVectorToRef(i.TempVector2_IP,i.TempVector2_TA,i.TempVector2_TB,i.TempVector2_TC,i.TempVector3_BARY),r.ClampVectorToRef(i.TempVector3_BARY,0,1,i.TempVector3_BARY),i.TempVector3_BARY.z>0&&i.TempVector3_BARY.y>0&&(o[0].weight+=i.TempVector3_BARY.x,o[c-1].weight+=i.TempVector3_BARY.z,o[c].weight+=i.TempVector3_BARY.y,h+=i.TempVector3_BARY.x+i.TempVector3_BARY.y+i.TempVector3_BARY.z);i.TempVector2_TB.set(o[o.length-1].posX,o[o.length-1].posY),i.TempVector2_TC.set(o[1].posX,o[1].posY),r.GetBarycentricVectorToRef(i.TempVector2_IP,i.TempVector2_TA,i.TempVector2_TB,i.TempVector2_TC,i.TempVector3_BARY),r.ClampVectorToRef(i.TempVector3_BARY,0,1,i.TempVector3_BARY),i.TempVector3_BARY.z>0&&i.TempVector3_BARY.y>0&&(o[0].weight+=i.TempVector3_BARY.x,o[o.length-1].weight+=i.TempVector3_BARY.z,o[1].weight+=i.TempVector3_BARY.y,h+=i.TempVector3_BARY.x+i.TempVector3_BARY.y+i.TempVector3_BARY.z);for(var u=0,m=o;u<m.length;u++){var p=m[u];p.weight/=h}if(!n){o.shift();for(var f=a.weight/o.length,y=0,_=o;y<_.length;y++){var p=_[y];p.weight+=f}}},i.Calculate2DFreeformDirectional=function(t,s,o){i.TempVector2_IP.set(t,s),i.TempVector2_POSI.set(0,0),i.TempVector2_POSJ.set(0,0),i.TempVector2_POSIP.set(0,0),i.TempVector2_POSIJ.set(0,0);for(var n=2,a=0,l=i.TempVector2_IP.length(),h=0;h<o.length;++h){var c=o[h];i.TempVector2_POSI.set(c.posX,c.posY);for(var u=i.TempVector2_POSI.length(),m=l-u,p=r.GetSignedAngle(i.TempVector2_POSI,i.TempVector2_IP),f=1,y=0;y<o.length;++y)if(y!==h){i.TempVector2_POSJ.set(o[y].posX,o[y].posY);var _=i.TempVector2_POSJ.length(),d=(u+_)/2,v=m/d,g=(_-u)/d,C=r.GetSignedAngle(i.TempVector2_POSI,i.TempVector2_POSJ);i.TempVector2_POSIP.set(v,p*n),i.TempVector2_POSIJ.set(g,C*n);var b=i.TempVector2_POSIJ.lengthSquared(),S=e.Vector2.Dot(i.TempVector2_POSIP,i.TempVector2_POSIJ)/b;S=1-S,S=r.ClampValue(S,0,1),f=Math.min(S,f)}c.weight=f,a+=f}for(var x=0,T=o;x<T.length;x++){var c=T[x];c.weight/=a}},i.Calculate2DFreeformCartesian=function(t,s,o){i.TempVector2_IP.set(t,s),i.TempVector2_POSI.set(0,0),i.TempVector2_POSJ.set(0,0),i.TempVector2_POSIP.set(0,0),i.TempVector2_POSIJ.set(0,0);for(var n=0,a=0;a<o.length;++a){var l=o[a];i.TempVector2_POSI.set(l.posX,l.posY),i.TempVector2_IP.subtractToRef(i.TempVector2_POSI,i.TempVector2_POSIP);for(var h=1,c=0;c<o.length;++c)if(c!==a){i.TempVector2_POSJ.set(o[c].posX,o[c].posY),i.TempVector2_POSJ.subtractToRef(i.TempVector2_POSI,i.TempVector2_POSIJ);var u=i.TempVector2_POSIJ.lengthSquared(),m=e.Vector2.Dot(i.TempVector2_POSIP,i.TempVector2_POSIJ)/u;m=1-m,m=r.ClampValue(m,0,1),h=Math.min(h,m)}l.weight=h,n+=h}for(var p=0,f=o;p<f.length;p++){var l=f[p];l.weight/=n}},i.GetRightNeighbourBlendTreeIndex=function(e,t){t.sort(function(e,t){return e.posY-t.posY});for(var r=0;r<t.length;++r)if(t[r].posY>e)return r;return-1},i.TempVector2_IP=new e.Vector2(0,0),i.TempVector2_TA=new e.Vector2(0,0),i.TempVector2_TB=new e.Vector2(0,0),i.TempVector2_TC=new e.Vector2(0,0),i.TempVector2_POSI=new e.Vector2(0,0),i.TempVector2_POSJ=new e.Vector2(0,0),i.TempVector2_POSIP=new e.Vector2(0,0),i.TempVector2_POSIJ=new e.Vector2(0,0),i.TempVector3_BARY=new e.Vector3(0,0,0),i}();e.BlendTreeSystem=i}(BABYLON||(BABYLON={}));var __extends=this&&this.__extends||function(){var e=function(t,r){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(t,r)};return function(t,r){function i(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(i.prototype=r.prototype,new i)}}(),BABYLON;!function(e){var t=function(e){function t(t,r,i){return void 0===i&&(i={}),e.call(this,t,r,i)||this}return __extends(t,e),t.prototype.start=function(){this.initAnimationState()},t.prototype.update=function(){},t.prototype.after=function(){},t.prototype.destroy=function(){},t.prototype.initAnimationState=function(){console.warn("Dump Animation State Machine: "+this.transform.name),console.log(this)},t}(e.ScriptComponent);e.AnimationState=t}(BABYLON||(BABYLON={}));var __extends=this&&this.__extends||function(){var e=function(t,r){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(t,r)};return function(t,r){function i(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(i.prototype=r.prototype,new i)}}(),BABYLON;!function(e){var t=function(t){function r(e,r,i){void 0===i&&(i={});var s=t.call(this,e,r,i)||this;return s._audio=null,s._name=null,s._file=null,s._loop=!1,s._mute=!1,s._volume=1,s._pitch=1,s._priority=128,s._panstereo=0,s._mindistance=1,s._maxdistance=50,s._rolloffmode="linear",s._rollofffactor=1,s._playonawake=!0,s._spatialblend=0,s._reverbzonemix=1,s._bypasseffects=!1,s._bypassreverbzones=!1,s._bypasslistenereffects=!1,s._name=s.getEditorProperty("name",s._name),s._file=s.getEditorProperty("file",s._file),s._loop=s.getEditorProperty("loop",s._loop),s._mute=s.getEditorProperty("mute",s._mute),s._volume=s.getEditorProperty("volume",s._volume),s._pitch=s.getEditorProperty("pitch",s._pitch),s._priority=s.getEditorProperty("priority",s._priority),s._panstereo=s.getEditorProperty("panstereo",s._panstereo),s._playonawake=s.getEditorProperty("playonawake",s._playonawake),s._mindistance=s.getEditorProperty("mindistance",s._mindistance),s._maxdistance=s.getEditorProperty("maxdistance",s._maxdistance),s._rolloffmode=s.getEditorProperty("rolloffmode",s._rolloffmode),s._rollofffactor=s.getEditorProperty("rollofffactor",s._rollofffactor),s._spatialblend=s.getEditorProperty("spatialblend",s._spatialblend),s._reverbzonemix=s.getEditorProperty("reverbzonemix",s._reverbzonemix),s._bypasseffects=s.getEditorProperty("bypasseffects",s._bypasseffects),s._bypassreverbzones=s.getEditorProperty("bypassreverbzones",s._bypassreverbzones),s._bypasslistenereffects=s.getEditorProperty("bypasslistenereffects",s._bypasslistenereffects),s}return __extends(r,t),r.prototype.getSoundClip=function(){return this._audio},r.prototype.start=function(){this.initAudioSource()},r.prototype.destroy=function(){this.destroyAudioSource()},r.prototype.initAudioSource=function(){var t=this;if(null!=this._name&&""!==this._name||(this._name="Unknown"),null!=this._file&&""!==this._file){var r=e.SceneManager.GetRootUrl(this.scene),i=this._spatialblend>=.1,s="logarithmic"===this._rolloffmode?"exponential":"linear";this._audio=new e.Sound(this._name,r+this._file,this.scene,function(){t._audio.setVolume(t._mute===!0?0:t._volume),t._audio.setPlaybackRate(t._pitch)},{loop:this._loop,autoplay:this._playonawake,refDistance:this._mindistance,maxDistance:this._maxdistance,rolloffFactor:this._rollofffactor,spatialSound:i,distanceModel:s}),this._audio.setPosition(this.transform.position.clone()),i===!0&&this._audio.attachToMesh(this.transform)}},r.prototype.destroyAudioSource=function(){null!=this._audio&&(this._audio.dispose(),this._audio=null)},r}(e.ScriptComponent);e.AudioSource=t}(BABYLON||(BABYLON={}));var __extends=this&&this.__extends||function(){var e=function(t,r){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(t,r)};return function(t,r){function i(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(i.prototype=r.prototype,new i)}}(),BABYLON;!function(e){var t=function(t){function r(r,i,s){void 0===s&&(s={});var o=t.call(this,r,i,s)||this;return o.cameraType=0,o.mainCamera=!1,o.virtualReality=null,o.multiPlayerSetup=null,o.m_cameraRig=null,o.mainCamera="MainCamera"===o.getTransformTag(),o.cameraType=o.getEditorProperty("mainCameraType",o.cameraType),o.virtualReality=o.getEditorProperty("webVirtualReality",o.virtualReality),o.multiPlayerSetup=o.getEditorProperty("multiPlayerSetup",o.multiPlayerSetup),null!=o.multiPlayerSetup&&(e.UniversalCameraSystem.startupMode=o.multiPlayerSetup.playerStartupMode,e.UniversalCameraSystem.stereoCameras=o.multiPlayerSetup.stereoSideBySide),o}return __extends(r,t),r.prototype.isMainCamera=function(){return this.mainCamera},r.prototype.getCameraType=function(){return this.cameraType},r.prototype.start=function(){this.initCameraSystemState()},r.prototype.update=function(){this.updateCameraSystemState()},r.prototype.destroy=function(){this.destroyCameraSystemState()},r.prototype.initCameraSystemState=function(){if(e.Utilities.ValidateTransformQuaternion(this.transform),this.m_cameraRig=this.getCameraRig(),null!=this.m_cameraRig)if(0===this.cameraType)null==e.UniversalCameraSystem.PlayerOneCamera&&(e.UniversalCameraSystem.PlayerOneCamera=this.m_cameraRig,e.UniversalCameraSystem.PlayerOneCamera.inertia=1);else if(1===this.cameraType){if(null!=this.virtualReality&&this.virtualReality.experienceHelper===!0){var t=!1,r=null;if(this.virtualReality.useCustomButton===!0&&null!=this.virtualReality.buttonElementID&&""!==this.virtualReality.buttonElementID){var i=document.getElementById(this.virtualReality.buttonElementID);null!=i?(t=!0,r=i):e.Tools.Warn("Babylon.js failed to locate webvr button element id: "+this.virtualReality.buttonElementID)}var s=null,o=null;null!=this.virtualReality.floorMeshesTags&&""!==this.virtualReality.floorMeshesTags||(this.virtualReality.floorMeshesTags="Navigation"),this.virtualReality.enableTeleportation===!0&&(o=this.scene.getMeshesByTags(this.virtualReality.floorMeshesTags)),s=this.virtualReality.enableTeleportation===!0&&null!=o&&o.length>0?{createDeviceOrientationCamera:1===this.virtualReality.defaultCamera,createFallbackVRDeviceOrientationFreeCamera:this.virtualReality.fallbackCamera,laserToggle:this.virtualReality.displayLaserBeam,useCustomVRButton:t,customVRButton:r,rayLength:this.virtualReality.rayCastLength,defaultHeight:this.virtualReality.defaultHeight,positionScale:this.virtualReality.positionScale,floorMeshes:o}:{createDeviceOrientationCamera:1===this.virtualReality.defaultCamera,createFallbackVRDeviceOrientationFreeCamera:this.virtualReality.fallbackCamera,laserToggle:this.virtualReality.displayLaserBeam,useCustomVRButton:t,customVRButton:r,rayLength:this.virtualReality.rayCastLength,defaultHeight:this.virtualReality.defaultHeight,positionScale:this.virtualReality.positionScale},e.UniversalCameraSystem.DefaultControllers=!0;var n=this.scene.createDefaultVRExperience(s);null!=n&&(n.displayGaze=this.virtualReality.displayGazeIcon,this.virtualReality.enableInteractions===!0&&n.enableInteractions(),n.onControllerMeshLoadedObservable.add(function(t,r){"left"===t.hand?e.UniversalCameraSystem.LeftControllerStick=t:"right"===t.hand&&(e.UniversalCameraSystem.RightControllerStick=t)})),e.UniversalCameraSystem.VrCameraHelper=n}}else if(2===this.cameraType){var a=this.m_cameraRig.name;if(null==e.UniversalCameraSystem.PlayerOneCamera){var l=a+".1",h=this.m_cameraRig.clone(l);h.name=l,h.parent=null,h.position=this.transform.position.clone(),h.rotationQuaternion=this.transform.rotationQuaternion.clone(),h.viewport=new e.Viewport(0,0,0,0),h.setEnabled(!1),e.UniversalCameraSystem.PlayerOneCamera=h,e.UniversalCameraSystem.PlayerOneCamera.inertia=1}if(null==e.UniversalCameraSystem.PlayerTwoCamera){var c=a+".2",u=this.m_cameraRig.clone(c);u.name=c,u.parent=null,u.position=this.transform.position.clone(),u.rotationQuaternion=this.transform.rotationQuaternion.clone(),u.viewport=new e.Viewport(0,0,0,0),u.setEnabled(!1),e.UniversalCameraSystem.PlayerTwoCamera=u,e.UniversalCameraSystem.PlayerTwoCamera.inertia=1}if(null==e.UniversalCameraSystem.PlayerThreeCamera){var m=a+".3",p=this.m_cameraRig.clone(m);p.name=m,p.parent=null,p.position=this.transform.position.clone(),p.rotationQuaternion=this.transform.rotationQuaternion.clone(),p.viewport=new e.Viewport(0,0,0,0),p.setEnabled(!1),e.UniversalCameraSystem.PlayerThreeCamera=p,e.UniversalCameraSystem.PlayerThreeCamera.inertia=1}if(null==e.UniversalCameraSystem.PlayerFourCamera){var f=a+".4",y=this.m_cameraRig.clone(f);y.name=f,y.parent=null,y.position=this.transform.position.clone(),y.rotationQuaternion=this.transform.rotationQuaternion.clone(),y.viewport=new e.Viewport(0,0,0,0),y.setEnabled(!1),e.UniversalCameraSystem.PlayerFourCamera=y,e.UniversalCameraSystem.PlayerFourCamera.inertia=1}e.UniversalCameraSystem.multiPlayerView=!0,e.UniversalCameraSystem.SetMultiPlayerViewLayout(this.scene,e.UniversalCameraSystem.startupMode)}},r.prototype.updateCameraSystemState=function(){null!=this.m_cameraRig&&(0===this.cameraType||1===this.cameraType||2===this.cameraType)},r.prototype.destroyCameraSystemState=function(){this.virtualReality=null},r.GetPlayerCamera=function(t){return e.UniversalCameraSystem.IsMultiPlayerView()?t===e.PlayerNumber.One?e.UniversalCameraSystem.PlayerOneCamera:t===e.PlayerNumber.Two?e.UniversalCameraSystem.PlayerTwoCamera:t===e.PlayerNumber.Three?e.UniversalCameraSystem.PlayerThreeCamera:t===e.PlayerNumber.Four?e.UniversalCameraSystem.PlayerFourCamera:null:t===e.PlayerNumber.One?null!=e.UniversalCameraSystem.WebVR?e.UniversalCameraSystem.WebVR.currentVRCamera:e.UniversalCameraSystem.PlayerOneCamera:(e.Tools.Warn("Babylon.js multi player camera not available for player: "+t),null)},Object.defineProperty(r,"WebVR",{get:function(){return e.UniversalCameraSystem.VrCameraHelper},enumerable:!0,configurable:!0}),r.GetWebVRLeftController=function(){return e.UniversalCameraSystem.LeftControllerStick},r.GetWebVRRightController=function(){return e.UniversalCameraSystem.RightControllerStick},r.GetWebVRLeftControllerPrefab=function(){return e.UniversalCameraSystem.LeftControllerPrefab},r.GetWebVRRightControllerPrefab=function(){return e.UniversalCameraSystem.RightControllerPrefab},r.ShowWebVRDefaultControllers=function(t,r){void 0===t&&(t=null),void 0===r&&(r=null),null!=e.UniversalCameraSystem.LeftControllerStick&&(e.UniversalCameraSystem.LeftControllerStick.mesh.setEnabled(!1),e.UniversalCameraSystem.LeftControllerStick.attachToMesh(e.UniversalCameraSystem.LeftControllerStick.defaultModel),e.UniversalCameraSystem.LeftControllerStick.mesh.setEnabled(!0),e.UniversalCameraSystem.DefaultControllers=!0),null!=e.UniversalCameraSystem.RightControllerStick&&(e.UniversalCameraSystem.RightControllerStick.mesh.setEnabled(!1),e.UniversalCameraSystem.RightControllerStick.attachToMesh(e.UniversalCameraSystem.RightControllerStick.defaultModel),e.UniversalCameraSystem.RightControllerStick.mesh.setEnabled(!0),e.UniversalCameraSystem.DefaultControllers=!0),null!=e.UniversalCameraSystem.WebVR&&(null!=t&&(e.UniversalCameraSystem.WebVR.displayGaze=t),null!=r&&(e.UniversalCameraSystem.WebVR.displayLaserPointer=r))},r.ShowWebVRCustomControllers=function(t,r){void 0===t&&(t=null),void 0===r&&(r=null),null!=e.UniversalCameraSystem.LeftControllerStick&&(e.UniversalCameraSystem.LeftControllerStick.mesh.setEnabled(!1),e.UniversalCameraSystem.LeftControllerStick.attachToMesh(e.UniversalCameraSystem.LeftControllerPrefab),e.UniversalCameraSystem.LeftControllerStick.mesh.setEnabled(!0),e.UniversalCameraSystem.DefaultControllers=!1),null!=e.UniversalCameraSystem.RightControllerStick&&(e.UniversalCameraSystem.RightControllerStick.mesh.setEnabled(!1),e.UniversalCameraSystem.RightControllerStick.attachToMesh(e.UniversalCameraSystem.RightControllerPrefab),e.UniversalCameraSystem.RightControllerStick.mesh.setEnabled(!0),e.UniversalCameraSystem.DefaultControllers=!1),null!=e.UniversalCameraSystem.WebVR&&(null!=t&&(e.UniversalCameraSystem.WebVR.displayGaze=t),null!=r&&(e.UniversalCameraSystem.WebVR.displayLaserPointer=r))},r.IsStereoCameras=function(){return e.UniversalCameraSystem.stereoCameras},r.IsMultiPlayerView=function(){return e.UniversalCameraSystem.multiPlayerView},r.GetMultiPlayerCount=function(){return e.UniversalCameraSystem.multiPlayerCount},r.ActivateMultiPlayerCameras=function(t){var r=!1;return null!=e.UniversalCameraSystem.multiPlayerCameras&&e.UniversalCameraSystem.multiPlayerCameras.length>0&&(t.activeCameras=e.UniversalCameraSystem.multiPlayerCameras,r=!0),r},r.DisposeMultiPlayerCameras=function(){null!=e.UniversalCameraSystem.PlayerOneCamera&&(e.UniversalCameraSystem.PlayerOneCamera.dispose(),e.UniversalCameraSystem.PlayerOneCamera=null),null!=e.UniversalCameraSystem.PlayerTwoCamera&&(e.UniversalCameraSystem.PlayerTwoCamera.dispose(),e.UniversalCameraSystem.PlayerTwoCamera=null),null!=e.UniversalCameraSystem.PlayerThreeCamera&&(e.UniversalCameraSystem.PlayerThreeCamera.dispose(),e.UniversalCameraSystem.PlayerThreeCamera=null),null!=e.UniversalCameraSystem.PlayerFourCamera&&(e.UniversalCameraSystem.PlayerFourCamera.dispose(),e.UniversalCameraSystem.PlayerFourCamera=null)},r.SetMultiPlayerViewLayout=function(t,r){var i=!1,s=e.Scalar.Clamp(r,1,4);return e.UniversalCameraSystem.IsMultiPlayerView()?(null!=e.UniversalCameraSystem.PlayerOneCamera&&null!=e.UniversalCameraSystem.PlayerTwoCamera&&null!=e.UniversalCameraSystem.PlayerThreeCamera&&null!=e.UniversalCameraSystem.PlayerFourCamera?(e.UniversalCameraSystem.multiPlayerCameras=[],1===s?(e.UniversalCameraSystem.PlayerOneCamera.viewport=new e.Viewport(0,0,1,1),e.UniversalCameraSystem.PlayerTwoCamera.viewport=new e.Viewport(0,0,0,0),e.UniversalCameraSystem.PlayerTwoCamera.setEnabled(!1),e.UniversalCameraSystem.PlayerThreeCamera.viewport=new e.Viewport(0,0,0,0),e.UniversalCameraSystem.PlayerThreeCamera.setEnabled(!1),e.UniversalCameraSystem.PlayerFourCamera.viewport=new e.Viewport(0,0,0,0),e.UniversalCameraSystem.PlayerFourCamera.setEnabled(!1),e.UniversalCameraSystem.multiPlayerCameras.push(e.UniversalCameraSystem.PlayerOneCamera)):2===s?(e.UniversalCameraSystem.stereoCameras===!0?(e.UniversalCameraSystem.PlayerOneCamera.viewport=new e.Viewport(0,0,.5,1),e.UniversalCameraSystem.PlayerTwoCamera.viewport=new e.Viewport(.5,0,.5,1)):(e.UniversalCameraSystem.PlayerOneCamera.viewport=new e.Viewport(0,.5,1,.5),e.UniversalCameraSystem.PlayerTwoCamera.viewport=new e.Viewport(0,0,1,.5)),e.UniversalCameraSystem.PlayerTwoCamera.setEnabled(!0),e.UniversalCameraSystem.PlayerThreeCamera.viewport=new e.Viewport(0,0,0,0),e.UniversalCameraSystem.PlayerThreeCamera.setEnabled(!1),e.UniversalCameraSystem.PlayerFourCamera.viewport=new e.Viewport(0,0,0,0),e.UniversalCameraSystem.PlayerFourCamera.setEnabled(!1),e.UniversalCameraSystem.multiPlayerCameras.push(e.UniversalCameraSystem.PlayerOneCamera),e.UniversalCameraSystem.multiPlayerCameras.push(e.UniversalCameraSystem.PlayerTwoCamera)):3===s?(e.UniversalCameraSystem.PlayerOneCamera.viewport=new e.Viewport(0,0,.5,1),e.UniversalCameraSystem.PlayerTwoCamera.viewport=new e.Viewport(.5,.5,.5,.5),e.UniversalCameraSystem.PlayerTwoCamera.setEnabled(!0),e.UniversalCameraSystem.PlayerThreeCamera.viewport=new e.Viewport(.5,0,.5,.5),e.UniversalCameraSystem.PlayerThreeCamera.setEnabled(!0),e.UniversalCameraSystem.PlayerFourCamera.viewport=new e.Viewport(0,0,0,0),e.UniversalCameraSystem.PlayerFourCamera.setEnabled(!1),e.UniversalCameraSystem.multiPlayerCameras.push(e.UniversalCameraSystem.PlayerOneCamera),e.UniversalCameraSystem.multiPlayerCameras.push(e.UniversalCameraSystem.PlayerTwoCamera),e.UniversalCameraSystem.multiPlayerCameras.push(e.UniversalCameraSystem.PlayerThreeCamera)):4===s?(e.UniversalCameraSystem.PlayerOneCamera.viewport=new e.Viewport(0,.5,.5,.5),e.UniversalCameraSystem.PlayerTwoCamera.viewport=new e.Viewport(0,0,.5,.5),e.UniversalCameraSystem.PlayerTwoCamera.setEnabled(!0),e.UniversalCameraSystem.PlayerThreeCamera.viewport=new e.Viewport(.5,.5,.5,.5),e.UniversalCameraSystem.PlayerThreeCamera.setEnabled(!0),e.UniversalCameraSystem.PlayerFourCamera.viewport=new e.Viewport(.5,0,.5,.5),e.UniversalCameraSystem.PlayerFourCamera.setEnabled(!0),e.UniversalCameraSystem.multiPlayerCameras.push(e.UniversalCameraSystem.PlayerOneCamera),e.UniversalCameraSystem.multiPlayerCameras.push(e.UniversalCameraSystem.PlayerTwoCamera),e.UniversalCameraSystem.multiPlayerCameras.push(e.UniversalCameraSystem.PlayerThreeCamera),e.UniversalCameraSystem.multiPlayerCameras.push(e.UniversalCameraSystem.PlayerFourCamera)):e.Tools.Warn("Babylon.js camera rig invalid player count specified: "+s)):e.Tools.Warn("Babylon.js camera rig failed to initialize multi player cameras"),e.UniversalCameraSystem.multiPlayerCount=s,i=e.UniversalCameraSystem.ActivateMultiPlayerCameras(t),i===!1&&e.Tools.Warn("Babylon.js camera rig failed to initialize multi player views")):e.Tools.Warn("Babylon.js camera rig multi player view option not enabled"),i},r.VrCameraHelper=null,r.DefaultControllers=!0,r.LeftControllerStick=null,r.RightControllerStick=null,r.LeftControllerPrefab=null,r.RightControllerPrefab=null,r.PlayerOneCamera=null,r.PlayerTwoCamera=null,r.PlayerThreeCamera=null,r.PlayerFourCamera=null,r.multiPlayerView=!1,r.multiPlayerCount=1,r.multiPlayerCameras=null,r.stereoCameras=!0,r.startupMode=1,r}(e.ScriptComponent);e.UniversalCameraSystem=t}(BABYLON||(BABYLON={}));var __extends=this&&this.__extends||function(){var e=function(t,r){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(t,r)};return function(t,r){function i(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(i.prototype=r.prototype,new i)}}(),BABYLON;!function(e){var t=function(t){function r(r,i,s){void 0===s&&(s={});var o=t.call(this,r,i,s)||this;return o._abstractMesh=null,o._avatarRadius=.5,o._avatarHeight=2,o._skinWidth=.08,o._stepOffset=.3,o._slopeLimit=45,o._minMoveDistance=.001,o._isPhysicsReady=!1,o._maxCollisions=4,o._useGhostSweepTest=!1,o._tmpAmmoQuaternion=null,o._tmpOriginQuaternion=null,o._tmpRotateQuaternion=null,o._tmpBabylonQuaternion=null,o._tmpBabylonEulerVector=null,o._tmpCollisionContacts=null,o.m_character=null,o.m_ghostShape=null,o.m_ghostObject=null,o.m_ghostCollision=null,o.m_ghostTransform=null,o.m_ghostPosition=null,o.m_ghostRotation=null,o.m_startPosition=null,o.m_startRotation=null,o.m_startTransform=null,o.m_walkDirection=null,o.m_warpPosition=null,o.m_turningRate=0,o.m_moveDeltaX=0,o.m_moveDeltaZ=0,o.m_physicsEngine=null,o._onCollisionEnterObservable=new e.Observable,o._onCollisionStayObservable=new e.Observable,o._onCollisionExitObservable=new e.Observable,o._abstractMesh=o.getAbstractMesh(),o._avatarRadius=o.getEditorProperty("avatarRadius",o._avatarRadius),o._avatarHeight=o.getEditorProperty("avatarHeight",o._avatarHeight),o._skinWidth=o.getEditorProperty("skinWidth",o._skinWidth),o._slopeLimit=o.getEditorProperty("slopeLimit",o._slopeLimit),o._stepOffset=o.getEditorProperty("stepOffset",o._stepOffset),o._minMoveDistance=o.getEditorProperty("minMoveDistance",o._minMoveDistance),o._useGhostSweepTest=o.getEditorProperty("useGhostSweepTest",o._useGhostSweepTest),o._tmpAmmoQuaternion=new Ammo.btQuaternion(0,0,0,1),o._tmpOriginQuaternion=new Ammo.btQuaternion(0,0,0,1),o._tmpRotateQuaternion=new Ammo.btQuaternion(0,0,0,1),o._tmpBabylonQuaternion=new e.Quaternion(0,0,0,1),o._tmpBabylonEulerVector=new e.Vector3(0,0,0),o._tmpBabylonQuaternion=new e.Quaternion(0,0,0,1),o.m_warpPosition=new Ammo.btVector3(0,0,0),o.m_walkDirection=new Ammo.btVector3(0,0,0),o.m_physicsEngine=e.SceneManager.GetPhysicsEngine(o.scene),o.setMaxNotifications(o._maxCollisions),o}return __extends(r,t),r.prototype.getAvatarRadius=function(){return this._avatarRadius},r.prototype.getAvatarHeight=function(){return this._avatarHeight},r.prototype.getSkinWidth=function(){return this._skinWidth},r.prototype.getStepOffset=function(){return this._stepOffset},r.prototype.getUseSweepTest=function(){return this._useGhostSweepTest},r.prototype.getMinMoveDistance=function(){return this._minMoveDistance},r.prototype.setMinMoveDistance=function(e){this._minMoveDistance=e},r.prototype.getVerticalVelocity=function(){return null!=this.m_character&&this.m_character.getVerticalVelocity?this.m_character.getVerticalVelocity():0},r.prototype.setMaxJumpHeight=function(e){null!=this.m_character&&this.m_character.setMaxJumpHeight(e)},r.prototype.setFallingSpeed=function(e){null!=this.m_character&&this.m_character.setFallSpeed(e)},r.prototype.getSlopeLimit=function(){return null!=this.m_character?this.m_character.getMaxSlope():0},r.prototype.setSlopeLimit=function(e){null!=this.m_character&&this.m_character.setMaxSlope(e)},r.prototype.setUpAxis=function(e){null!=this.m_character&&this.m_character.setUpAxis(e)},r.prototype.getGravity=function(){return null!=this.m_character?this.m_character.getGravity():0},r.prototype.setGravity=function(e){null!=this.m_character&&this.m_character.setGravity(e)},r.prototype.isGrounded=function(){return null!=this.m_character&&this.m_character.onGround()},r.prototype.isReady=function(){return null!=this.m_character},r.prototype.canJump=function(){return null!=this.m_character&&this.m_character.canJump()},r.prototype.internalWarp=function(e){null!=this.m_character&&this.m_character.warp(e)},r.prototype.internalJump=function(){null!=this.m_character&&this.m_character.jump()},r.prototype.internalSetJumpSpeed=function(e){null!=this.m_character&&this.m_character.setJumpSpeed(e)},r.prototype.internalSetWalkDirection=function(e){null!=this.m_character&&this.m_character.setWalkDirection(e)},r.prototype.internalSetVelocityForTimeInterval=function(e,t){null!=this.m_character&&this.m_character.setVelocityForTimeInterval(e,t)},r.prototype.start=function(){this.initMovementState()},r.prototype.update=function(){this.updateMovementState()},r.prototype.after=function(){this.afterMovementState()},r.prototype.destroy=function(){this.destroyMovementState()},r.prototype.initMovementState=function(){e.Utilities.ValidateTransformQuaternion(this.transform);var t=e.SceneManager.GetPhysicsWorld(this.scene);null!=t?(this.m_startPosition=new Ammo.btVector3(this.transform.position.x,this.transform.position.y,this.transform.position.z),this.m_startRotation=new Ammo.btQuaternion(this.transform.rotationQuaternion.x,this.transform.rotationQuaternion.y,this.transform.rotationQuaternion.z,this.transform.rotationQuaternion.w),this.m_startTransform=new Ammo.btTransform,this.m_startTransform.setIdentity(),this.m_startTransform.setOrigin(this.m_startPosition),this.m_startTransform.setRotation(this.m_startRotation),this.m_ghostShape=new Ammo.btCapsuleShape(this._avatarRadius,.5*this._avatarHeight),this.m_ghostShape.setMargin(this._skinWidth),this.m_ghostObject=new Ammo.btPairCachingGhostObject,this.m_ghostObject.setWorldTransform(this.m_startTransform),this.m_ghostObject.setCollisionShape(this.m_ghostShape),this.m_ghostObject.setCollisionFlags(e.CollisionFlags.CF_CHARACTER_OBJECT),this.m_ghostCollision=Ammo.castObject(this.m_ghostObject,Ammo.btCollisionObject),this.m_ghostCollision.entity=this._abstractMesh,this.m_character=new Ammo.btKinematicCharacterController(this.m_ghostObject,this.m_ghostShape,this._stepOffset),this.m_character.setUseGhostSweepTest(this._useGhostSweepTest),this.m_character.setUpInterpolate(!0),this.m_character.setMaxSlope(this._slopeLimit*e.System.Deg2Rad),this.m_character.setGravity(e.System.Gravity3G),t.addCollisionObject(this.m_ghostObject,e.CollisionFilters.CharacterFilter,e.CollisionFilters.StaticFilter|e.CollisionFilters.DefaultFilter|e.CollisionFilters.CharacterFilter),t.addAction(this.m_character)):e.Tools.Warn("Null physics world detected. Failed to create character controller: "+this.transform.name),this._isPhysicsReady=null!=this.m_physicsEngine&&null!=this._tmpCollisionContacts&&null!=this.m_ghostObject&&null!=this._abstractMesh,this.updateMovementState(),this.afterMovementState()},r.prototype.syncMovementState=function(){this._isPhysicsReady===!0&&(this.m_ghostTransform=this.m_ghostObject.getWorldTransform(),null!=this.m_ghostTransform?(this.m_ghostPosition=this.m_ghostTransform.getOrigin(),this.m_ghostRotation=this.m_ghostTransform.getRotation()):(this.m_ghostPosition=null,this.m_ghostRotation=null))},r.prototype.updateMovementState=function(){this.syncMovementState(),this._isPhysicsReady===!0&&(0!==this.m_turningRate&&null!=this.m_ghostTransform&&null!=this.m_ghostRotation&&(this._tmpBabylonQuaternion.set(this.m_ghostRotation.x(),this.m_ghostRotation.y(),this.m_ghostRotation.z(),this.m_ghostRotation.w()),e.Utilities.ToEulerToRef(this._tmpBabylonQuaternion,this._tmpBabylonEulerVector),this._tmpBabylonEulerVector.y+=this.m_turningRate,e.Utilities.FromEulerToRef(this._tmpBabylonEulerVector.x,this._tmpBabylonEulerVector.y,this._tmpBabylonEulerVector.z,this._tmpBabylonQuaternion),this._tmpAmmoQuaternion.setValue(this._tmpBabylonQuaternion.x,this._tmpBabylonQuaternion.y,this._tmpBabylonQuaternion.z,this._tmpBabylonQuaternion.w),this.m_ghostTransform.setRotation(this._tmpAmmoQuaternion),this.m_ghostObject.setWorldTransform(this.m_ghostTransform)),null!=this.m_walkDirection&&this.internalSetWalkDirection(this.m_walkDirection))},r.prototype.afterMovementState=function(){this.syncMovementState(),this._isPhysicsReady===!0&&(null!=this.m_ghostPosition&&this.transform.position.set(this.m_ghostPosition.x(),this.m_ghostPosition.y(),this.m_ghostPosition.z()),null!=this.m_ghostRotation&&this.transform.rotationQuaternion.set(this.m_ghostRotation.x(),this.m_ghostRotation.y(),this.m_ghostRotation.z(),this.m_ghostRotation.w())),this.parseGhostCollisionContacts()},r.prototype.parseGhostCollisionContacts=function(){if(this._isPhysicsReady===!0){var e=this._onCollisionEnterObservable.hasObservers(),t=this._onCollisionStayObservable.hasObservers(),r=this._onCollisionExitObservable.hasObservers();if(e||t||r){var i=0;for(i=0;i<this._tmpCollisionContacts.length;i++)this._tmpCollisionContacts[i].reset=!0;var s=this.m_ghostObject.getNumOverlappingObjects();if(s>this._maxCollisions&&(s=this._maxCollisions),s>0)for(i=0;i<s;i++){var o=this.m_ghostObject.getOverlappingObject(i);if(null!=o){
var n=Ammo.castObject(o,Ammo.btCollisionObject);if(null!=n&&null!=n.entity&&n.isActive()){var a=-1,l=n.entity;for(i=0;i<this._tmpCollisionContacts.length;i++){var h=this._tmpCollisionContacts[i];if(null!=h.mesh&&h.mesh===l){h.state=1,h.reset=!1,a=i;break}}if(a===-1)for(i=0;i<this._tmpCollisionContacts.length;i++){var c=this._tmpCollisionContacts[i];if(null==c.mesh){c.mesh=l,c.state=0,c.reset=!1;break}}}}}for(i=0;i<this._tmpCollisionContacts.length;i++){var u=this._tmpCollisionContacts[i];u.reset===!0?(r&&null!=u.mesh&&this._onCollisionExitObservable.notifyObservers(u.mesh),u.mesh=null,u.state=0,u.reset=!1):0===u.state?e&&null!=u.mesh&&this._onCollisionEnterObservable.notifyObservers(u.mesh):t&&null!=u.mesh&&this._onCollisionStayObservable.notifyObservers(u.mesh)}}}},r.prototype.destroyMovementState=function(){this.m_physicsEngine=null,null!=this.m_character&&(Ammo.destroy(this.m_character),this.m_character=null),null!=this.m_ghostObject&&(Ammo.destroy(this.m_ghostObject),this.m_ghostObject=null),null!=this.m_ghostShape&&(Ammo.destroy(this.m_ghostShape),this.m_ghostShape=null),null!=this.m_ghostCollision&&(Ammo.destroy(this.m_ghostCollision),this.m_ghostCollision=null),null!=this.m_ghostPosition&&(Ammo.destroy(this.m_ghostPosition),this.m_ghostPosition=null),null!=this.m_ghostRotation&&(Ammo.destroy(this.m_ghostRotation),this.m_ghostRotation=null),null!=this.m_ghostTransform&&(Ammo.destroy(this.m_ghostTransform),this.m_ghostTransform=null),null!=this.m_startPosition&&(Ammo.destroy(this.m_startPosition),this.m_startPosition=null),null!=this.m_startRotation&&(Ammo.destroy(this.m_startRotation),this.m_startRotation=null),null!=this.m_startTransform&&(Ammo.destroy(this.m_startTransform),this.m_startTransform=null),null!=this.m_warpPosition&&(Ammo.destroy(this.m_warpPosition),this.m_warpPosition=null),null!=this.m_walkDirection&&(Ammo.destroy(this.m_walkDirection),this.m_walkDirection=null),null!=this._tmpAmmoQuaternion&&(Ammo.destroy(this._tmpAmmoQuaternion),this._tmpAmmoQuaternion=null),null!=this._tmpOriginQuaternion&&(Ammo.destroy(this._tmpOriginQuaternion),this._tmpOriginQuaternion=null),null!=this._tmpRotateQuaternion&&(Ammo.destroy(this._tmpRotateQuaternion),this._tmpRotateQuaternion=null),this._onCollisionEnterObservable.clear(),this._onCollisionEnterObservable=null,this._onCollisionStayObservable.clear(),this._onCollisionStayObservable=null,this._onCollisionExitObservable.clear(),this._onCollisionExitObservable=null,this._tmpCollisionContacts=null,this._abstractMesh=null},r.prototype.registerOnCollisionEnter=function(e){return this._onCollisionEnterObservable.add(e)},r.prototype.unregisterOnCollisionEnter=function(e){return this._onCollisionEnterObservable.remove(e)},r.prototype.registerOnCollisionStay=function(e){return this._onCollisionStayObservable.add(e)},r.prototype.unregisterOnCollisionStay=function(e){return this._onCollisionStayObservable.remove(e)},r.prototype.registerOnCollisionExit=function(e){return this._onCollisionExitObservable.add(e)},r.prototype.unregisterOnCollisionExit=function(e){return this._onCollisionExitObservable.remove(e)},r.prototype.setMaxNotifications=function(t){this._maxCollisions=t,this._tmpCollisionContacts=[];for(var r=0;r<this._maxCollisions;r++)this._tmpCollisionContacts.push(new e.CollisionContactInfo)},r.prototype.setActivationState=function(e){null!=this.m_ghostCollision&&this.m_ghostCollision.setActivationState&&this.m_ghostCollision.setActivationState(e)},r.prototype.getCollisionFilterGroup=function(){var e=-1;return null!=this.m_ghostCollision&&this.m_ghostCollision.getBroadphaseHandle&&(e=this.m_ghostCollision.getBroadphaseHandle().get_m_collisionFilterGroup()),e},r.prototype.setCollisionFilterGroup=function(e){null!=this.m_ghostCollision&&this.m_ghostCollision.getBroadphaseHandle&&this.m_ghostCollision.getBroadphaseHandle().set_m_collisionFilterGroup(e)},r.prototype.getCollisionFilterMask=function(){var e=-1;return null!=this.m_ghostCollision&&this.m_ghostCollision.getBroadphaseHandle&&(e=this.m_ghostCollision.getBroadphaseHandle().get_m_collisionFilterMask()),e},r.prototype.setCollisionFilterMask=function(e){null!=this.m_ghostCollision&&this.m_ghostCollision.getBroadphaseHandle&&this.m_ghostCollision.getBroadphaseHandle().set_m_collisionFilterMask(e)},r.prototype.getContactProcessingThreshold=function(){var e=-1;return null!=this.m_ghostCollision&&this.m_ghostCollision.getContactProcessingThreshold&&this.m_ghostCollision.getContactProcessingThreshold(),e},r.prototype.setContactProcessingThreshold=function(e){null!=this.m_ghostCollision&&this.m_ghostCollision.setContactProcessingThreshold&&this.m_ghostCollision.setContactProcessingThreshold(e)},r.prototype.setGhostWorldTransform=function(e,t){null!=this.m_ghostObject&&null!=this.m_ghostTransform&&(null!=this.m_ghostPosition&&null!=e&&(this.m_ghostPosition.setValue(e.x,e.y,e.z),this.m_ghostTransform.setOrigin(this.m_ghostPosition)),null!=this.m_ghostRotation&&null!=t&&(this.m_ghostRotation.setValue(t.x,t.y,t.z,t.w),this.m_ghostTransform.setRotation(this.m_ghostRotation)),this.m_ghostObject.setWorldTransform(this.m_ghostTransform))},r.prototype.move=function(e){null!=e&&(this.m_moveDeltaX=e.x,this.m_moveDeltaZ=e.z,Math.abs(e.x)<this._minMoveDistance&&(e.x>0?this.m_moveDeltaX=this._minMoveDistance:e.x<0&&(this.m_moveDeltaX=-this._minMoveDistance)),Math.abs(e.z)<this._minMoveDistance&&(e.z>0?this.m_moveDeltaZ=this._minMoveDistance:e.z<0&&(this.m_moveDeltaZ=-this._minMoveDistance)),null!=this.m_walkDirection&&this.m_walkDirection.setValue(this.m_moveDeltaX,0,this.m_moveDeltaZ))},r.prototype.turn=function(e){this.m_turningRate=e},r.prototype.jump=function(e){this.internalSetJumpSpeed(e),this.internalJump()},r.prototype.warp=function(e){null!=this.m_warpPosition&&(this.m_warpPosition.setValue(e.x,e.y,e.z),this.internalWarp(this.m_warpPosition))},r}(e.ScriptComponent);e.CharacterController=t}(BABYLON||(BABYLON={}));var __extends=this&&this.__extends||function(){var e=function(t,r){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(t,r)};return function(t,r){function i(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(i.prototype=r.prototype,new i)}}(),BABYLON;!function(e){var t=function(t){function r(e,r,i){return void 0===i&&(i={}),t.call(this,e,r,i)||this}return __extends(r,t),Object.defineProperty(r.prototype,"info",{get:function(){return this._info},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"hasAgentInfo",{get:function(){return null!=this.info},enumerable:!0,configurable:!0}),r.prototype.start=function(){},r.prototype.update=function(){},r.prototype.after=function(){},r.prototype.destroy=function(){},r.prototype.setDestination=function(t){this.hasAgentInfo||e.Tools.Warn("Null navigation agent metadata. Set agent destination ignored.")},r.GetNavigationMesh=function(t){return e.SceneManager.GetAbstractMesh(t,"NavigationMesh")},r.GetNavigationZone=function(){return"scene"},r.BuildNavigationNodes=function(t,r){void 0===r&&(r=null);var i=null,s=r||e.NavigationAgent.GetNavigationMesh(t);if(null!=s){i=new Navigation;var o=i.buildNodes(s);null!=o?i.setZoneData(e.NavigationAgent.GetNavigationZone(),o):e.Tools.Warn("Failed to build navigation zone nodes")}else e.Tools.Warn("Failed to locate scene navigation mesh");return i},r.FindNavigationPath=function(t,r,i){var s=e.NavigationAgent.GetNavigationZone(),o=t.getGroup(s,r);return t.findPath(r,i,s,o)},r}(e.ScriptComponent);e.NavigationAgent=t}(BABYLON||(BABYLON={}));var __extends=this&&this.__extends||function(){var e=function(t,r){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(t,r)};return function(t,r){function i(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(i.prototype=r.prototype,new i)}}(),BABYLON;!function(e){var t=function(e){function t(t,r,i){return void 0===i&&(i={}),e.call(this,t,r,i)||this}return __extends(t,e),t.prototype.start=function(){},t.prototype.update=function(){},t.prototype.after=function(){},t.prototype.destroy=function(){},t}(e.ScriptComponent);e.NetworkSystem=t}(BABYLON||(BABYLON={}));var __extends=this&&this.__extends||function(){var e=function(t,r){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(t,r)};return function(t,r){function i(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(i.prototype=r.prototype,new i)}}(),BABYLON;!function(e){var t=function(e){function t(t,r,i){return void 0===i&&(i={}),e.call(this,t,r,i)||this}return __extends(t,e),t.prototype.start=function(){},t.prototype.update=function(){},t.prototype.after=function(){},t.prototype.destroy=function(){},t}(e.ScriptComponent);e.ShurikenParticleSystem=t}(BABYLON||(BABYLON={}));var BABYLON;!function(e){var t=function(){function t(t,r,i,s){this._rightHanded=!1,this._centerMass=new e.Vector3(0,0,0),this._chassisMesh=null,this._tempVectorPos=new e.Vector3(0,0,0),this.lockedWheelIndexes=null,this.m_vehicle=null,this.m_vehicleTuning=null,this.m_vehicleRaycaster=null,this.m_vehicleColliders=null,this.m_tempTransform=null,this.m_tempPosition=null,this.m_wheelDirectionCS0=null,this.m_wheelAxleCS=null,this._rightHanded=i,this._chassisMesh=t,this._centerMass=s,this.m_vehicleColliders=this._chassisMesh.metadata.wheels,this.m_vehicleTuning=new Ammo.btVehicleTuning,this.m_vehicleRaycaster=new Ammo.btSmoothVehicleRaycaster(r),this.m_vehicle=new Ammo.btRaycastVehicle(this.m_vehicleTuning,this._chassisMesh.physicsImpostor.physicsBody,this.m_vehicleRaycaster),this.m_vehicle.setCoordinateSystem(0,1,2),this.m_wheelDirectionCS0=new Ammo.btVector3(0,(-1),0),this.m_wheelAxleCS=new Ammo.btVector3((-1),0,0),this.m_tempPosition=null,this.m_tempTransform=null,r.addAction(this.m_vehicle),this.setupWheelInformation()}return t.prototype.getUpAxis=function(){if(null!=this.m_vehicle)return this.m_vehicle.getUpAxis()},t.prototype.getRightAxis=function(){if(null!=this.m_vehicle)return this.m_vehicle.getRightAxis()},t.prototype.getForwardAxis=function(){if(null!=this.m_vehicle)return this.m_vehicle.getForwardAxis()},t.prototype.getForwardVector=function(){if(null!=this.m_vehicle)return this.m_vehicle.getForwardVector()},t.prototype.getNumWheels=function(){if(null!=this.m_vehicle)return this.m_vehicle.getNumWheels()},t.prototype.getWheelInfo=function(e){if(null!=this.m_vehicle)return this.m_vehicle.getWheelInfo(e)},t.prototype.resetSuspension=function(){null!=this.m_vehicle&&this.m_vehicle.resetSuspension()},t.prototype.setPitchControl=function(e){null!=this.m_vehicle&&this.m_vehicle.setPitchControl(e)},t.prototype.setEngineForce=function(e,t){null!=this.m_vehicle&&this.m_vehicle.applyEngineForce(this._rightHanded?e*-1:e,t)},t.prototype.setBrakingForce=function(e,t){null!=this.m_vehicle&&this.m_vehicle.setBrake(this._rightHanded?1*e:e,t)},t.prototype.getWheelTransform=function(e){if(null!=this.m_vehicle)return this.m_vehicle.getWheelTransformWS(e)},t.prototype.updateWheelTransform=function(e,t){null!=this.m_vehicle&&this.m_vehicle.updateWheelTransform(e,t)},t.prototype.getUserConstraintType=function(){if(null!=this.m_vehicle)return this.m_vehicle.getUserConstraintType()},t.prototype.setUserConstraintType=function(e){null!=this.m_vehicle&&this.m_vehicle.setUserConstraintType(e)},t.prototype.setUserConstraintId=function(e){null!=this.m_vehicle&&this.m_vehicle.setUserConstraintId(e)},t.prototype.getUserConstraintId=function(){if(null!=this.m_vehicle)return this.m_vehicle.getUserConstraintId()},t.prototype.getRawCurrentSpeedKph=function(){if(null!=this.m_vehicle)return this.m_vehicle.getCurrentSpeedKmHour()},t.prototype.getRawCurrentSpeedMph=function(){if(null!=this.m_vehicle)return this.m_vehicle.getCurrentSpeedKmHour()*e.System.Kph2Mph},t.prototype.getAbsCurrentSpeedKph=function(){if(null!=this.m_vehicle)return Math.abs(this.m_vehicle.getCurrentSpeedKmHour())},t.prototype.getAbsCurrentSpeedMph=function(){if(null!=this.m_vehicle)return Math.abs(this.m_vehicle.getCurrentSpeedKmHour())*e.System.Kph2Mph},t.prototype.getVehicleTuningSystem=function(){return this.m_vehicleTuning},t.prototype.getChassisWorldTransform=function(){if(null!=this.m_vehicle)return this.m_vehicle.getChassisWorldTransform()},t.prototype.dispose=function(){this.deleteWheelInformation(),null!=this.m_vehicle&&(Ammo.destroy(this.m_vehicle),this.m_vehicle=null),null!=this.m_vehicleTuning&&(Ammo.destroy(this.m_vehicleTuning),this.m_vehicleTuning=null),null!=this.m_vehicleRaycaster&&(Ammo.destroy(this.m_vehicleRaycaster),this.m_vehicleRaycaster=null),null!=this.m_wheelDirectionCS0&&(Ammo.destroy(this.m_wheelDirectionCS0),this.m_wheelDirectionCS0=null),null!=this.m_wheelAxleCS&&(Ammo.destroy(this.m_wheelAxleCS),this.m_wheelAxleCS=null),null!=this.m_tempPosition&&(Ammo.destroy(this.m_tempPosition),this.m_tempPosition=null),null!=this.m_tempTransform&&(Ammo.destroy(this.m_tempTransform),this.m_tempTransform=null),this.m_vehicleColliders=null},t.prototype.getStabilizingForce=function(){var e=-1;return null!=this.m_vehicle&&this.m_vehicle.get_m_stabilizingForce&&(e=this.m_vehicle.get_m_stabilizingForce()),e},t.prototype.setStabilizingForce=function(e){null!=this.m_vehicle&&this.m_vehicle.set_m_stabilizingForce&&this.m_vehicle.set_m_stabilizingForce(e)},t.prototype.getCollisionFilterGroup=function(){var e=-1;return null!=this.m_vehicleRaycaster&&this.m_vehicleRaycaster.get_m_collisionFilterGroup&&(e=this.m_vehicleRaycaster.get_m_collisionFilterGroup()),e},t.prototype.setCollisionFilterGroup=function(e){null!=this.m_vehicleRaycaster&&this.m_vehicleRaycaster.set_m_collisionFilterGroup&&this.m_vehicleRaycaster.set_m_collisionFilterGroup(e)},t.prototype.getCollisionFilterMask=function(){var e=-1;return null!=this.m_vehicleRaycaster&&this.m_vehicleRaycaster.get_m_collisionFilterMask&&(e=this.m_vehicleRaycaster.get_m_collisionFilterMask()),e},t.prototype.setCollisionFilterMask=function(e){null!=this.m_vehicleRaycaster&&this.m_vehicleRaycaster.set_m_collisionFilterMask&&this.m_vehicleRaycaster.set_m_collisionFilterMask(e)},t.prototype.getInterpolateMeshNormals=function(){var e=-1;return null!=this.m_vehicleRaycaster&&this.m_vehicleRaycaster.get_m_interpolateMeshNormals&&(e=this.m_vehicleRaycaster.get_m_interpolateMeshNormals()),e},t.prototype.setInterpolateMeshNormals=function(e){null!=this.m_vehicleRaycaster&&this.m_vehicleRaycaster.set_m_interpolateMeshNormals&&this.m_vehicleRaycaster.set_m_interpolateMeshNormals(e)},t.prototype.getWheelIndexByID=function(e){var t=-1;if(null!=this.m_vehicleColliders&&this.m_vehicleColliders.length>0)for(var r=0;r<this.m_vehicleColliders.length;r++){var i=this.m_vehicleColliders[r];if(e.toLowerCase()===i.id.toLowerCase()){t=r;break}}return t},t.prototype.getWheelIndexByName=function(e){var t=-1;if(null!=this.m_vehicleColliders&&this.m_vehicleColliders.length>0)for(var r=0;r<this.m_vehicleColliders.length;r++){var i=this.m_vehicleColliders[r];if(e.toLowerCase()===i.name.toLowerCase()){t=r;break}}return t},t.prototype.getWheelColliderInfo=function(e){var t=-1;return null!=this.m_vehicleColliders&&this.m_vehicleColliders.length>0&&this.m_vehicleColliders.length>e&&(t=this.m_vehicleColliders[e]),t},t.prototype.setWheelTransformMesh=function(e,t){if(null!=t){var r=this.getWheelInfo(e);null!=r&&(r.transform=t)}},t.prototype.getVisualSteeringAngle=function(e){var t=0,r=this.getWheelInfo(e);return null!=r&&null!=r.steeringAngle&&(t=r.steeringAngle),t},t.prototype.setVisualSteeringAngle=function(e,t){var r=this.getWheelInfo(t);null!=r&&(r.steeringAngle=this._rightHanded?e*-1:e)},t.prototype.getPhysicsSteeringAngle=function(e){if(null!=this.m_vehicle)return Math.abs(this.m_vehicle.getSteeringValue(e))},t.prototype.setPhysicsSteeringAngle=function(e,t){null!=this.m_vehicle&&this.m_vehicle.setSteeringValue(this._rightHanded?e*-1:e,t)},t.prototype.setupWheelInformation=function(){if(null!=this._chassisMesh&&null!=this._chassisMesh.physicsImpostor&&null!=this._chassisMesh.physicsImpostor.physicsBody&&this._chassisMesh.physicsImpostor.physicsBody.setActivationState(e.CollisionState.DISABLE_DEACTIVATION),null!=this.m_vehicle&&null!=this.m_vehicleColliders&&this.m_vehicleColliders.length>0){var t=-1;for(t=0;t<this.m_vehicleColliders.length;t++){var r=this.m_vehicleColliders[t],i=null!=r.name?r.name:"Unknown",s=null!=r.radius?r.radius:.5,o=null!=r.position&&r.position.length>=3?r.position[0]:1,n=null!=r.position&&r.position.length>=3?r.position[2]:-1,a=null!=r.suspensiondistance?r.suspensiondistance:.3,l=null!=r.suspensiontarget?r.suspensiontarget:.5,h=null!=r.forceapppointdistance?r.forceapppointdistance:0,c=null!=r.frontwheel||i.toLowerCase().indexOf("front")>=0;this.m_vehicle.addWheel(new Ammo.btVector3(o+-this._centerMass.x,a,n+-this._centerMass.z),this.m_wheelDirectionCS0,this.m_wheelAxleCS,l+h,s,this.m_vehicleTuning,c)}if(this.m_vehicle.getNumWheels()===this.m_vehicleColliders.length)for(t=0;t<this.m_vehicleColliders.length;t++){var r=this.m_vehicleColliders[t],u=6e3,m=500,p=null!=r.wheeldampingrate?r.wheeldampingrate:.2,f=null!=r.forward_extremumslip?r.forward_extremumslip:10,y=null!=r.forward_stiffness?r.forward_stiffness:20,_=null!=r.suspensionspring?r.suspensionspring:3.5,d=null!=r.suspensiondamper?r.suspensiondamper:4.5,v=this.m_vehicle.getWheelInfo(t);null!=v&&(v.steeringAngle=0,v.rotationBoost=0,v.defaultFriction=f,v.set_m_frictionSlip(f),v.set_m_rollInfluence(p),v.set_m_maxSuspensionForce(u),v.set_m_maxSuspensionTravelCm(m),v.set_m_suspensionStiffness(y),v.set_m_wheelsDampingCompression(_),v.set_m_wheelsDampingRelaxation(d))}else e.Tools.Warn("Failed to create proper number of wheels for: "+this._chassisMesh.name)}},t.prototype.updateWheelInformation=function(){var t=this.getNumWheels();if(t>0)for(var r=0;r<t;r++){var i=this.getWheelInfo(r);if(null!=i){var s=this.lockedWheelInformation(r);if(this.updateWheelTransform(r,!1),this.m_tempTransform=this.getWheelTransform(r),this.m_tempPosition=this.m_tempTransform.getOrigin(),null!=i.transform){var o=i.transform;if(null!=o.parent){this._tempVectorPos.set(this.m_tempPosition.x(),this.m_tempPosition.y(),this.m_tempPosition.z()),e.Utilities.InverseTransformPointToRef(o.parent,this._tempVectorPos,this._tempVectorPos),o.position.y=this._tempVectorPos.y;var n=null!=i.steeringAngle?i.steeringAngle:0;if(e.Quaternion.FromEulerAnglesToRef(0,n,0,o.rotationQuaternion),null!=i.spinner&&i.spinner.addRotation&&s===!1){var a=null!=i.get_m_deltaRotation?i.get_m_deltaRotation():0,l=null!=i.rotationBoost?i.rotationBoost:0;i.spinner.addRotation(a+l,0,0)}}}}}},t.prototype.lockedWheelInformation=function(e){var t=!1;if(null!=this.lockedWheelIndexes&&this.lockedWheelIndexes.length>0)for(var r=0;r<this.lockedWheelIndexes.length;r++)if(this.lockedWheelIndexes[r]===e){t=!0;break}return t},t.prototype.deleteWheelInformation=function(){var e=this.getNumWheels();if(e>0)for(var t=0;t<e;t++){var r=this.getWheelInfo(t);null!=r&&(null!=r.transform&&delete r.transform,null!=r.spinner&&delete r.spinner,null!=r.steeringAngle&&delete r.steeringAngle,null!=r.rotationBoost&&delete r.rotationBoost,null!=r.defaultFriction&&delete r.defaultFriction)}},t}();e.RaycastVehicle=t}(BABYLON||(BABYLON={}));var __extends=this&&this.__extends||function(){var e=function(t,r){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(t,r)};return function(t,r){function i(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(i.prototype=r.prototype,new i)}}(),BABYLON;!function(e){var t=function(){function e(){this.mesh=null,this.state=0,this.reset=!1}return e}();e.CollisionContactInfo=t;var r=function(r){function i(t,i,s){void 0===s&&(s={});var o=r.call(this,t,i,s)||this;return o._abstractMesh=null,o._isKinematic=!1,o._maxCollisions=4,o._isPhysicsReady=!1,o._centerOfMass=new e.Vector3(0,0,0),o._raycastVehicle=null,o._tmpGravityVector=null,o._tmpCollisionContacts=null,o.m_physicsWorld=null,o.m_physicsEngine=null,o._onCollisionEnterObservable=new e.Observable,o._onCollisionStayObservable=new e.Observable,o._onCollisionExitObservable=new e.Observable,o._abstractMesh=o.getAbstractMesh(),o._isKinematic=o.getEditorProperty("isKinematic",o._isKinematic),o.m_physicsWorld=e.SceneManager.GetPhysicsWorld(o.scene),o.m_physicsEngine=e.SceneManager.GetPhysicsEngine(o.scene),null!=o.transform.metadata&&null!=o.transform.metadata.unity&&null!=o.transform.metadata.unity.physics&&(o._centerOfMass=null!=o.transform.metadata.unity.physics.center?e.Utilities.ParseVector3(o.transform.metadata.unity.physics.center,o._centerOfMass):o._centerOfMass),o.setMaxNotifications(o._maxCollisions),o}return __extends(i,r),Object.defineProperty(i.prototype,"isKinematic",{get:function(){return this._isKinematic},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"centerOfMass",{get:function(){return this._centerOfMass},enumerable:!0,configurable:!0}),i.prototype.start=function(){this.initRigidbodyState()},i.prototype.update=function(){this.updateRigidbodyState()},i.prototype.after=function(){this.afterRigidbodyState()},i.prototype.destroy=function(){this.destroyRigidbodyState()},i.prototype.initRigidbodyState=function(){e.Utilities.ValidateTransformQuaternion(this.transform),this._isPhysicsReady=null!=this.m_physicsEngine&&null!=this._tmpCollisionContacts&&null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody;var t=this._isKinematic===!0?e.CollisionFilters.StaticFilter:e.CollisionFilters.DefaultFilter,r=this._isKinematic===!0?e.CollisionFilters.AllFilter^e.CollisionFilters.StaticFilter:e.CollisionFilters.AllFilter;this.setCollisionFilterGroup(t),this.setCollisionFilterMask(r),this.resetBodyCollisionContacts()},i.prototype.updateRigidbodyState=function(){this.syncronizeVehicleController()},i.prototype.afterRigidbodyState=function(){this.parseBodyCollisionContacts(),this.resetBodyCollisionContacts()},i.prototype.destroyRigidbodyState=function(){this.m_physicsWorld=null,this.m_physicsEngine=null,null!=this._raycastVehicle&&(this._raycastVehicle.dispose(),this._raycastVehicle=null),null!=this._tmpGravityVector&&(Ammo.destroy(this._tmpGravityVector),this._tmpGravityVector=null),this._onCollisionEnterObservable.clear(),this._onCollisionEnterObservable=null,this._onCollisionStayObservable.clear(),this._onCollisionStayObservable=null,this._onCollisionExitObservable.clear(),this._onCollisionExitObservable=null,this._tmpCollisionContacts=null,this._abstractMesh=null},i.prototype.syncronizeVehicleController=function(){null!=this._raycastVehicle&&this._raycastVehicle.updateWheelInformation()},i.prototype.parseBodyCollisionContacts=function(){if(this._isPhysicsReady===!0){var e=this._onCollisionEnterObservable.hasObservers(),t=this._onCollisionStayObservable.hasObservers(),r=this._onCollisionExitObservable.hasObservers();if(e||t||r){var i=0;for(i=0;i<this._tmpCollisionContacts.length;i++)this._tmpCollisionContacts[i].reset=!0;var s=0;if(null!=this._abstractMesh.physicsImpostor.tmpCollisionObjects){var o=this._abstractMesh.physicsImpostor.tmpCollisionObjects;for(var n in o){var a=-1,l=o[n];for(i=0;i<this._tmpCollisionContacts.length;i++){var h=this._tmpCollisionContacts[i];if(null!=h.mesh&&h.mesh===l){h.state=1,h.reset=!1,a=i;break}}if(a===-1)for(i=0;i<this._tmpCollisionContacts.length;i++){var c=this._tmpCollisionContacts[i];if(null==c.mesh){c.mesh=l,c.state=0,c.reset=!1;break}}if(s++,s>this._maxCollisions)break}}for(i=0;i<this._tmpCollisionContacts.length;i++){var u=this._tmpCollisionContacts[i];u.reset===!0?(r&&null!=u.mesh&&this._onCollisionExitObservable.notifyObservers(u.mesh),u.mesh=null,u.state=0,u.reset=!1):0===u.state?e&&null!=u.mesh&&this._onCollisionEnterObservable.notifyObservers(u.mesh):t&&null!=u.mesh&&this._onCollisionStayObservable.notifyObservers(u.mesh)}}}},i.prototype.resetBodyCollisionContacts=function(){if(this._isPhysicsReady===!0){var e=this._onCollisionEnterObservable.hasObservers(),t=this._onCollisionStayObservable.hasObservers(),r=this._onCollisionExitObservable.hasObservers();e||t||r?this._abstractMesh.physicsImpostor.tmpCollisionObjects={}:this._abstractMesh.physicsImpostor.tmpCollisionObjects=null}},i.prototype.registerOnCollisionEnter=function(e){return this._onCollisionEnterObservable.add(e)},i.prototype.unregisterOnCollisionEnter=function(e){return this._onCollisionEnterObservable.remove(e)},i.prototype.registerOnCollisionStay=function(e){return this._onCollisionStayObservable.add(e)},i.prototype.unregisterOnCollisionStay=function(e){return this._onCollisionStayObservable.remove(e)},i.prototype.registerOnCollisionExit=function(e){return this._onCollisionExitObservable.add(e)},i.prototype.unregisterOnCollisionExit=function(e){return this._onCollisionExitObservable.remove(e)},i.prototype.setGravity=function(e){null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody&&this._abstractMesh.physicsImpostor.physicsBody.setGravity&&null!=e&&(null==this._tmpGravityVector&&(this._tmpGravityVector=new Ammo.btVector3(0,0,0)),this._tmpGravityVector.setValue(e.x,e.y,e.z),this._abstractMesh.physicsImpostor.physicsBody.setGravity(this._tmpGravityVector))},i.prototype.getGravity=function(){var t=new e.Vector3(0,0,0);return this.getGravityToRef(t),t},i.prototype.getGravityToRef=function(e){if(null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody&&this._abstractMesh.physicsImpostor.physicsBody.getGravity){var t=this._abstractMesh.physicsImpostor.physicsBody.getGravity();e.set(t.x(),t.y(),t.z())}},i.prototype.getMass=function(){var e=0;return null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&(e=this._abstractMesh.physicsImpostor.mass),e},i.prototype.setMass=function(e){null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&this._abstractMesh.physicsImpostor.mass!==e&&(this._abstractMesh.physicsImpostor.mass=e)},i.prototype.getFriction=function(){var e=0;return null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&(e=this._abstractMesh.physicsImpostor.friction),e},i.prototype.setFriction=function(e){null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&this._abstractMesh.physicsImpostor.friction!==e&&(this._abstractMesh.physicsImpostor.friction=e)},i.prototype.getRestitution=function(){var e=0;return null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&(e=this._abstractMesh.physicsImpostor.restitution),e},i.prototype.setRestitution=function(e){null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&this._abstractMesh.physicsImpostor.restitution!==e&&(this._abstractMesh.physicsImpostor.restitution=e)},i.prototype.getLinearVelocity=function(){var e=null;return null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&(e=this._abstractMesh.physicsImpostor.getLinearVelocity()),e},i.prototype.setLinearVelocity=function(e){null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=e&&this._abstractMesh.physicsImpostor.setLinearVelocity(e)},i.prototype.getAngularVelocity=function(){var e=null;return null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&(e=this._abstractMesh.physicsImpostor.getAngularVelocity()),e},i.prototype.setAngularVelocity=function(e){null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=e&&this._abstractMesh.physicsImpostor.setAngularVelocity(e)},i.prototype.getWorldTransform=function(){var e=null;if(null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody){var t=Ammo.castObject(this._abstractMesh.physicsImpostor.physicsBody,Ammo.btCollisionObject);null!=t&&t.getWorldTransform&&(e=t.getWorldTransform())}return e},i.prototype.getTransformPositionToRef=function(e){var t=this.getWorldTransform();if(null!=t&&null!=e){var r=t.getOrigin();e.set(r.x(),r.y(),r.z())}},i.prototype.getTransformRotationToRef=function(e){var t=this.getWorldTransform();if(null!=t&&null!=e){var r=t.getRotation();e.set(r.x(),r.y(),r.z(),r.w())}},i.prototype.clearForces=function(){null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody&&this._abstractMesh.physicsImpostor.physicsBody.clearForces&&this._abstractMesh.physicsImpostor.physicsBody.clearForces()},i.prototype.applyTorque=function(t){null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody&&this._abstractMesh.physicsImpostor.physicsBody.applyTorque&&null!=t&&(null==e.RigidbodyPhysics.TempAmmoVector&&(e.RigidbodyPhysics.TempAmmoVector=new Ammo.btVector3(0,0,0)),e.RigidbodyPhysics.TempAmmoVector.setValue(t.x,t.y,t.z),this._abstractMesh.physicsImpostor.physicsBody.applyTorque(e.RigidbodyPhysics.TempAmmoVector))},i.prototype.applyLocalTorque=function(t){null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody&&this._abstractMesh.physicsImpostor.physicsBody.applyLocalTorque&&null!=t&&(null==e.RigidbodyPhysics.TempAmmoVector&&(e.RigidbodyPhysics.TempAmmoVector=new Ammo.btVector3(0,0,0)),e.RigidbodyPhysics.TempAmmoVector.setValue(t.x,t.y,t.z),this._abstractMesh.physicsImpostor.physicsBody.applyLocalTorque(e.RigidbodyPhysics.TempAmmoVector))},i.prototype.applyImpulse=function(t,r){null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody&&this._abstractMesh.physicsImpostor.physicsBody.applyImpulse&&null!=t&&(null==e.RigidbodyPhysics.TempAmmoVector&&(e.RigidbodyPhysics.TempAmmoVector=new Ammo.btVector3(0,0,0)),null==e.RigidbodyPhysics.TempAmmoVectorAux&&(e.RigidbodyPhysics.TempAmmoVectorAux=new Ammo.btVector3(0,0,0)),e.RigidbodyPhysics.TempAmmoVector.setValue(t.x,t.y,t.z),e.RigidbodyPhysics.TempAmmoVectorAux.setValue(r.x,r.y,r.z),this._abstractMesh.physicsImpostor.physicsBody.applyImpulse(e.RigidbodyPhysics.TempAmmoVector,e.RigidbodyPhysics.TempAmmoVectorAux))},i.prototype.applyCentralImpulse=function(t){null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody&&this._abstractMesh.physicsImpostor.physicsBody.applyCentralImpulse&&null!=t&&(null==e.RigidbodyPhysics.TempAmmoVector&&(e.RigidbodyPhysics.TempAmmoVector=new Ammo.btVector3(0,0,0)),e.RigidbodyPhysics.TempAmmoVector.setValue(t.x,t.y,t.z),this._abstractMesh.physicsImpostor.physicsBody.applyCentralImpulse(e.RigidbodyPhysics.TempAmmoVector))},i.prototype.applyTorqueImpulse=function(t){null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody&&this._abstractMesh.physicsImpostor.physicsBody.applyTorqueImpulse&&null!=t&&(null==e.RigidbodyPhysics.TempAmmoVector&&(e.RigidbodyPhysics.TempAmmoVector=new Ammo.btVector3(0,0,0)),e.RigidbodyPhysics.TempAmmoVector.setValue(t.x,t.y,t.z),this._abstractMesh.physicsImpostor.physicsBody.applyTorqueImpulse(e.RigidbodyPhysics.TempAmmoVector))},i.prototype.applyForce=function(t,r){null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody&&this._abstractMesh.physicsImpostor.physicsBody.applyForce&&null!=t&&(null==e.RigidbodyPhysics.TempAmmoVector&&(e.RigidbodyPhysics.TempAmmoVector=new Ammo.btVector3(0,0,0)),null==e.RigidbodyPhysics.TempAmmoVectorAux&&(e.RigidbodyPhysics.TempAmmoVectorAux=new Ammo.btVector3(0,0,0)),e.RigidbodyPhysics.TempAmmoVector.setValue(t.x,t.y,t.z),e.RigidbodyPhysics.TempAmmoVectorAux.setValue(r.x,r.y,r.z),this._abstractMesh.physicsImpostor.physicsBody.applyForce(e.RigidbodyPhysics.TempAmmoVector,e.RigidbodyPhysics.TempAmmoVectorAux))},i.prototype.applyCentralForce=function(t){
null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody&&this._abstractMesh.physicsImpostor.physicsBody.applyCentralForce&&null!=t&&(null==e.RigidbodyPhysics.TempAmmoVector&&(e.RigidbodyPhysics.TempAmmoVector=new Ammo.btVector3(0,0,0)),e.RigidbodyPhysics.TempAmmoVector.setValue(t.x,t.y,t.z),this._abstractMesh.physicsImpostor.physicsBody.applyCentralForce(e.RigidbodyPhysics.TempAmmoVector))},i.prototype.applyCentralLocalForce=function(t){null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody&&this._abstractMesh.physicsImpostor.physicsBody.applyCentralLocalForce&&null!=t&&(null==e.RigidbodyPhysics.TempAmmoVector&&(e.RigidbodyPhysics.TempAmmoVector=new Ammo.btVector3(0,0,0)),e.RigidbodyPhysics.TempAmmoVector.setValue(t.x,t.y,t.z),this._abstractMesh.physicsImpostor.physicsBody.applyCentralLocalForce(e.RigidbodyPhysics.TempAmmoVector))},i.prototype.getLinearFactor=function(){var e=0;return null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody&&this._abstractMesh.physicsImpostor.physicsBody.getLinearFactor&&(e=this._abstractMesh.physicsImpostor.physicsBody.getLinearFactor()),e},i.prototype.setLinearFactor=function(e){null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody&&this._abstractMesh.physicsImpostor.physicsBody.setLinearFactor&&this._abstractMesh.physicsImpostor.physicsBody.setLinearFactor(e)},i.prototype.getAngularFactor=function(){var e=0;return null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody&&this._abstractMesh.physicsImpostor.physicsBody.getAngularFactor&&(e=this._abstractMesh.physicsImpostor.physicsBody.getAngularFactor()),e},i.prototype.setAngularFactor=function(e){null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody&&this._abstractMesh.physicsImpostor.physicsBody.setAngularFactor&&this._abstractMesh.physicsImpostor.physicsBody.setAngularFactor(e)},i.prototype.getAngularDamping=function(){var e=0;return null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody&&this._abstractMesh.physicsImpostor.physicsBody.getAngularDamping&&(e=this._abstractMesh.physicsImpostor.physicsBody.getAngularDamping()),e},i.prototype.getLinearDamping=function(){var e=0;return null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody&&this._abstractMesh.physicsImpostor.physicsBody.getLinearDamping&&(e=this._abstractMesh.physicsImpostor.physicsBody.getLinearDamping()),e},i.prototype.setDamping=function(e,t){null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody&&this._abstractMesh.physicsImpostor.physicsBody.setDamping&&this._abstractMesh.physicsImpostor.physicsBody.setDamping(e,t)},i.prototype.setSleepingThresholds=function(e,t){null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody&&this._abstractMesh.physicsImpostor.physicsBody.setSleepingThresholds&&this._abstractMesh.physicsImpostor.physicsBody.setSleepingThresholds(e,t)},i.prototype.setMaxNotifications=function(e){this._maxCollisions=e,this._tmpCollisionContacts=[];for(var r=0;r<this._maxCollisions;r++)this._tmpCollisionContacts.push(new t)},i.prototype.setActivationState=function(e){if(null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody){var t=Ammo.castObject(this._abstractMesh.physicsImpostor.physicsBody,Ammo.btCollisionObject);null!=t&&t.setActivationState&&t.setActivationState(e)}},i.prototype.getCollisionFilterGroup=function(){var e=-1;return null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody&&this._abstractMesh.physicsImpostor.physicsBody.getBroadphaseProxy&&(e=this._abstractMesh.physicsImpostor.physicsBody.getBroadphaseProxy().get_m_collisionFilterGroup()),e},i.prototype.setCollisionFilterGroup=function(e){null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody&&this._abstractMesh.physicsImpostor.physicsBody.getBroadphaseProxy&&this._abstractMesh.physicsImpostor.physicsBody.getBroadphaseProxy().set_m_collisionFilterGroup(e)},i.prototype.getCollisionFilterMask=function(){var e=-1;return null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody&&this._abstractMesh.physicsImpostor.physicsBody.getBroadphaseProxy&&(e=this._abstractMesh.physicsImpostor.physicsBody.getBroadphaseProxy().get_m_collisionFilterMask()),e},i.prototype.setCollisionFilterMask=function(e){null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody&&this._abstractMesh.physicsImpostor.physicsBody.getBroadphaseProxy&&this._abstractMesh.physicsImpostor.physicsBody.getBroadphaseProxy().set_m_collisionFilterMask(e)},i.prototype.getCollisionShapeType=function(){var e=-1;if(null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody){var t=Ammo.castObject(this._abstractMesh.physicsImpostor.physicsBody,Ammo.btCollisionObject);if(null!=t){var r=t.getCollisionShape();null!=r&&r.getShapeType&&(e=r.getShapeType())}}return e},i.prototype.getCollisionShapeMargin=function(){var e=-1;if(null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody){var t=Ammo.castObject(this._abstractMesh.physicsImpostor.physicsBody,Ammo.btCollisionObject);if(null!=t){var r=t.getCollisionShape();null!=r&&r.getMargin&&(e=r.getMargin())}}return e},i.prototype.setCollisionShapeMargin=function(e){if(null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody){var t=Ammo.castObject(this._abstractMesh.physicsImpostor.physicsBody,Ammo.btCollisionObject);if(null!=t){var r=t.getCollisionShape();null!=r&&r.setMargin&&r.setMargin(e)}}},i.prototype.getContactProcessingThreshold=function(){var e=-1;if(null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody){var t=Ammo.castObject(this._abstractMesh.physicsImpostor.physicsBody,Ammo.btCollisionObject);null!=t&&t.getContactProcessingThreshold&&(e=t.getContactProcessingThreshold())}return e},i.prototype.setContactProcessingThreshold=function(e){if(null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody){var t=Ammo.castObject(this._abstractMesh.physicsImpostor.physicsBody,Ammo.btCollisionObject);null!=t&&t.setContactProcessingThreshold&&t.setContactProcessingThreshold(e)}},i.prototype.hasRaycastVehicle=function(){return this._isPhysicsReady===!0&&null!=this._abstractMesh.metadata&&null!=this._abstractMesh.metadata.wheels},i.prototype.getRaycastVehicle=function(){return null==this._raycastVehicle&&(this.hasRaycastVehicle()?this._raycastVehicle=new e.RaycastVehicle(this._abstractMesh,this.m_physicsWorld,this.scene.useRightHandedSystem,this._centerOfMass):e.Tools.Warn("No wheel collider metadata info for: "+this.transform.name)),this._raycastVehicle},i.SetupPhysicsComponent=function(t,r){var i=null!=r.metadata&&null!=r.metadata.unity?r.metadata.unity:null;if(null!=i&&null!=i.physics){var s=null!=i.physics.mass?i.physics.mass:0,o=null!=i.physics.center?e.Utilities.ParseVector3(i.physics.center,e.Vector3.Zero()):e.Vector3.Zero();if("rigidbody"===i.physics.type)if(null!=i.collision&&null!=i.collision.type&&"MeshCollider"===i.collision.type){var n=null!=i.collision.convexmesh&&i.collision.convexmesh,a=null!=i.collision.dynamicfriction?i.collision.dynamicfriction:.6,l=(null!=i.collision.staticfriction?i.collision.staticfriction:.6,null!=i.collision.restitution?i.collision.restitution:0),h=null!=i.collision.trigger&&i.collision.trigger,c=n===!0?e.PhysicsImpostor.ConvexHullImpostor:e.PhysicsImpostor.MeshImpostor;e.SceneManager.CreatePhysicsImpostor(t,r,c,{mass:s,friction:a,restitution:l}),e.RigidbodyPhysics.ConfigRigidbodyPhysics(t,r,!1,h,i.physics)}else{var u=0,m=0,p=0,f=!1,y=0,_=null,d=r.getChildren(null,!0);null!=d&&d.length>0&&d.forEach(function(e){e.position.subtractInPlace(o)});var v=r.getChildren(null,!1);null!=v&&v.length>0&&v.forEach(function(s){if(null!=s.metadata&&null!=s.metadata.unity&&null!=s.metadata.unity.collision){var o=s.metadata.unity.collision,n=null!=o.wheelinformation?o.wheelinformation:null;if(null!=n)null==_&&(_=[]),_.push(n);else{s.parent!==r&&s.setParent(r);var a=null!=o.dynamicfriction?o.dynamicfriction:.6,l=null!=o.staticfriction?o.staticfriction:.6,h=null!=o.restitution?o.restitution:0,c=null!=o.trigger&&o.trigger,d=null!=o.type?o.type:"BoxCollider",v=e.PhysicsImpostor.BoxImpostor;"MeshCollider"===d?v=e.PhysicsImpostor.ConvexHullImpostor:"CapsuleCollider"===d?v=e.PhysicsImpostor.CapsuleImpostor:"SphereCollider"===d?v=e.PhysicsImpostor.SphereImpostor:"BoxCollider"===d&&(v=e.PhysicsImpostor.BoxImpostor),a>u&&(u=a),l>m&&(m=l),h>p&&(p=h),1==c&&(f=!0),e.SceneManager.CreatePhysicsImpostor(t,s,v,{mass:0,friction:0,restitution:0}),e.RigidbodyPhysics.ConfigRigidbodyPhysics(t,s,!0,!1,i.physics),y++}}}),y>0&&(e.SceneManager.CreatePhysicsImpostor(t,r,e.PhysicsImpostor.NoImpostor,{mass:s,friction:u,restitution:p}),e.RigidbodyPhysics.ConfigRigidbodyPhysics(t,r,!1,f,i.physics)),null!=_&&_.length>0&&(r.metadata.wheels=_),v=null}}},i.ConfigRigidbodyPhysics=function(t,r,i,s,o){null!=r&&(null!=r.physicsImpostor?r.physicsImpostor.executeNativeFunction(function(i,n){n.activate&&n.activate();var a=Ammo.castObject(n,Ammo.btCollisionObject);a.entity=r;var l=e.SceneManager.GetPhysicsWorld(t);if(null!=l&&l.generateInternalEdgeInfo){var h=a.getCollisionShape();if(null!=h&&h.getShapeType){var c=h.getShapeType();if(21===c){var u=Ammo.castObject(h,Ammo.btBvhTriangleMeshShape);a.triangleMapInfo=new Ammo.btTriangleInfoMap,l.generateInternalEdgeInfo(u,a.triangleMapInfo)}}}var m=null==o||null==o.gravity||o.gravity;if(m===!1&&(n.setGravity?n.setGravity(new Ammo.btVector3(0,0,0)):e.Tools.Warn("Physics engine set gravity override not supported for: "+r.name)),n.setDamping){var p=null!=o&&null!=o.ldrag?o.ldrag:0,f=null!=o&&null!=o.adrag?o.adrag:.05;n.setDamping(p,f)}else e.Tools.Warn("Physics engine set drag damping not supported for: "+r.name);n.setCollisionFlags&&n.getCollisionFlags?s===!0?n.setCollisionFlags(n.getCollisionFlags()|e.CollisionFlags.CF_NO_CONTACT_RESPONSE|e.CollisionFlags.CF_CUSTOM_MATERIAL_CALLBACK):n.setCollisionFlags(n.getCollisionFlags()|e.CollisionFlags.CF_CUSTOM_MATERIAL_CALLBACK):e.Tools.Warn("Physics engine set collision flags not supported for: "+r.name);var y=null!=o&&null!=o.freeze?o.freeze:null;if(null!=y){if(n.setLinearFactor){var _=null!=y.positionx&&y.positionx===!0?0:1,d=null!=y.positiony&&y.positiony===!0?0:1,v=null!=y.positionz&&y.positionz===!0?0:1;n.setLinearFactor(new Ammo.btVector3(_,d,v))}else e.Tools.Warn("Physics engine set linear factor not supported for: "+r.name);if(n.setAngularFactor){var g=null!=y.rotationx&&y.rotationx===!0?0:1,C=null!=y.rotationy&&y.rotationy===!0?0:1,b=null!=y.rotationz&&y.rotationz===!0?0:1;n.setAngularFactor(new Ammo.btVector3(g,C,b))}else e.Tools.Warn("Physics engine set angular factor not supported for: "+r.name)}}):e.Tools.Warn("No valid physics impostor to setup for "+r.name))},i.TempAmmoVector=null,i.TempAmmoVectorAux=null,i}(e.ScriptComponent);e.RigidbodyPhysics=r}(BABYLON||(BABYLON={}));var __extends=this&&this.__extends||function(){var e=function(t,r){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(t,r)};return function(t,r){function i(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(i.prototype=r.prototype,new i)}}(),__decorate=this&&this.__decorate||function(e,t,r,i){var s,o=arguments.length,n=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)n=Reflect.decorate(e,t,r,i);else for(var a=e.length-1;a>=0;a--)(s=e[a])&&(n=(o<3?s(n):o>3?s(t,r,n):s(t,r))||n);return o>3&&n&&Object.defineProperty(t,r,n),n},BABYLON;!function(e){var t=function(){function e(){this._defines={},this._defines={}}return e.prototype.getDefines=function(){return this._defines},e.prototype.defineBoolean=function(e){this._defines[e]=!0},e.prototype.defineNumeric=function(e,t){this._defines[e]=t},e.ShaderIndexer=0,e}();e.UniversalShaderDefines=t;var r=function(e){function t(){var t=e.call(this)||this;return t.DIFFUSE=!1,t.CLIPPLANE=!1,t.CLIPPLANE2=!1,t.CLIPPLANE3=!1,t.CLIPPLANE4=!1,t.ALPHATEST=!1,t.DEPTHPREPASS=!1,t.POINTSIZE=!1,t.FOG=!1,t.NORMAL=!1,t.UV1=!1,t.UV2=!1,t.VERTEXCOLOR=!1,t.VERTEXALPHA=!1,t.NUM_BONE_INFLUENCERS=0,t.BonesPerMesh=0,t.INSTANCES=!1,t.rebuild(),t}return __extends(t,e),t}(e.MaterialDefines);e.UniversalMaterialDefines=r;var i=function(){function e(){}return e}();e.UniversalAlbedoChunks=i;var s=function(){function e(){}return e}();e.UniversalDiffuseChunks=s;var o=function(t){function r(r,i){var s=t.call(this,r,i)||this;return s.diffuseColor=new e.Color3(1,1,1),s._disableLighting=!1,s._maxSimultaneousLights=4,s.universalMaterial=!0,s.locals=null,s._defines=null,s._uniforms=[],s._samplers=[],s._textures={},s._vectors4={},s._floats={},s.locals=new e.UniversalShaderDefines,s._defines=null,s.customShaderNameResolve=s._buildCustomShader,s}return __extends(r,t),r.prototype.getClassName=function(){return"UniversalPushMaterial"},r.prototype.getShaderName=function(){return"simple"},r.prototype.getShaderDefines=function(){return this._defines},r.prototype.needAlphaBlending=function(){return this.alpha<1},r.prototype.needAlphaTesting=function(){return!1},r.prototype.getAlphaTestTexture=function(){return null},r.prototype.getTexture=function(e){return this._textures[e]},r.prototype.getVector4=function(e){return this._vectors4[e]},r.prototype.getFloat=function(e){return this._floats[e]},r.prototype.setTexture=function(e,t,r){return void 0===r&&(r=!1),r===!0&&this.checkSampler(e),this._textures[e]=t,this},r.prototype.setVector4=function(e,t,r){return void 0===r&&(r=!1),r===!0&&this.checkUniform(e),this._vectors4[e]=t,this},r.prototype.setFloat=function(e,t,r){return void 0===r&&(r=!1),r===!0&&this.checkUniform(e),this._floats[e]=t,this},r.prototype.checkUniform=function(e){this._uniforms.indexOf(e)===-1&&(this._uniforms.push(e),this.locals.defineBoolean(e.toUpperCase()))},r.prototype.checkSampler=function(e){this._samplers.indexOf(e)===-1&&(this._samplers.push(e),this.locals.defineBoolean(e.toUpperCase()),this.checkUniform(e+"Infos"),this.checkUniform(e+"Matrix"))},r.prototype.isReadyForSubMesh=function(t,r,i){if(this.isFrozen&&this._wasPreviouslyReady&&r.effect)return!0;r._materialDefines||(r._materialDefines=new e.UniversalMaterialDefines);var s=r._materialDefines,o=this.getScene();if(!this.checkReadyOnEveryCall&&r.effect&&this._renderId===o.getRenderId())return!0;var n=o.getEngine();if(s._areTexturesDirty&&(s._needUVs=!1,o.texturesEnabled&&this._diffuseTexture&&e.MaterialFlags.DiffuseTextureEnabled)){if(!this._diffuseTexture.isReady())return!1;s._needUVs=!0,s.DIFFUSE=!0}if(e.MaterialHelper.PrepareDefinesForMisc(t,o,!1,this.pointsCloud,this.fogEnabled,this._shouldTurnAlphaTestOn(t),s),s._needNormals=e.MaterialHelper.PrepareDefinesForLights(o,t,s,!1,this._maxSimultaneousLights,this._disableLighting),e.MaterialHelper.PrepareDefinesForFrameBoundValues(o,n,s,!!i),e.MaterialHelper.PrepareDefinesForAttributes(t,s,!0,!0),s.isDirty){s.markAsProcessed(),o.resetCachedMaterial();var a=new e.EffectFallbacks;s.FOG&&a.addFallback(1,"FOG"),e.MaterialHelper.HandleFallbacksForShadows(s,a,this.maxSimultaneousLights),s.NUM_BONE_INFLUENCERS>0&&a.addCPUSkinningFallback(0,t);var l=[e.VertexBuffer.PositionKind];s.NORMAL&&l.push(e.VertexBuffer.NormalKind),s.UV1&&l.push(e.VertexBuffer.UVKind),s.UV2&&l.push(e.VertexBuffer.UV2Kind),s.VERTEXCOLOR&&l.push(e.VertexBuffer.ColorKind),e.MaterialHelper.PrepareAttributesForBones(l,t,s,a),e.MaterialHelper.PrepareAttributesForInstances(l,s);var h=["world","view","viewProjection","vEyePosition","vLightsType","vDiffuseColor","vFogInfos","vFogColor","pointSize","vDiffuseInfos","mBones","vClipPlane","vClipPlane2","vClipPlane3","vClipPlane4","diffuseMatrix"],c=["diffuseSampler"],u=new Array;e.MaterialHelper.PrepareUniformsAndSamplersList({uniformsNames:h,uniformBuffersNames:u,samplers:c,defines:s,maxSimultaneousLights:this.maxSimultaneousLights});var m=this.getShaderName();this.customShaderNameResolve&&(m=this.customShaderNameResolve(m,h,u,c,s));var p=s.toString();r.setEffect(o.getEngine().createEffect(m,{attributes:l,uniformsNames:h,uniformBuffersNames:u,samplers:c,defines:p,fallbacks:a,onCompiled:this.onCompiled,onError:this.onError,indexParameters:{maxSimultaneousLights:this._maxSimultaneousLights-1}},n),s)}return!(!r.effect||!r.effect.isReady())&&(this._renderId=o.getRenderId(),this._wasPreviouslyReady=!0,!0)},r.prototype.bindForSubMesh=function(t,r,i){var s=this.getScene(),o=i._materialDefines;if(o){var n=i.effect;n&&(this._activeEffect=n,this.bindOnlyWorldMatrix(t),this._activeEffect.setMatrix("viewProjection",s.getTransformMatrix()),e.MaterialHelper.BindBonesParameters(r,this._activeEffect),this._mustRebind(s,n)&&(this._diffuseTexture&&e.MaterialFlags.DiffuseTextureEnabled&&(this._activeEffect.setTexture("diffuseSampler",this._diffuseTexture),this._activeEffect.setFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),this._activeEffect.setMatrix("diffuseMatrix",this._diffuseTexture.getTextureMatrix())),e.MaterialHelper.BindClipPlane(this._activeEffect,s),this.pointsCloud&&this._activeEffect.setFloat("pointSize",this.pointSize),e.MaterialHelper.BindEyePosition(n,s)),this._activeEffect.setColor4("vDiffuseColor",this.diffuseColor,this.alpha*r.visibility),s.lightsEnabled&&!this.disableLighting&&e.MaterialHelper.BindLights(s,r,this._activeEffect,o,this.maxSimultaneousLights),s.fogEnabled&&r.applyFog&&s.fogMode!==e.Scene.FOGMODE_NONE&&this._activeEffect.setMatrix("view",s.getViewMatrix()),e.MaterialHelper.BindFogParameters(s,r,this._activeEffect),this._afterBind(r,this._activeEffect),this._attachAfterBind(r,this._activeEffect))}},r.prototype.getAnimatables=function(){var e=[];this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&e.push(this._diffuseTexture);for(var t in this._textures){var r=this._textures[t];r&&r.animations&&r.animations.length>0&&e.push(r)}return e},r.prototype.getActiveTextures=function(){var e=t.prototype.getActiveTextures.call(this);this._diffuseTexture&&e.push(this._diffuseTexture);for(var r in this._textures){var i=this._textures[r];i&&e.push(i)}return e},r.prototype.hasTexture=function(e){if(t.prototype.hasTexture.call(this,e))return!0;if(this.diffuseTexture===e)return!0;var r=!1;for(var i in this._textures){var s=this._textures[i];if(s===s){r=!0;break}}return r},r.prototype.dispose=function(e){this._diffuseTexture&&this._diffuseTexture.dispose();for(var r in this._textures){var i=this._textures[r];i&&i.dispose(),this._textures[r]=null}this._textures={},t.prototype.dispose.call(this,e)},r.prototype.clone=function(t){var r,i=this,s=e.SerializationHelper.Clone(function(){return new e.UniversalPushMaterial(t,i.getScene())},this);s._textures={};for(r in this._textures){var o=this._textures[r];o&&s.setTexture(r,o.clone(),!0)}s._vectors4={};for(r in this._vectors4)s.setVector4(r,this._vectors4[r].clone(),!0);s._floats={};for(r in this._floats)s.setFloat(r,this._floats[r],!0);return s},r.prototype.serialize=function(){var t,r=e.SerializationHelper.Serialize(this);r.customType="BABYLON.UniversalPushMaterial",r.textures={};for(t in this._textures){var i=this._textures[t];i&&(r.textures[t]=i.serialize())}r.vectors4={};for(t in this._vectors4)r.vectors4[t]=this._vectors4[t].asArray();r.floats={};for(t in this._floats)r.floats[t]=this._floats[t];return r},r.Parse=function(t,r,i){var s,o=e.SerializationHelper.Parse(function(){return new e.UniversalPushMaterial(t.name,r)},t,r,i);for(s in t.textures){var n=t.textures[s];n&&o.setTexture(s,e.Texture.Parse(n,r,i),!0)}for(s in t.vectors4)o.setVector4(s,e.Vector4.FromArray(t.vectors4[s]),!0);for(s in t.floats)o.setFloat(s,t.floats[s],!0);return o},r.prototype._buildCustomShader=function(e,t,r,i,s){this._defines=s;var o=this.getShaderName();null!=o&&""!==o||(o=e),null!=o&&""!==o||(o="simple");var n=this.locals.getDefines();if(null!=n&&null!=this._defines){var a=Object.keys(n);if(null!=a&&a.length>0){for(var l=this._defines,h=0,c=a;h<c.length;h++){var u=c[h];l[u]=n[u]}this._defines.rebuild()}}var m=0;if(null!=this._uniforms&&this._uniforms.length>0)for(m=0;m<this._uniforms.length;m++){var p=this._uniforms[m];t.indexOf(p)===-1&&t.push(p)}if(m=0,null!=this._samplers&&this._samplers.length>0)for(m=0;m<this._samplers.length;m++){var f=this._samplers[m];i.indexOf(f)===-1&&i.push(f)}return o},r.prototype._attachAfterBind=function(e,t){var r,i=this.getScene();if(i.texturesEnabled)for(r in this._textures){var s=this._textures[r];null!=s&&(t.setTexture(r,s),t.setFloat2(r+"Infos",s.coordinatesIndex,s.level),t.setMatrix(r+"Matrix",s.getTextureMatrix()))}for(r in this._vectors4)t.setVector4(r,this._vectors4[r]);for(r in this._floats)t.setFloat(r,this._floats[r])},__decorate([e.serializeAsTexture("diffuseTexture")],r.prototype,"_diffuseTexture",void 0),__decorate([e.expandToProperty("_markAllSubMeshesAsTexturesDirty")],r.prototype,"diffuseTexture",void 0),__decorate([e.serializeAsColor3("diffuse")],r.prototype,"diffuseColor",void 0),__decorate([e.serialize("disableLighting")],r.prototype,"_disableLighting",void 0),__decorate([e.expandToProperty("_markAllSubMeshesAsLightsDirty")],r.prototype,"disableLighting",void 0),__decorate([e.serialize("maxSimultaneousLights")],r.prototype,"_maxSimultaneousLights",void 0),__decorate([e.expandToProperty("_markAllSubMeshesAsLightsDirty")],r.prototype,"maxSimultaneousLights",void 0),r}(e.PushMaterial);e.UniversalPushMaterial=o,e._TypeStore.RegisteredTypes.UniversalPushMaterial=o;var n=function(t){function r(r,i){var s=t.call(this,r,i)||this;return s.universalMaterial=!0,s.locals=null,s.terrainInfo=null,s._defines=null,s._uniforms=[],s._samplers=[],s._textures={},s._vectors4={},s._floats={},s.locals=new e.UniversalShaderDefines,s._defines=null,s._setupAttachAfterBind(),s.enableShaderChunks=!1,s.materialShaderChunks=new e.UniversalAlbedoChunks,s.customShaderNameResolve=s._buildCustomShader,s.customShaderChunkResolve(),s}return __extends(r,t),r.prototype.updateShaderChunks=function(){},r.prototype.getClassName=function(){return"UniversalAlbedoMaterial"},r.prototype.getShaderName=function(){return"pbr"},r.prototype.getShaderChunk=function(){return null},r.prototype.getShaderDefines=function(){return this._defines},r.prototype.getTexture=function(e){return this._textures[e]},r.prototype.getVector4=function(e){return this._vectors4[e]},r.prototype.getFloat=function(e){return this._floats[e]},r.prototype.setTexture=function(e,t,r){return void 0===r&&(r=!1),r===!0&&this.checkSampler(e),this._textures[e]=t,this},r.prototype.setVector4=function(e,t,r){return void 0===r&&(r=!1),r===!0&&this.checkUniform(e),this._vectors4[e]=t,this},r.prototype.setFloat=function(e,t,r){return void 0===r&&(r=!1),r===!0&&this.checkUniform(e),this._floats[e]=t,this},r.prototype.checkUniform=function(e){this._uniforms.indexOf(e)===-1&&(this._uniforms.push(e),this.locals.defineBoolean(e.toUpperCase()))},r.prototype.checkSampler=function(e){this._samplers.indexOf(e)===-1&&(this._samplers.push(e),this.locals.defineBoolean(e.toUpperCase()),this.checkUniform(e+"Infos"),this.checkUniform(e+"Matrix"))},r.prototype.getAnimatables=function(){var e=t.prototype.getAnimatables.call(this);for(var r in this._textures){var i=this._textures[r];i&&i.animations&&i.animations.length>0&&e.push(i)}return e},r.prototype.getActiveTextures=function(){var e=t.prototype.getActiveTextures.call(this);for(var r in this._textures){var i=this._textures[r];i&&e.push(i)}return e},r.prototype.hasTexture=function(e){if(t.prototype.hasTexture.call(this,e))return!0;var r=!1;for(var i in this._textures){var s=this._textures[i];if(s===s){r=!0;break}}return r},r.prototype.dispose=function(e,r){if(r)for(var i in this._textures){var s=this._textures[i];s&&s.dispose(),this._textures[i]=null}this._textures={},t.prototype.dispose.call(this,e,r)},r.prototype.clone=function(t){var r,i=this,s=e.SerializationHelper.Clone(function(){return new e.UniversalAlbedoMaterial(t,i.getScene())},this);s._textures={};for(r in this._textures){var o=this._textures[r];o&&s.setTexture(r,o.clone(),!0)}s._vectors4={};for(r in this._vectors4)s.setVector4(r,this._vectors4[r].clone(),!0);s._floats={};for(r in this._floats)s.setFloat(r,this._floats[r],!0);return s},r.prototype.serialize=function(){var t,r=e.SerializationHelper.Serialize(this);r.customType="BABYLON.UniversalAlbedoMaterial",r.textures={};for(t in this._textures){var i=this._textures[t];i&&(r.textures[t]=i.serialize())}r.vectors4={};for(t in this._vectors4)r.vectors4[t]=this._vectors4[t].asArray();r.floats={};for(t in this._floats)r.floats[t]=this._floats[t];return r},r.Parse=function(t,r,i){var s,o=e.SerializationHelper.Parse(function(){return new e.UniversalAlbedoMaterial(t.name,r)},t,r,i);for(s in t.textures){var n=t.textures[s];n&&o.setTexture(s,e.Texture.Parse(n,r,i),!0)}for(s in t.vectors4)o.setVector4(s,e.Vector4.FromArray(t.vectors4[s]),!0);for(s in t.floats)o.setFloat(s,t.floats[s],!0);return o},r.prototype.customShaderChunkResolve=function(){var t=this.getShaderChunk();if(null!=t&&""!==t){var r=t+"ShaderChunks";if(null!=e.Effect.ShadersStore[r]){var i=e.Effect.ShadersStore[r],s=e.Utilities.HasOwnProperty(i,"VertexBegin")?i.VertexBegin:null;null!=s&&""!==s&&(this.materialShaderChunks.Vertex_Begin=s);var o=e.Utilities.HasOwnProperty(i,"VertexDefinitions")?i.VertexDefinitions:null;null!=o&&""!==o&&(this.materialShaderChunks.Vertex_Definitions=o);var n=e.Utilities.HasOwnProperty(i,"VertexMainBegin")?i.VertexMainBegin:null;null!=n&&""!==n&&(this.materialShaderChunks.Vertex_MainBegin=n);var a=e.Utilities.HasOwnProperty(i,"VertexUpdatePosition")?i.VertexUpdatePosition:null;null!=a&&""!==a&&(this.materialShaderChunks.Vertex_Before_PositionUpdated=a.replace("result","positionUpdated"));var l=e.Utilities.HasOwnProperty(i,"VertexUpdateNormal")?i.VertexUpdateNormal:null;null!=l&&""!==l&&(this.materialShaderChunks.Vertex_Before_NormalUpdated=l.replace("result","normalUpdated"));var h=e.Utilities.HasOwnProperty(i,"VertexMainEnd")?i.VertexMainEnd:null;null!=h&&""!==h&&(this.materialShaderChunks.Vertex_MainEnd=h);var c=e.Utilities.HasOwnProperty(i,"FragmentBegin")?i.FragmentBegin:null;null!=c&&""!==c&&(this.materialShaderChunks.Fragment_Begin=c);var u=e.Utilities.HasOwnProperty(i,"FragmentDefinitions")?i.FragmentDefinitions:null;null!=u&&""!==u&&(this.materialShaderChunks.Fragment_Definitions=u);var m=e.Utilities.HasOwnProperty(i,"FragmentMainBegin")?i.FragmentMainBegin:null;null!=m&&""!==m&&(this.materialShaderChunks.Fragment_MainBegin=m);var p=e.Utilities.HasOwnProperty(i,"FragmentUpdateAlbedo")?i.FragmentUpdateAlbedo:null;null!=p&&""!==p&&(this.materialShaderChunks.Fragment_Custom_Albedo=p.replace("result","surfaceAlbedo"));var f=e.Utilities.HasOwnProperty(i,"FragmentUpdateAlpha")?i.FragmentUpdateAlpha:null;null!=f&&""!==f&&(this.materialShaderChunks.Fragment_Custom_Alpha=f.replace("result","alpha"));var y=e.Utilities.HasOwnProperty(i,"FragmentMetallicRoughness")?i.FragmentMetallicRoughness:null;null!=y&&""!==y&&(this.materialShaderChunks.Fragment_MetallicRoughness=y);var _=e.Utilities.HasOwnProperty(i,"FragmentMicroSurface")?i.FragmentMicroSurface:null;null!=_&&""!==_&&(this.materialShaderChunks.Fragment_MicroSurface=_);var d=e.Utilities.HasOwnProperty(i,"FragmentBeforeLights")?i.FragmentBeforeLights:null;null!=d&&""!==d&&(this.materialShaderChunks.Fragment_Before_Lights=d);var v=e.Utilities.HasOwnProperty(i,"FragmentBeforeFog")?i.FragmentBeforeFog:null;null!=v&&""!==v&&(this.materialShaderChunks.Fragment_Before_Fog=v);var g=e.Utilities.HasOwnProperty(i,"FragmentBeforeFragColor")?i.FragmentBeforeFragColor:null;null!=g&&""!==g&&(this.materialShaderChunks.Fragment_Before_FragColor=g.replace("result","color"))}else e.Tools.Warn("Failed To Locate Shader Chunk Base: "+r)}},r.prototype._buildCustomShader=function(e,t,r,i,s){this._defines=s;var o=this.getShaderName();null!=o&&""!==o||(o=e),null!=o&&""!==o||(o="pbr");var n=this.locals.getDefines();if(null!=n&&null!=this._defines){var a=Object.keys(n);if(null!=a&&a.length>0){for(var l=this._defines,h=0,c=a;h<c.length;h++){var u=c[h];l[u]=n[u]}this._defines.rebuild()}}var m=0;if(null!=this._uniforms&&this._uniforms.length>0)for(m=0;m<this._uniforms.length;m++){var p=this._uniforms[m];t.indexOf(p)===-1&&t.push(p)}if(m=0,null!=this._samplers&&this._samplers.length>0)for(m=0;m<this._samplers.length;m++){var f=this._samplers[m];i.indexOf(f)===-1&&i.push(f)}return this.enableShaderChunks===!0?this._createShaderChunks(o):o},r.prototype._createShaderChunks=function(t){if(this._isCreatedShader)return this._createdShaderName;this._isCreatedShader=!1;var r=this.getShaderChunk();null!=r&&""!==r||(r=t),e.UniversalShaderDefines.ShaderIndexer++;var i=(r+"Custom"+e.UniversalShaderDefines.ShaderIndexer).trim(),s=e.Effect.ShadersStore[t+"VertexShader"],o=e.Effect.ShadersStore[t+"PixelShader"];this.updateShaderChunks();var n=i+"VertexShader";e.Effect.ShadersStore[n]=s.replace("#define CUSTOM_VERTEX_BEGIN",this.materialShaderChunks.Vertex_Begin?this.materialShaderChunks.Vertex_Begin:"").replace("#define CUSTOM_VERTEX_DEFINITIONS",this.materialShaderChunks.Vertex_Definitions?this.materialShaderChunks.Vertex_Definitions:"").replace("#define CUSTOM_VERTEX_MAIN_BEGIN",this.materialShaderChunks.Vertex_MainBegin?this.materialShaderChunks.Vertex_MainBegin:"").replace("#define CUSTOM_VERTEX_UPDATE_POSITION",this.materialShaderChunks.Vertex_Before_PositionUpdated?this.materialShaderChunks.Vertex_Before_PositionUpdated:"").replace("#define CUSTOM_VERTEX_UPDATE_NORMAL",this.materialShaderChunks.Vertex_Before_NormalUpdated?this.materialShaderChunks.Vertex_Before_NormalUpdated:"").replace("#define CUSTOM_VERTEX_MAIN_END",this.materialShaderChunks.Vertex_MainEnd?this.materialShaderChunks.Vertex_MainEnd:"");var a=i+"PixelShader";return e.Effect.ShadersStore[a]=o.replace("#define CUSTOM_FRAGMENT_BEGIN",this.materialShaderChunks.Fragment_Begin?this.materialShaderChunks.Fragment_Begin:"").replace("#define CUSTOM_FRAGMENT_DEFINITIONS",this.materialShaderChunks.Fragment_Definitions?this.materialShaderChunks.Fragment_Definitions:"").replace("#define CUSTOM_FRAGMENT_MAIN_BEGIN",this.materialShaderChunks.Fragment_MainBegin?this.materialShaderChunks.Fragment_MainBegin:"").replace("#define CUSTOM_FRAGMENT_UPDATE_ALBEDO",this.materialShaderChunks.Fragment_Custom_Albedo?this.materialShaderChunks.Fragment_Custom_Albedo:"").replace("#define CUSTOM_FRAGMENT_UPDATE_ALPHA",this.materialShaderChunks.Fragment_Custom_Alpha?this.materialShaderChunks.Fragment_Custom_Alpha:"").replace("#define CUSTOM_FRAGMENT_UPDATE_METALLICROUGHNESS",this.materialShaderChunks.Fragment_MetallicRoughness?this.materialShaderChunks.Fragment_MetallicRoughness:"").replace("#define CUSTOM_FRAGMENT_UPDATE_MICROSURFACE",this.materialShaderChunks.Fragment_MicroSurface?this.materialShaderChunks.Fragment_MicroSurface:"").replace("#define CUSTOM_FRAGMENT_BEFORE_LIGHTS",this.materialShaderChunks.Fragment_Before_Lights?this.materialShaderChunks.Fragment_Before_Lights:"").replace("#define CUSTOM_FRAGMENT_BEFORE_FOG",this.materialShaderChunks.Fragment_Before_Fog?this.materialShaderChunks.Fragment_Before_Fog:"").replace("#define CUSTOM_FRAGMENT_BEFORE_FRAGCOLOR",this.materialShaderChunks.Fragment_Before_FragColor?this.materialShaderChunks.Fragment_Before_FragColor:""),
this._isCreatedShader=!0,this._createdShaderName=i,i},r.prototype._attachAfterBind=function(e,t){var r,i=this.getScene();if(i.texturesEnabled)for(r in this._textures){var s=this._textures[r];null!=s&&(t.setTexture(r,s),t.setFloat2(r+"Infos",s.coordinatesIndex,s.level),t.setMatrix(r+"Matrix",s.getTextureMatrix()))}for(r in this._vectors4)t.setVector4(r,this._vectors4[r]);for(r in this._floats)t.setFloat(r,this._floats[r])},r.prototype._setupAttachAfterBind=function(){var e=this,t=this._afterBind;this._afterBind=function(r,i){if(e._attachAfterBind(r,i),t)try{t(r,i)}catch(s){}}},r}(e.PBRMaterial);e.UniversalAlbedoMaterial=n,e._TypeStore.RegisteredTypes.UniversalAlbedoMaterial=n;var a=function(t){function r(r,i){var s=t.call(this,r,i)||this;return s.universalMaterial=!0,s.locals=null,s.terrainInfo=null,s._defines=null,s._uniforms=[],s._samplers=[],s._textures={},s._vectors4={},s._floats={},s.locals=new e.UniversalShaderDefines,s._defines=null,s._setupAttachAfterBind(),s.enableShaderChunks=!1,s.materialShaderChunks=new e.UniversalDiffuseChunks,s.customShaderNameResolve=s._buildCustomShader,s.customShaderChunkResolve(),s}return __extends(r,t),r.prototype.updateShaderChunks=function(){},r.prototype.getClassName=function(){return"UniversalDiffuseMaterial"},r.prototype.getShaderName=function(){return"default"},r.prototype.getShaderChunk=function(){return null},r.prototype.getShaderDefines=function(){return this._defines},r.prototype.getTexture=function(e){return this._textures[e]},r.prototype.getVector4=function(e){return this._vectors4[e]},r.prototype.getFloat=function(e){return this._floats[e]},r.prototype.setTexture=function(e,t,r){return void 0===r&&(r=!1),r===!0&&this.checkSampler(e),this._textures[e]=t,this},r.prototype.setVector4=function(e,t,r){return void 0===r&&(r=!1),r===!0&&this.checkUniform(e),this._vectors4[e]=t,this},r.prototype.setFloat=function(e,t,r){return void 0===r&&(r=!1),r===!0&&this.checkUniform(e),this._floats[e]=t,this},r.prototype.checkUniform=function(e){this._uniforms.indexOf(e)===-1&&(this._uniforms.push(e),this.locals.defineBoolean(e.toUpperCase()))},r.prototype.checkSampler=function(e){this._samplers.indexOf(e)===-1&&(this._samplers.push(e),this.locals.defineBoolean(e.toUpperCase()),this.checkUniform(e+"Infos"),this.checkUniform(e+"Matrix"))},r.prototype.getAnimatables=function(){var e=t.prototype.getAnimatables.call(this);for(var r in this._textures){var i=this._textures[r];i&&i.animations&&i.animations.length>0&&e.push(i)}return e},r.prototype.getActiveTextures=function(){var e=t.prototype.getActiveTextures.call(this);for(var r in this._textures){var i=this._textures[r];i&&e.push(i)}return e},r.prototype.hasTexture=function(e){if(t.prototype.hasTexture.call(this,e))return!0;var r=!1;for(var i in this._textures){var s=this._textures[i];if(s===s){r=!0;break}}return r},r.prototype.dispose=function(e,r){if(r)for(var i in this._textures){var s=this._textures[i];s&&s.dispose(),this._textures[i]=null}this._textures={},t.prototype.dispose.call(this,e,r)},r.prototype.clone=function(t){var r,i=this,s=e.SerializationHelper.Clone(function(){return new e.UniversalDiffuseMaterial(t,i.getScene())},this);s._textures={};for(r in this._textures){var o=this._textures[r];o&&s.setTexture(r,o.clone(),!0)}s._vectors4={};for(r in this._vectors4)s.setVector4(r,this._vectors4[r].clone(),!0);s._floats={};for(r in this._floats)s.setFloat(r,this._floats[r],!0);return s},r.prototype.serialize=function(){var t,r=e.SerializationHelper.Serialize(this);r.customType="BABYLON.UniversalDiffuseMaterial",r.textures={};for(t in this._textures){var i=this._textures[t];i&&(r.textures[t]=i.serialize())}r.vectors4={};for(t in this._vectors4)r.vectors4[t]=this._vectors4[t].asArray();r.floats={};for(t in this._floats)r.floats[t]=this._floats[t];return r},r.Parse=function(t,r,i){var s,o=e.SerializationHelper.Parse(function(){return new e.UniversalDiffuseMaterial(t.name,r)},t,r,i);for(s in t.textures){var n=t.textures[s];n&&o.setTexture(s,e.Texture.Parse(n,r,i),!0)}for(s in t.vectors4)o.setVector4(s,e.Vector4.FromArray(t.vectors4[s]),!0);for(s in t.floats)o.setFloat(s,t.floats[s],!0);return o},r.prototype.customShaderChunkResolve=function(){var t=this.getShaderChunk();if(null!=t&&""!==t){var r=t+"ShaderChunks";if(null!=e.Effect.ShadersStore[r]){var i=e.Effect.ShadersStore[r],s=e.Utilities.HasOwnProperty(i,"VertexBegin")?i.VertexBegin:null;null!=s&&""!==s&&(this.materialShaderChunks.Vertex_Begin=s);var o=e.Utilities.HasOwnProperty(i,"VertexDefinitions")?i.VertexDefinitions:null;null!=o&&""!==o&&(this.materialShaderChunks.Vertex_Definitions=o);var n=e.Utilities.HasOwnProperty(i,"VertexMainBegin")?i.VertexMainBegin:null;null!=n&&""!==n&&(this.materialShaderChunks.Vertex_MainBegin=n);var a=e.Utilities.HasOwnProperty(i,"VertexUpdatePosition")?i.VertexUpdatePosition:null;null!=a&&""!==a&&(this.materialShaderChunks.Vertex_Before_PositionUpdated=a.replace("result","positionUpdated"));var l=e.Utilities.HasOwnProperty(i,"VertexUpdateNormal")?i.VertexUpdateNormal:null;null!=l&&""!==l&&(this.materialShaderChunks.Vertex_Before_NormalUpdated=l.replace("result","normalUpdated"));var h=e.Utilities.HasOwnProperty(i,"VertexMainEnd")?i.VertexMainEnd:null;null!=h&&""!==h&&(this.materialShaderChunks.Vertex_MainEnd=h);var c=e.Utilities.HasOwnProperty(i,"FragmentBegin")?i.FragmentBegin:null;null!=c&&""!==c&&(this.materialShaderChunks.Fragment_Begin=c);var u=e.Utilities.HasOwnProperty(i,"FragmentDefinitions")?i.FragmentDefinitions:null;null!=u&&""!==u&&(this.materialShaderChunks.Fragment_Definitions=u);var m=e.Utilities.HasOwnProperty(i,"FragmentMainBegin")?i.FragmentMainBegin:null;null!=m&&""!==m&&(this.materialShaderChunks.Fragment_MainBegin=m);var p=e.Utilities.HasOwnProperty(i,"FragmentUpdateDiffuse")?i.FragmentUpdateDiffuse:null;null!=p&&""!==p&&(this.materialShaderChunks.Fragment_Custom_Diffuse=p.replace("result","diffuseColor"));var f=e.Utilities.HasOwnProperty(i,"FragmentUpdateAlpha")?i.FragmentUpdateAlpha:null;null!=f&&""!==f&&(this.materialShaderChunks.Fragment_Custom_Alpha=f.replace("result","alpha"));var y=e.Utilities.HasOwnProperty(i,"FragmentBeforeLights")?i.FragmentBeforeLights:null;null!=y&&""!==y&&(this.materialShaderChunks.Fragment_Before_Lights=y);var _=e.Utilities.HasOwnProperty(i,"FragmentBeforeFog")?i.FragmentBeforeFog:null;null!=_&&""!==_&&(this.materialShaderChunks.Fragment_Before_Fog=_);var d=e.Utilities.HasOwnProperty(i,"FragmentBeforeFragColor")?i.FragmentBeforeFragColor:null;null!=d&&""!==d&&(this.materialShaderChunks.Fragment_Before_FragColor=d.replace("result","color"))}else e.Tools.Warn("Failed To Locate Shader Chunk Base: "+r)}},r.prototype._buildCustomShader=function(e,t,r,i,s){this._defines=s;var o=this.getShaderName();null!=o&&""!==o||(o=e),null!=o&&""!==o||(o="default");var n=this.locals.getDefines();if(null!=n&&null!=this._defines){var a=Object.keys(n);if(null!=a&&a.length>0){for(var l=this._defines,h=0,c=a;h<c.length;h++){var u=c[h];l[u]=n[u]}this._defines.rebuild()}}var m=0;if(null!=this._uniforms&&this._uniforms.length>0)for(m=0;m<this._uniforms.length;m++){var p=this._uniforms[m];t.indexOf(p)===-1&&t.push(p)}if(m=0,null!=this._samplers&&this._samplers.length>0)for(m=0;m<this._samplers.length;m++){var f=this._samplers[m];i.indexOf(f)===-1&&i.push(f)}return this.enableShaderChunks===!0?this._createShaderChunks(o):o},r.prototype._createShaderChunks=function(t){if(this._isCreatedShader)return this._createdShaderName;this._isCreatedShader=!1;var r=this.getShaderChunk();null!=r&&""!==r||(r=t),e.UniversalShaderDefines.ShaderIndexer++;var i=(r+"Custom"+e.UniversalShaderDefines.ShaderIndexer).trim(),s=e.Effect.ShadersStore[t+"VertexShader"],o=e.Effect.ShadersStore[t+"PixelShader"];this.updateShaderChunks();var n=i+"VertexShader";e.Effect.ShadersStore[n]=s.replace("#define CUSTOM_VERTEX_BEGIN",this.materialShaderChunks.Vertex_Begin?this.materialShaderChunks.Vertex_Begin:"").replace("#define CUSTOM_VERTEX_DEFINITIONS",this.materialShaderChunks.Vertex_Definitions?this.materialShaderChunks.Vertex_Definitions:"").replace("#define CUSTOM_VERTEX_MAIN_BEGIN",this.materialShaderChunks.Vertex_MainBegin?this.materialShaderChunks.Vertex_MainBegin:"").replace("#define CUSTOM_VERTEX_UPDATE_POSITION",this.materialShaderChunks.Vertex_Before_PositionUpdated?this.materialShaderChunks.Vertex_Before_PositionUpdated:"").replace("#define CUSTOM_VERTEX_UPDATE_NORMAL",this.materialShaderChunks.Vertex_Before_NormalUpdated?this.materialShaderChunks.Vertex_Before_NormalUpdated:"").replace("#define CUSTOM_VERTEX_MAIN_END",this.materialShaderChunks.Vertex_MainEnd?this.materialShaderChunks.Vertex_MainEnd:"");var a=i+"PixelShader";return e.Effect.ShadersStore[a]=o.replace("#define CUSTOM_FRAGMENT_BEGIN",this.materialShaderChunks.Fragment_Begin?this.materialShaderChunks.Fragment_Begin:"").replace("#define CUSTOM_FRAGMENT_DEFINITIONS",this.materialShaderChunks.Fragment_Definitions?this.materialShaderChunks.Fragment_Definitions:"").replace("#define CUSTOM_FRAGMENT_MAIN_BEGIN",this.materialShaderChunks.Fragment_MainBegin?this.materialShaderChunks.Fragment_MainBegin:"").replace("#define CUSTOM_FRAGMENT_UPDATE_DIFFUSE",this.materialShaderChunks.Fragment_Custom_Diffuse?this.materialShaderChunks.Fragment_Custom_Diffuse:"").replace("#define CUSTOM_FRAGMENT_UPDATE_ALPHA",this.materialShaderChunks.Fragment_Custom_Alpha?this.materialShaderChunks.Fragment_Custom_Alpha:"").replace("#define CUSTOM_FRAGMENT_BEFORE_LIGHTS",this.materialShaderChunks.Fragment_Before_Lights?this.materialShaderChunks.Fragment_Before_Lights:"").replace("#define CUSTOM_FRAGMENT_BEFORE_FOG",this.materialShaderChunks.Fragment_Before_Fog?this.materialShaderChunks.Fragment_Before_Fog:"").replace("#define CUSTOM_FRAGMENT_BEFORE_FRAGCOLOR",this.materialShaderChunks.Fragment_Before_FragColor?this.materialShaderChunks.Fragment_Before_FragColor:""),this._isCreatedShader=!0,this._createdShaderName=i,i},r.prototype._attachAfterBind=function(e,t){var r,i=this.getScene();if(i.texturesEnabled)for(r in this._textures){var s=this._textures[r];null!=s&&(t.setTexture(r,s),t.setFloat2(r+"Infos",s.coordinatesIndex,s.level),t.setMatrix(r+"Matrix",s.getTextureMatrix()))}for(r in this._vectors4)t.setVector4(r,this._vectors4[r]);for(r in this._floats)t.setFloat(r,this._floats[r])},r.prototype._setupAttachAfterBind=function(){var e=this,t=this._afterBind;this._afterBind=function(r,i){if(e._attachAfterBind(r,i),t)try{t(r,i)}catch(s){}}},r}(e.StandardMaterial);e.UniversalDiffuseMaterial=a,e._TypeStore.RegisteredTypes.UniversalDiffuseMaterial=a;var l=function(t){function r(e,r){var i=t.call(this,e,r)||this;return i.enableShaderChunks=!0,i}return __extends(r,t),r.prototype.getClassName=function(){return"UniversalTerrainMaterial"},r.prototype.getShaderName=function(){return"pbr"},r.prototype.getShaderChunk=function(){return null},r.prototype.updateShaderChunks=function(){var t="surfaceAlbedo",r="splatmapSampler",i="detailsSampler",s="normalsSampler",o=e.System.GammaCorrection;null!=this.materialShaderChunks.Vertex_Definitions&&""!==this.materialShaderChunks.Vertex_Definitions?this.materialShaderChunks.Vertex_Definitions=this.formatTerrainVertexDefintions()+this.materialShaderChunks.Vertex_Definitions:this.materialShaderChunks.Vertex_Definitions=this.formatTerrainVertexDefintions(),null!=this.materialShaderChunks.Vertex_MainEnd&&""!==this.materialShaderChunks.Vertex_MainEnd?this.materialShaderChunks.Vertex_MainEnd=this.formatTerrainVertexMainEnd()+this.materialShaderChunks.Vertex_MainEnd:this.materialShaderChunks.Vertex_MainEnd=this.formatTerrainVertexMainEnd(),null!=this.materialShaderChunks.Fragment_Definitions&&""!==this.materialShaderChunks.Fragment_Definitions?this.materialShaderChunks.Fragment_Definitions=this.formatTerrainFragmentDefintions(r,i,s)+this.materialShaderChunks.Fragment_Definitions:this.materialShaderChunks.Fragment_Definitions=this.formatTerrainFragmentDefintions(r,i,s),null!=this.materialShaderChunks.Fragment_Custom_Albedo&&""!==this.materialShaderChunks.Fragment_Custom_Albedo?this.materialShaderChunks.Fragment_Custom_Albedo=this.formatTerrainFragmentUpdateColor(this.terrainInfo,t,r,i,s,o)+this.materialShaderChunks.Fragment_Custom_Albedo:this.materialShaderChunks.Fragment_Custom_Albedo=this.formatTerrainFragmentUpdateColor(this.terrainInfo,t,r,i,s,o)},r.prototype.formatTerrainVertexDefintions=function(){return"\r\n#define TERRAIN_VERTEX_DEFINITIONS\r\n\r\nvarying vec2 vSplatmapUV;\r\n\r\n"},r.prototype.formatTerrainVertexMainEnd=function(){return"\r\n#define TERRAIN_VERTEX_MAIN_END\r\n\r\n#ifdef UV1\r\nvSplatmapUV = uv;\r\n#endif\r\n\r\n"},r.prototype.formatTerrainFragmentDefintions=function(e,t,r){return"\r\n#define TERRAIN_FRAGMENT_DEFNITIONS\r\n\r\nvarying vec2 vSplatmapUV;\r\nuniform sampler2D "+e+";\r\nuniform sampler2D "+t+";\r\nuniform sampler2D "+r+";\r\n\r\nfloat calculateMipmapLevel(const in vec2 uvs, const in vec2 size)\r\n{\r\n    vec2 dx = dFdx(uvs * size.x);\r\n    vec2 dy = dFdy(uvs * size.y);\r\n    float d = max(dot(dx, dx), dot(dy, dy));\r\n    return 0.4 * log2(d);\r\n}\r\n\r\nvec4 sampleTextureAtlas2D(const in sampler2D atlas, const in float gamma, const in vec2 tile, const in vec4 rect, in vec2 uvs, in float lod)\r\n{\r\n    if (lod < 0.0) lod = clamp(calculateMipmapLevel(uvs, vec2(tile.x, tile.x)), 0.0, tile.y);   // Tile Info (tile.xy)\r\n    float size = pow(2.0, tile.y - lod);                                                        // Tile Bits (tile.y)\r\n    float sizex = size / rect.z;                                                                // Tile Width (rect.z)\r\n    float sizey = size / rect.w;                                                                // Tile Height (rect.w)\r\n    uvs = fract(uvs);                                                                           // Perfrom Tiling (fract)\r\n    uvs.x = uvs.x * ((sizex * rect.z - 1.0) / sizex) + 0.5 / sizex + rect.z * rect.x;           // Tile Position X (rect.x)\r\n    uvs.y = uvs.y * ((sizey * rect.w - 1.0) / sizey) + 0.5 / sizey + rect.w * rect.y;           // Tile Position Y (rect.y)\r\n    vec4 color = texture2DLodEXT(atlas, uvs, lod);\r\n    if (gamma != 1.0) {\r\n        color.r = pow(color.r, gamma);\r\n        color.g = pow(color.g, gamma);\r\n        color.b = pow(color.b, gamma);\r\n    }\r\n    return color;\r\n}\r\n\r\nvec4 sampleSplatmapAtlas2D(const in sampler2D atlas, const in vec2 tile, const in vec4 rect, in vec2 uvs)\r\n{\r\n    float size = pow(2.0, tile.y);                                                              // Tile Bits (tile.y)\r\n\t   float sizex = size / rect.z;                                                                // Tile Width (rect.z)\r\n\t   float sizey = size / rect.w;                                                                // Tile Height (rect.w)\r\n\t   uvs.x = uvs.x * ((sizex * rect.z - 1.0) / sizex) + 0.5 / sizex + rect.z * rect.x;           // Tile Position X (rect.x)\r\n\t   uvs.y = uvs.y * ((sizey * rect.w - 1.0) / sizey) + 0.5 / sizey + rect.w * rect.y;           // Tile Position Y (rect.y)\r\n    return texture2D(atlas, uvs);\r\n}\r\n\r\nvec3 blendSplatmapAtlasColors(const in vec4 splatmap, in vec4 color1, in vec4 color2, in vec4 color3, in vec4 color4, in vec3 mixbuffer)\r\n{\r\n    mixbuffer += (color1.rgb * splatmap.r);\r\n    mixbuffer += (color2.rgb * splatmap.g);\r\n    mixbuffer += (color3.rgb * splatmap.b);\r\n    mixbuffer += (color4.rgb * splatmap.a);\r\n    return mixbuffer;\r\n}\r\n\r\nvec3 perturbNormalSamplerColor(mat3 cotangentFrame, vec3 samplerColor, float scale)\r\n{\r\n    vec3 map = samplerColor.xyz;\r\n    map = map * 2.00787402 - 1.00787402;\r\n    #ifdef NORMALXYSCALE\r\n        map = normalize(map * vec3(scale, scale, 1.0));\r\n    #endif\r\n    return normalize(cotangentFrame * map);\r\n}\r\n\r\n\r\n"},r.prototype.formatTerrainFragmentUpdateColor=function(e,t,r,i,s,o){void 0===o&&(o=1);var n="";if(null!=e&&null!=e.textureAtlas&&null!=e.splatmapAtlas&&e.splatmapCount>1){n="\r\n#define TERRAIN_FRAGMENT_UPDATE_COLOR\r\n\r\nvec3 normalsColor = vec3(0.5, 0.5, 1.0);\r\nvec3 normalsBuffer = vec3(0.0, 0.0, 0.0);\r\nvec3 splatmapBuffer = vec3(0.0, 0.0, 0.0);\r\nfloat autoMipMapLevel = -1.0;\r\nfloat normalCorrection = 1.0;\r\nfloat detailCorrection = "+o.toFixed(4)+";\r\n\r\n#if defined(ALBEDO) && defined("+r.toUpperCase()+") && defined("+i.toUpperCase()+")\r\n\r\n// Reset Normal Values\r\n#if defined(BUMP) || defined(PARALLAX) || defined(ANISOTROPIC)\r\n    uvOffset = vec2(0.0, 0.0);\r\n    #ifdef NORMAL\r\n        normalW = normalize(vNormalW);\r\n    #else\r\n        normalW = normalize(cross(dFdx(vPositionW), dFdy(vPositionW))) * vEyePosition.w;\r\n    #endif\r\n    #ifdef CLEARCOAT\r\n        clearCoatNormalW = normalW;\r\n    #endif\r\n    #if defined(BUMP) || defined(PARALLAX)\r\n        #if defined(TANGENT) && defined(NORMAL)\r\n            TBN = vTBN;\r\n        #else\r\n            TBN = cotangent_frame(normalW, vPositionW, vSplatmapUV);\r\n        #endif\r\n    #elif defined(ANISOTROPIC)\r\n        #if defined(TANGENT) && defined(NORMAL)\r\n            TBN = vTBN;\r\n        #else\r\n            TBN = cotangent_frame(normalW, vPositionW, vSplatmapUV, vec2(1.0, 1.0));\r\n        #endif\r\n    #endif\r\n    #ifdef PARALLAX\r\n        invTBN = transposeMat3(TBN);\r\n    #endif\r\n    normalW = perturbNormalSamplerColor(TBN, normalsColor, 1.0);\r\n#endif\r\n\r\n// Global Atlas Values\r\nfloat splatTileSize = "+e.splatmapAtlas[2].toFixed(4)+";\r\nfloat splatTileBits = "+e.splatmapAtlas[3].toFixed(4)+";\r\nfloat detailTileSize = "+e.textureAtlas[2].toFixed(4)+";\r\nfloat detailTileBits = "+e.textureAtlas[3].toFixed(4)+";\r\n\r\n// Sample splatmap textures\r\n";for(var a=0,l=0;l<e.splatmapCount;l++){a=4*l;var h=e["splatmapRect"+l];if(n+="vec4 splatmapRect"+l+" = vec4("+h[0].toFixed(4)+", "+h[1].toFixed(4)+", "+h[2].toFixed(4)+", "+h[3].toFixed(4)+");\r\n",n+="vec4 splatmapAlbedo"+l+" = sampleSplatmapAtlas2D("+r+", vec2(splatTileSize, splatTileBits), splatmapRect"+l+", (vSplatmapUV + uvOffset));\r\n",n+="vec4 textureAlbedo"+(a+0)+" = vec4(0.0, 0.0, 0.0, 1.0);\r\n",n+="vec4 textureAlbedo"+(a+1)+" = vec4(0.0, 0.0, 0.0, 1.0);\r\n",n+="vec4 textureAlbedo"+(a+2)+" = vec4(0.0, 0.0, 0.0, 1.0);\r\n",n+="vec4 textureAlbedo"+(a+3)+" = vec4(0.0, 0.0, 0.0, 1.0);\r\n",e["textureRect"+(a+0)]){var c=e["textureRect"+(a+0)],u=e["textureInfo"+(a+0)];n+="vec4 textureRect"+(a+0)+" = vec4("+c[0].toFixed(4)+", "+c[1].toFixed(4)+", "+c[2].toFixed(4)+", "+c[3].toFixed(4)+");\r\n",n+="vec2 textureScale"+(a+0)+" = vec2("+u[0].toFixed(4)+", "+u[1].toFixed(4)+");\r\n",n+="vec2 textureOffset"+(a+0)+" = vec2("+u[2].toFixed(4)+", "+u[3].toFixed(4)+");\r\n",n+="vec2 textureTileUV"+(a+0)+" = ((vSplatmapUV + textureOffset"+(a+0)+") * textureScale"+(a+0)+");\r\n",n+="textureAlbedo"+(a+0)+" = sampleTextureAtlas2D("+i+", detailCorrection, vec2(detailTileSize, detailTileBits), textureRect"+(a+0)+", textureTileUV"+(a+0)+", autoMipMapLevel);\r\n"}if(e["textureRect"+(a+1)]){var c=e["textureRect"+(a+1)],u=e["textureInfo"+(a+1)];n+="vec4 textureRect"+(a+1)+" = vec4("+c[0].toFixed(4)+", "+c[1].toFixed(4)+", "+c[2].toFixed(4)+", "+c[3].toFixed(4)+");\r\n",n+="vec2 textureScale"+(a+1)+" = vec2("+u[0].toFixed(4)+", "+u[1].toFixed(4)+");\r\n",n+="vec2 textureOffset"+(a+1)+" = vec2("+u[2].toFixed(4)+", "+u[3].toFixed(4)+");\r\n",n+="vec2 textureTileUV"+(a+1)+" = ((vSplatmapUV + textureOffset"+(a+1)+") * textureScale"+(a+1)+");\r\n",n+="textureAlbedo"+(a+1)+" = sampleTextureAtlas2D("+i+", detailCorrection, vec2(detailTileSize, detailTileBits), textureRect"+(a+1)+", textureTileUV"+(a+1)+", autoMipMapLevel);\r\n"}if(e["textureRect"+(a+2)]){var c=e["textureRect"+(a+2)],u=e["textureInfo"+(a+2)];n+="vec4 textureRect"+(a+2)+" = vec4("+c[0].toFixed(4)+", "+c[1].toFixed(4)+", "+c[2].toFixed(4)+", "+c[3].toFixed(4)+");\r\n",n+="vec2 textureScale"+(a+2)+" = vec2("+u[0].toFixed(4)+", "+u[1].toFixed(4)+");\r\n",n+="vec2 textureOffset"+(a+2)+" = vec2("+u[2].toFixed(4)+", "+u[3].toFixed(4)+");\r\n",n+="vec2 textureTileUV"+(a+2)+" = ((vSplatmapUV + textureOffset"+(a+2)+") * textureScale"+(a+2)+");\r\n",n+="textureAlbedo"+(a+2)+" = sampleTextureAtlas2D("+i+", detailCorrection, vec2(detailTileSize, detailTileBits), textureRect"+(a+2)+", textureTileUV"+(a+2)+", autoMipMapLevel);\r\n"}if(e["textureRect"+(a+3)]){var c=e["textureRect"+(a+3)],u=e["textureInfo"+(a+3)];n+="vec4 textureRect"+(a+3)+" = vec4("+c[0].toFixed(4)+", "+c[1].toFixed(4)+", "+c[2].toFixed(4)+", "+c[3].toFixed(4)+");\r\n",n+="vec2 textureScale"+(a+3)+" = vec2("+u[0].toFixed(4)+", "+u[1].toFixed(4)+");\r\n",n+="vec2 textureOffset"+(a+3)+" = vec2("+u[2].toFixed(4)+", "+u[3].toFixed(4)+");\r\n",n+="vec2 textureTileUV"+(a+3)+" = ((vSplatmapUV + textureOffset"+(a+3)+") * textureScale"+(a+3)+");\r\n",n+="textureAlbedo"+(a+3)+" = sampleTextureAtlas2D("+i+", detailCorrection, vec2(detailTileSize, detailTileBits), textureRect"+(a+3)+", textureTileUV"+(a+3)+", autoMipMapLevel);\r\n"}if(n+="splatmapBuffer = blendSplatmapAtlasColors(splatmapAlbedo"+l+", textureAlbedo"+(a+0)+", textureAlbedo"+(a+1)+", textureAlbedo"+(a+2)+", textureAlbedo"+(a+3)+", splatmapBuffer);\r\n",n+="#if defined(BUMP) || defined(PARALLAX) || defined(ANISOTROPIC)\r\n",n+="    #if defined("+s.toUpperCase()+")\r\n",n+="        vec4 normalColor"+(a+0)+" = vec4(0.0, 0.0, 0.0, 1.0);\r\n",n+="        vec4 normalColor"+(a+1)+" = vec4(0.0, 0.0, 0.0, 1.0);\r\n",n+="        vec4 normalColor"+(a+2)+" = vec4(0.0, 0.0, 0.0, 1.0);\r\n",n+="        vec4 normalColor"+(a+3)+" = vec4(0.0, 0.0, 0.0, 1.0);\r\n",e["textureRect"+(a+0)]){var m=e["normalsScale"+(a+0)];n+="        float normalScale"+(a+0)+" = "+m.toFixed(4)+";\r\n",n+="        normalColor"+(a+0)+" = sampleTextureAtlas2D("+s+", normalCorrection, vec2(detailTileSize, detailTileBits), textureRect"+(a+0)+", textureTileUV"+(a+0)+", autoMipMapLevel);\r\n",n+="        normalColor"+(a+0)+".rgb = perturbNormalSamplerColor(TBN, normalColor"+(a+0)+".rgb, normalScale"+(a+0)+");\r\n"}if(e["textureRect"+(a+1)]){var m=e["normalsScale"+(a+1)];n+="        float normalScale"+(a+1)+" = "+m.toFixed(4)+";\r\n",n+="        normalColor"+(a+1)+" = sampleTextureAtlas2D("+s+", normalCorrection, vec2(detailTileSize, detailTileBits), textureRect"+(a+1)+", textureTileUV"+(a+1)+", autoMipMapLevel);\r\n",n+="        normalColor"+(a+1)+".rgb = perturbNormalSamplerColor(TBN, normalColor"+(a+1)+".rgb, normalScale"+(a+1)+");\r\n"}if(e["textureRect"+(a+2)]){var m=e["normalsScale"+(a+2)];n+="        float normalScale"+(a+2)+" = "+m.toFixed(4)+";\r\n",n+="        normalColor"+(a+2)+" = sampleTextureAtlas2D("+s+", normalCorrection, vec2(detailTileSize, detailTileBits), textureRect"+(a+2)+", textureTileUV"+(a+2)+", autoMipMapLevel);\r\n",n+="        normalColor"+(a+2)+".rgb = perturbNormalSamplerColor(TBN, normalColor"+(a+2)+".rgb, normalScale"+(a+2)+");\r\n"}if(e["textureRect"+(a+3)]){var m=e["normalsScale"+(a+3)];n+="        float normalScale"+(a+3)+" = "+m.toFixed(4)+";\r\n",n+="        normalColor"+(a+3)+" = sampleTextureAtlas2D("+s+", normalCorrection, vec2(detailTileSize, detailTileBits), textureRect"+(a+3)+", textureTileUV"+(a+3)+", autoMipMapLevel);\r\n",n+="        normalColor"+(a+3)+".rgb = perturbNormalSamplerColor(TBN, normalColor"+(a+3)+".rgb, normalScale"+(a+3)+");\r\n"}n+="        normalsBuffer = blendSplatmapAtlasColors(splatmapAlbedo"+l+", normalColor"+(a+0)+", normalColor"+(a+1)+", normalColor"+(a+2)+", normalColor"+(a+3)+", normalsBuffer);\r\n",n+="    #endif\r\n",n+="#endif\r\n",n+="\r\n"}n+="// Update Color Values\r\n"+t+".rgb = splatmapBuffer;\r\n#if defined(BUMP) || defined(PARALLAX) || defined(ANISOTROPIC)\r\n    #if defined("+s.toUpperCase()+")\r\n        normalW = normalsBuffer;\r\n    #endif\r\n    #if defined(FORCENORMALFORWARD) && defined(NORMAL)\r\n        vec3 faceNormal = normalize(cross(dFdx(vPositionW), dFdy(vPositionW))) * vEyePosition.w;\r\n        #if defined(TWOSIDEDLIGHTING)\r\n            faceNormal = gl_FrontFacing ? faceNormal : -faceNormal;\r\n        #endif\r\n        normalW *= sign(dot(normalW, faceNormal));\r\n    #endif\r\n    #if defined(TWOSIDEDLIGHTING) && defined(NORMAL)\r\n        normalW = gl_FrontFacing ? normalW : -normalW;\r\n    #endif\r\n#endif\r\n\r\n#endif\r\n\r\n"}return n},r}(e.UniversalAlbedoMaterial);e.UniversalTerrainMaterial=l,e._TypeStore.RegisteredTypes.UniversalTerrainMaterial=l}(BABYLON||(BABYLON={}));var __extends=this&&this.__extends||function(){var e=function(t,r){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(t,r)};return function(t,r){function i(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(i.prototype=r.prototype,new i)}}(),BABYLON;!function(e){var t=function(t){function r(e,r,i){return void 0===i&&(i={}),t.call(this,e,r,i)||this}return __extends(r,t),r.prototype.start=function(){},r.prototype.update=function(){},r.prototype.after=function(){},r.prototype.destroy=function(){},r.IsXboxLivePluginEnabled=function(){return!!window.isXboxLivePluginEnabled&&window.isXboxLivePluginEnabled()},r.IsXboxLiveUserSignedIn=function(t,r){if(void 0===t&&(t=null),void 0===r&&(r=e.PlayerNumber.One),e.WindowsPlatform.IsXboxLivePluginEnabled()){var i=null!=t?e.WindowsPlatform.GetXboxLiveSystemUser(t,r):e.WindowsPlatform.GetXboxLiveUser(r);return null!=i&&1==i.isSignedIn}return!1},r.XboxLiveUserSignIn=function(t,r,i,s){void 0===t&&(t=e.PlayerNumber.One),e.WindowsPlatform.IsXboxLivePluginEnabled()&&e.WindowsPlatform.XboxLiveUserSilentSignIn(t,function(o){o.status===Microsoft.Xbox.Services.System.SignInStatus.userInteractionRequired?e.WindowsPlatform.XboxLiveUserDialogSignIn(t,function(e){r&&r(e)},i,s):r&&r(o)},i,s)},r.XboxLiveUserSilentSignIn=function(t,r,i,s){return void 0===t&&(t=e.PlayerNumber.One),e.WindowsPlatform.IsXboxLivePluginEnabled()?e.WindowsPlatform.GetXboxLiveUser(t).signInSilentlyAsync(null).then(r,i,s):null},r.XboxLiveUserDialogSignIn=function(t,r,i,s){return void 0===t&&(t=e.PlayerNumber.One),e.WindowsPlatform.IsXboxLivePluginEnabled()?e.WindowsPlatform.GetXboxLiveUser(t).signInAsync(null).then(r,i,s):null},r.LoadXboxLiveUserProfile=function(t,r,i,s){return void 0===t&&(t=e.PlayerNumber.One),e.WindowsPlatform.IsXboxLivePluginEnabled()?e.WindowsPlatform.GetXboxLiveUserContext(t).profileService.getUserProfileAsync(e.WindowsPlatform.GetXboxLiveUser(t).xboxUserId).then(r,i,s):null},r.GetXboxLiveUser=function(t){void 0===t&&(t=e.PlayerNumber.One);var r=null;if(e.WindowsPlatform.IsXboxLivePluginEnabled())switch(t){case e.PlayerNumber.One:r=window.BabylonToolkit.XboxLive.Plugin.getXboxLiveUserOne();break;case e.PlayerNumber.Two:r=window.BabylonToolkit.XboxLive.Plugin.getXboxLiveUserTwo();break;case e.PlayerNumber.Three:r=window.BabylonToolkit.XboxLive.Plugin.getXboxLiveUserThree();break;case e.PlayerNumber.Four:r=window.BabylonToolkit.XboxLive.Plugin.getXboxLiveUserFour()}return r},r.GetXboxLiveSystemUser=function(t,r){void 0===r&&(r=e.PlayerNumber.One);var i=null;if(e.WindowsPlatform.IsXboxLivePluginEnabled())switch(r){case e.PlayerNumber.One:i=window.BabylonToolkit.XboxLive.Plugin.getXboxLiveSystemUserOne(t);break;case e.PlayerNumber.Two:i=window.BabylonToolkit.XboxLive.Plugin.getXboxLiveSystemUserTwo(t);break;case e.PlayerNumber.Three:i=window.BabylonToolkit.XboxLive.Plugin.getXboxLiveSystemUserThree(t);break;case e.PlayerNumber.Four:i=window.BabylonToolkit.XboxLive.Plugin.getXboxLiveSystemUserFour(t)}return i},r.GetXboxLiveUserContext=function(t){void 0===t&&(t=e.PlayerNumber.One);var r=null;if(e.WindowsPlatform.IsXboxLivePluginEnabled())switch(t){case e.PlayerNumber.One:r=window.BabylonToolkit.XboxLive.Plugin.getXboxLiveContextOne();break;case e.PlayerNumber.Two:r=window.BabylonToolkit.XboxLive.Plugin.getXboxLiveContextTwo();break;case e.PlayerNumber.Three:r=window.BabylonToolkit.XboxLive.Plugin.getXboxLiveContextThree();break;case e.PlayerNumber.Four:r=window.BabylonToolkit.XboxLive.Plugin.getXboxLiveContextFour()}return r},r.ResetXboxLiveUserContext=function(t){if(void 0===t&&(t=e.PlayerNumber.One),e.WindowsPlatform.IsXboxLivePluginEnabled()&&e.WindowsPlatform.IsXboxLivePluginEnabled())switch(t){case e.PlayerNumber.One:window.BabylonToolkit.XboxLive.Plugin.resetXboxLiveUserContextOne();break;case e.PlayerNumber.Two:window.BabylonToolkit.XboxLive.Plugin.resetXboxLiveUserContextTwo();break;case e.PlayerNumber.Three:window.BabylonToolkit.XboxLive.Plugin.resetXboxLiveUserContextThree();break;case e.PlayerNumber.Four:window.BabylonToolkit.XboxLive.Plugin.resetXboxLiveUserContextFour()}},r.GetXboxLiveContextProperty=function(t){return e.WindowsPlatform.IsXboxLivePluginEnabled()?window.BabylonToolkit.XboxLive.Plugin.getXboxLiveContextProperty(t):null},r.SetXboxLiveContextProperty=function(t,r){e.WindowsPlatform.IsXboxLivePluginEnabled()&&window.BabylonToolkit.XboxLive.Plugin.setXboxLiveContextProperty(t,r)},r.ResetXboxLivePropertyContexts=function(){e.WindowsPlatform.IsXboxLivePluginEnabled()&&window.BabylonToolkit.XboxLive.Plugin.resetXboxLivePropertyContexts()},r.SetXboxLiveSignOutHandler=function(t){void 0===t&&(t=null),e.WindowsPlatform.IsXboxLivePluginEnabled()&&(window.BabylonToolkit.XboxLive.Plugin.onusersignout=t)},r}(e.ScriptComponent);e.WindowsPlatform=t}(BABYLON||(BABYLON={})),BABYLON.SceneManager.IsXboxOne()&&navigator.gamepadInputEmulation&&(navigator.gamepadInputEmulation="gamepad"),BABYLON.SceneManager.IsWindows()&&"undefined"!=typeof Windows.UI.ViewManagement&&"undefined"!=typeof Windows.UI.ViewManagement.ApplicationViewBoundsMode&&"undefined"!=typeof Windows.UI.ViewManagement.ApplicationViewBoundsMode.useCoreWindow&&Windows.UI.ViewManagement.ApplicationView.getForCurrentView().setDesiredBoundsMode(Windows.UI.ViewManagement.ApplicationViewBoundsMode.useCoreWindow);

// worker.js
var versionStamp = '###VERSION###';
var installFiles = ['###INSTALL###'];
// ..
// Post Service Worker Version Message
// ..
self.addEventListener('message', function(evt) {
    if (evt.data != null && evt.data === 'version' && evt.ports != null && evt.ports.length > 0) {
        var port = evt.ports[0];
        if (port && port.postMessage) {
            // console.log('WORKER: Version check: ' + versionStamp);
            port.postMessage(versionStamp);
        }
    }
});
// ..
// Install Service Worker File System
// ..
self.addEventListener('install', function(evt) {
    evt.waitUntil(
        caches.open(versionStamp).then(function(cache) {
            // console.log('WORKER: Fetching cache: ' + versionStamp);
            var cachePromises = installFiles.map(function(urlToPrefetch) {
                var url = new URL(urlToPrefetch, location.href);
                url.search += (url.search ? '&' : '?') + 'time=' + new Date().getTime().toString();
                var request = new Request(url, { mode: 'no-cors' });
                return fetch(request, { cache: 'no-store' }).then(function(response) {
                    if (response.status >= 400) throw new Error('request for ' + urlToPrefetch + ' failed with status ' + response.statusText);
                    return cache.put(urlToPrefetch, response);
                }).catch(function(error) {
                    // console.warn('WORKER: Not caching ' + urlToPrefetch + ' due to ' + error);
                });
            });
            return Promise.all(cachePromises).then(function() {
                // console.log('WORKER: Cache updated: ' + versionStamp);
                return self.skipWaiting();
            });
        }).catch(function(error) {
            // console.warn('WORKER: Pre-Fetching Failed: ', error);
        })
    );
});
// ..
// Activate Service Worker File System
// ..
self.addEventListener('activate', function(evt) {
    evt.waitUntil(
        caches.keys().then(function(cacheNames) {
            return Promise.all(
                cacheNames.map(function(cache) {
                    if (cache !== versionStamp) {
                        // console.log('WORKER: Cleaning cache: ' + cache);
                        return caches.delete(cache);
                    }
                })
            );
        })
    );
    // console.log('WORKER: Activate cache: ' + versionStamp);
    return self.clients.claim();
});
// ..
// Fetch Service Worker Request Files
// ..
self.addEventListener('fetch', function(evt) {
    // Chrome Dev Tools Bug - Temporary Workaround
    // https://bugs.chromium.org/p/chromium/issues/detail?id=823392    
    if (evt.request.cache === 'only-if-cached' && evt.request.mode !== 'same-origin') {
        var oStrangeRequest = evt.request.clone();
        console.warn('Chrome Dev Tools. Request cache has only-if-cached, but not same-origin.', oStrangeRequest.cache, oStrangeRequest.mode, 'request redirect:', oStrangeRequest.redirect, oStrangeRequest.url, oStrangeRequest);
        return;
    }
    evt.respondWith(
        caches.match(evt.request).then(function(response) {
            return response || fetch(evt.request, { cache: 'no-store' });
        })
    );
});

// BabylonToolkit2019.js
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var PROJECT;
(function (PROJECT) {
    /**
     * Babylon Script Component
     * @class DebugInformation
     */
    var DebugInformation = /** @class */ (function (_super) {
        __extends(DebugInformation, _super);
        function DebugInformation(transform, scene, properties) {
            if (properties === void 0) { properties = {}; }
            var _this = _super.call(this, transform, scene, properties) || this;
            _this.keys = true;
            _this.show = true;
            _this.popup = false;
            _this.views = false;
            _this.xbox = false;
            _this.keys = _this.getEditorProperty("enableDebugKeys", _this.keys);
            _this.show = _this.getEditorProperty("showDebugLabels", _this.show);
            _this.popup = _this.getEditorProperty("popupDebugPanel", _this.popup);
            _this.views = _this.getEditorProperty("togglePlayerViews", _this.views);
            _this.xbox = _this.getEditorProperty("allowXboxLiveSignIn", _this.xbox);
            // ..
            if (BABYLON.SceneManager.IsWindows())
                _this.popup = false;
            BABYLON.Tools.Log("Debug information overlay loaded");
            return _this;
        }
        DebugInformation.prototype.start = function () {
            var _this = this;
            //this.screen = document.getElementById("screen");
            //this.toggle = document.getElementById("toggle");
            //this.signin = document.getElementById("signin");
            //this.reload = document.getElementById("reload");
            //this.mouse = document.getElementById("mouse");
            //this.debug = document.getElementById("debug");
            if (this.show === true) {
                /*
                if (this.keys === true) {
                    if (!BABYLON.SceneManager.IsXboxOne()) {
                        if (this.screen) this.screen.innerHTML = "F - Show Full Screen";
                    }
                    if (BABYLON.CameraSystem.IsMultiPlayerView() && this.views === true) {
                        if (this.toggle) {
                            if (BABYLON.SceneManager.IsXboxOne()) {
                                this.toggle.style.top = "29px";
                            }
                            this.toggle.innerHTML = "1 - 4 Toggle Player View";
                        }
                    }
                    if (BABYLON.SceneManager.IsXboxLivePluginEnabled() && this.xbox === true) {
                        if (this.signin) {
                            if (BABYLON.SceneManager.IsXboxOne()) {
                                this.signin.style.top = "49px";
                            }
                            this.signin.innerHTML = "X - Xbox Live Sign In";
                        }
                    }
                    if (this.mouse) this.mouse.innerHTML = (BABYLON.SceneManager.IsXboxOne()) ? "M - Mouse" : "";
                    if (this.reload) this.reload.innerHTML = "R - Reload";
                    if (this.debug) this.debug.innerHTML = "P - Debug";
                }
                */
            }
            if (this.keys === true) {
                if (this.views === true) {
                    console.log("Enable Multiplayer Keys");
                    BABYLON.SceneManager.OnKeyboardPress(BABYLON.UserInputKey.Num1, function () {
                        BABYLON.UniversalCameraSystem.SetMultiPlayerViewLayout(_this.scene, 1);
                        console.log("1 player pressed");
                    });
                    BABYLON.SceneManager.OnKeyboardPress(BABYLON.UserInputKey.Num2, function () {
                        BABYLON.UniversalCameraSystem.SetMultiPlayerViewLayout(_this.scene, 2);
                        console.log("2 players pressed");
                    });
                    BABYLON.SceneManager.OnKeyboardPress(BABYLON.UserInputKey.Num3, function () {
                        BABYLON.UniversalCameraSystem.SetMultiPlayerViewLayout(_this.scene, 3);
                        console.log("3 players pressed");
                    });
                    BABYLON.SceneManager.OnKeyboardPress(BABYLON.UserInputKey.Num4, function () {
                        BABYLON.UniversalCameraSystem.SetMultiPlayerViewLayout(_this.scene, 4);
                        console.log("4 players pressed");
                    });
                }
                BABYLON.SceneManager.OnKeyboardPress(BABYLON.UserInputKey.R, function () {
                    window.location.reload();
                });
                BABYLON.SceneManager.OnKeyboardPress(BABYLON.UserInputKey.I, function () {
                    if (_this.popup === true) {
                        BABYLON.SceneManager.PopupDebug(_this.scene);
                    }
                    else {
                        BABYLON.SceneManager.ToggleDebug(_this.scene, true, null);
                    }
                });
                if (BABYLON.SceneManager.IsXboxOne()) {
                    if (navigator.gamepadInputEmulation) {
                        BABYLON.SceneManager.OnKeyboardPress(BABYLON.UserInputKey.M, function () {
                            if (navigator.gamepadInputEmulation !== "mouse") {
                                navigator.gamepadInputEmulation = "mouse";
                            }
                            else {
                                navigator.gamepadInputEmulation = "gamepad";
                            }
                        });
                    }
                }
                else {
                    BABYLON.SceneManager.OnKeyboardPress(BABYLON.UserInputKey.F, function () {
                        //BABYLON.Tools.RequestFullscreen(document.documentElement);
                        _this.scene.getEngine().enterFullscreen(true);
                    });
                }
                if (BABYLON.WindowsPlatform.IsXboxLivePluginEnabled() && this.xbox === true) {
                    BABYLON.SceneManager.OnKeyboardPress(BABYLON.UserInputKey.X, function () {
                        var player = BABYLON.PlayerNumber.One;
                        if (!BABYLON.WindowsPlatform.IsXboxLiveUserSignedIn(null, player)) {
                            BABYLON.Tools.Log("===> Trying Xbox Live Sign In For Player: " + player.toString());
                            BABYLON.WindowsPlatform.XboxLiveUserSignIn(player, function (result) {
                                var user = BABYLON.WindowsPlatform.GetXboxLiveUser(player);
                                var msg = "(" + user.xboxUserId + ") - " + user.gamertag;
                                BABYLON.SceneManager.AlertMessage(msg, "Xbox Live User Signed In");
                            }, function (err) {
                                console.log(err);
                                var msg = "Encountered Sign Error";
                                BABYLON.Tools.Warn(msg);
                                BABYLON.SceneManager.AlertMessage(msg, "Xbox Live Warning");
                            });
                        }
                        else {
                            BABYLON.Tools.Warn("Xbox Live User Already Signed In");
                            BABYLON.SceneManager.AlertMessage("User Already Signed In", "Xbox Live Warning");
                        }
                    });
                }
            }
            // Default Print To Screen Text
            var printColor = (this.scene.getEngine().webGLVersion < 2) ? "red" : "#0c0";
            var graphicsVersion = BABYLON.SceneManager.GetWebGLVersionString(this.scene);
            BABYLON.Utilities.PrintToScreen(graphicsVersion, printColor);
        };
        DebugInformation.prototype.destroy = function () {
            //this.screen = null;
            //this.toggle = null;
            //this.signin = null;
            //this.reload = null;
            //this.mouse = null;
            //this.debug = null;
        };
        return DebugInformation;
    }(BABYLON.ScriptComponent));
    PROJECT.DebugInformation = DebugInformation;
})(PROJECT || (PROJECT = {}));
var PROJECT;
(function (PROJECT) {
    /**
     * Babylon Script Component
     * @class SoftbodyMesh
     */
    var SoftbodyMesh = /** @class */ (function (_super) {
        __extends(SoftbodyMesh, _super);
        function SoftbodyMesh(transform, scene, properties) {
            if (properties === void 0) { properties = {}; }
            var _this = _super.call(this, transform, scene, properties) || this;
            var type = _this.getEditorProperty("type", 0);
            var options = {
                mass: _this.getEditorProperty("mass", 1),
                friction: _this.getEditorProperty("friction", 0.3),
                restitution: _this.getEditorProperty("restitution", 0.3),
                pressure: _this.getEditorProperty("pressure", 200),
                velocityIterations: _this.getEditorProperty("velocityIterations", 20),
                positionIterations: _this.getEditorProperty("positionIterations", 20),
                stiffness: _this.getEditorProperty("stiffness", 1),
                margin: _this.getEditorProperty("margin", 0.0),
                damping: _this.getEditorProperty("damping", 0.01)
            };
            var mesh = _this.getTransformMesh();
            var forceSharedVertices = _this.getEditorProperty("forceSharedVertices", true);
            if (forceSharedVertices === true)
                mesh.forceSharedVertices();
            var increaseVertices = _this.getEditorProperty("increaseVertices", 4);
            if (increaseVertices > 0)
                mesh.increaseVertices(increaseVertices);
            var impostor = null;
            if (type === 0) { // Mesh
                impostor = new BABYLON.PhysicsImpostor(mesh, BABYLON.PhysicsImpostor.SoftbodyImpostor, options, _this.scene);
            }
            else if (type === 1) { // Cloth
                impostor = new BABYLON.PhysicsImpostor(mesh, BABYLON.PhysicsImpostor.ClothImpostor, options, _this.scene);
            }
            else if (type === 2) { // Rope
                impostor = new BABYLON.PhysicsImpostor(mesh, BABYLON.PhysicsImpostor.RopeImpostor, options, _this.scene);
            }
            if (impostor != null) {
                impostor.executeNativeFunction(function (word, body) {
                    // TODO: Setup Native Softbody Physics Options
                });
            }
            return _this;
        }
        SoftbodyMesh.prototype.start = function () {
            // Start render loop function
        };
        SoftbodyMesh.prototype.update = function () {
            // Update render loop function
        };
        SoftbodyMesh.prototype.after = function () {
            // After render loop function
        };
        SoftbodyMesh.prototype.destroy = function () {
            // Destroy component function
        };
        return SoftbodyMesh;
    }(BABYLON.ScriptComponent));
    PROJECT.SoftbodyMesh = SoftbodyMesh;
})(PROJECT || (PROJECT = {}));
var PROJECT;
(function (PROJECT) {
    /**
     * Babylon Script Component
     * @class FirstPersonController
     */
    var FirstPersonController = /** @class */ (function (_super) {
        __extends(FirstPersonController, _super);
        function FirstPersonController(transform, scene, properties) {
            if (properties === void 0) { properties = {}; }
            var _this = _super.call(this, transform, scene, properties) || this;
            _this.deltaFactor = 2.0;
            _this.attachCamera = true;
            _this.cameraPivot = null;
            _this.cameraRigger = null;
            _this.movementSpeed = 1.0;
            _this.jumpingVelocity = 10.0;
            _this.playerMovement = BABYLON.Vector3.Zero();
            _this.playerTurnRate = 0.0;
            _this.cameraPitchRate = 0.0;
            _this.horzSensitivity = 1.0;
            _this.vertSensitivity = 1.0;
            _this.mouseSensitivity = 1.0;
            _this.minimumPitchAngle = -60.0;
            _this.maximumPitchAngle = 60.0;
            _this.isCharacterGrounded = false;
            _this.isCharacterJumpFrame = false;
            _this.cameraEulerAngles = BABYLON.Vector3.Zero();
            _this.characterController = null;
            _this.buttonJump = BABYLON.Xbox360Button.A;
            _this.keyboardJump = BABYLON.UserInputKey.SpaceBar;
            _this.playerNumber = BABYLON.PlayerNumber.One;
            _this.playerDeltaX = 0.0;
            _this.playerDeltaZ = 0.0;
            _this.playerMouseX = 0.0;
            _this.playerMouseY = 0.0;
            _this.playerEyeLevel = 0.5;
            _this.attachCamera = _this.getEditorProperty("attachCamera", _this.attachCamera);
            _this.playerNumber = _this.getEditorProperty("playerNumber", _this.playerNumber);
            _this.playerEyeLevel = _this.getEditorProperty("playerEyeLevel", _this.playerEyeLevel);
            _this.movementSpeed = _this.getEditorProperty("movementSpeed", _this.movementSpeed);
            _this.mouseSensitivity = _this.getEditorProperty("mouseSensitivity", _this.mouseSensitivity);
            _this.minimumPitchAngle = _this.getEditorProperty("minimumPitchAngle", _this.minimumPitchAngle);
            _this.maximumPitchAngle = _this.getEditorProperty("maximumPitchAngle", _this.maximumPitchAngle);
            _this.vertSensitivity = _this.getEditorProperty("verticalSensitivity", _this.vertSensitivity);
            _this.horzSensitivity = _this.getEditorProperty("horizontalSensitivity", _this.horzSensitivity);
            _this.jumpingVelocity = _this.getEditorProperty("impulseJumpVelocity", _this.jumpingVelocity);
            // Scale Mouse Pointer Sensitivity
            if (_this.playerNumber == BABYLON.PlayerNumber.One) {
                BABYLON.UserInputOptions.PointerAngularSensibility = (BABYLON.UserInputOptions.PointerAngularSensibility * _this.mouseSensitivity);
            }
            return _this;
        }
        FirstPersonController.prototype.isCharacterJumping = function () { return false; /* TODO: Determine If Character Is Jumping - ??? */ };
        FirstPersonController.prototype.isCharacterFalling = function () { return false; /* TODO: Determine If Character Is Falling - ??? */ };
        FirstPersonController.prototype.getCharacterController = function () { return this.characterController; };
        FirstPersonController.prototype.start = function () { this.setupFirstPersonController(); };
        FirstPersonController.prototype.update = function () { this.updateFirstPersonController(); };
        FirstPersonController.prototype.destroy = function () { this.destroyFirstPersonController(); };
        FirstPersonController.prototype.setupFirstPersonController = function () {
            // Setup Camera Aattachments
            this.cameraPivot = this.getChildTransform("Pivot");
            if (this.cameraPivot == null) {
                this.cameraPivot = new BABYLON.TransformNode("Pivot", this.scene);
                this.cameraPivot.setParent(this.transform);
                this.cameraPivot.position = new BABYLON.Vector3(0.0, this.playerEyeLevel, 0.0); // NOTE: POSITION CAMERA EYE LEVEL (TO SEE ARMS)
            }
            BABYLON.Utilities.ValidateTransformQuaternion(this.cameraPivot);
            //console.log("Attach Camera For: " + this.transform.name + " --> " + this.attachCamera.toString());
            //console.log(this.transform.metadata);
            if (this.attachCamera === true) {
                // TODO: Create Multi Player Camera (No Attach Camera)
                this.cameraRigger = BABYLON.SceneManager.GetTransformNode(this.scene, "Main Camera");
                if (this.cameraRigger != null && this.cameraPivot != null) {
                    this.cameraPivot.position = new BABYLON.Vector3(0.0, this.playerEyeLevel, 0.0); // NOTE: POSITION CAMERA EYE LEVEL (TO SEE ARMS)
                    this.cameraRigger.setParent(this.cameraPivot);
                    this.cameraRigger.position = new BABYLON.Vector3(0.0, 0.0, 0.0);
                    this.cameraRigger.rotationQuaternion = BABYLON.Quaternion.Identity();
                    console.log("FPC: Attached main camera to player controller: " + this.transform.name);
                }
                else {
                    BABYLON.Tools.Warn("Failed to locate camera or local pivot for: " + this.transform.name);
                }
            }
            // Setup Character Controller
            this.characterController = this.getComponent("BABYLON.CharacterController");
            if (this.characterController == null)
                BABYLON.Tools.Warn("Failed to locate character controller for: " + this.transform.name);
            // Character Collision Contact (TEST)
            if (this.characterController != null) {
                // Test Static Only Collisions
                // this.characterController.setCollisionFilterMask(BABYLON.CollisionFilters.StaticFilter);
                this.characterController.registerOnCollisionEnter(function (mesh) {
                    var tag = BABYLON.SceneManager.GetTransformTag(mesh);
                    //console.log("PLAYER: ===> Got Collision Enter Event: " + mesh.name + " --> " + tag);
                });
                this.characterController.registerOnCollisionStay(function (mesh) {
                    var tag = BABYLON.SceneManager.GetTransformTag(mesh);
                    //console.log("PLAYER: ===> Got Collision Stay Event: " + mesh.name + " --> " + tag);
                });
                this.characterController.registerOnCollisionExit(function (mesh) {
                    var tag = BABYLON.SceneManager.GetTransformTag(mesh);
                    //console.warn("PLAYER ===> DESTROY: Collision Exit Event: " + mesh.name + " --> " + tag);
                });
            }
        };
        FirstPersonController.prototype.updateFirstPersonController = function () {
            var deltaTime = this.getDeltaSeconds();
            this.playerDeltaX = BABYLON.SceneManager.GetUserInput(BABYLON.UserInputAxis.Horizontal, this.playerNumber);
            this.playerDeltaZ = BABYLON.SceneManager.GetUserInput(BABYLON.UserInputAxis.Vertical, this.playerNumber);
            this.playerMouseX = BABYLON.SceneManager.GetUserInput(BABYLON.UserInputAxis.MouseX, this.playerNumber);
            this.playerMouseY = BABYLON.SceneManager.GetUserInput(BABYLON.UserInputAxis.MouseY, this.playerNumber);
            // Update Dead Input Values
            if (Math.abs(this.playerDeltaX) <= BABYLON.UserInputOptions.GamepadDeadStickValue)
                this.playerDeltaX = 0;
            if (Math.abs(this.playerDeltaZ) <= BABYLON.UserInputOptions.GamepadDeadStickValue)
                this.playerDeltaZ = 0;
            if (Math.abs(this.playerMouseX) <= BABYLON.UserInputOptions.GamepadDeadStickValue)
                this.playerMouseX = 0;
            if (Math.abs(this.playerMouseY) <= BABYLON.UserInputOptions.GamepadDeadStickValue)
                this.playerMouseY = 0;
            // Update Character Movement
            if (this.characterController != null) {
                this.isCharacterGrounded = this.characterController.isGrounded();
                this.isCharacterJumpFrame = false;
                // Rotate Player Left And Right With Mouse-X
                this.playerTurnRate = (this.playerMouseX * (this.horzSensitivity * this.deltaFactor));
                this.characterController.turn(this.playerTurnRate);
                /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                // FPC: Pitch Camera Pivot Up And Down With Mouse-Y
                /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                this.cameraPitchRate = (this.playerMouseY * (this.vertSensitivity * this.deltaFactor));
                this.cameraPivot.rotate(BABYLON.Axis.X, -(this.cameraPitchRate * BABYLON.System.Deg2Rad), BABYLON.Space.LOCAL);
                BABYLON.Utilities.ToEulerToRef(this.cameraPivot.rotationQuaternion, this.cameraEulerAngles);
                this.cameraEulerAngles.x = BABYLON.Scalar.Clamp(this.cameraEulerAngles.x, this.minimumPitchAngle, this.maximumPitchAngle);
                BABYLON.Utilities.FromEulerToRef(this.cameraEulerAngles.x, this.cameraEulerAngles.y, this.cameraEulerAngles.z, this.cameraPivot.rotationQuaternion);
                /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                // Update Player Input With Delta-X And Delta-Z
                if (this.isCharacterGrounded === true) {
                    this.playerMovement.x = this.playerDeltaX;
                    this.playerMovement.y = 0.0;
                    this.playerMovement.z = this.playerDeltaZ;
                    this.isCharacterJumpFrame = (BABYLON.SceneManager.GetKeyboardInput(this.keyboardJump) || BABYLON.SceneManager.GetGamepadButtonInput(this.buttonJump));
                    // Transform Movement Direction And Scale Speed
                    BABYLON.Utilities.TransformDirectionToRef(this.transform, this.playerMovement, this.playerMovement);
                    BABYLON.Vector3.NormalizeToRef(this.playerMovement, this.playerMovement);
                    this.playerMovement.scaleInPlace((BABYLON.System.WalkingVelocity * this.movementSpeed) * deltaTime);
                    // Move Player Using Physics Character Controller
                    this.characterController.move(this.playerMovement);
                    // Jump Player Using Physics Character Controller
                    if (this.isCharacterJumpFrame === true) {
                        this.characterController.jump(this.jumpingVelocity);
                    }
                }
            }
        };
        FirstPersonController.prototype.destroyFirstPersonController = function () {
            this.cameraPivot = null;
            this.cameraRigger = null;
            this.characterController = null;
        };
        return FirstPersonController;
    }(BABYLON.ScriptComponent));
    PROJECT.FirstPersonController = FirstPersonController;
})(PROJECT || (PROJECT = {}));
var PROJECT;
(function (PROJECT) {
    /**
     * Babylon Script Component
     * @class ThirdPersonController
     */
    var ThirdPersonController = /** @class */ (function (_super) {
        __extends(ThirdPersonController, _super);
        function ThirdPersonController(transform, scene, properties) {
            if (properties === void 0) { properties = {}; }
            var _this = _super.call(this, transform, scene, properties) || this;
            _this.deltaFactor = 2.0;
            _this.attachCamera = true;
            _this.cameraPivot = null;
            _this.cameraRigger = null;
            _this.movementSpeed = 1.0;
            _this.jumpingVelocity = 10.0;
            _this.playerMovement = BABYLON.Vector3.Zero();
            _this.playerTurnRate = 0.0;
            _this.cameraPitchRate = 0.0;
            _this.horzSensitivity = 1.0;
            _this.vertSensitivity = 1.0;
            _this.mouseSensitivity = 1.0;
            _this.minimumPitchAngle = -60.0;
            _this.maximumPitchAngle = 60.0;
            _this.isCharacterGrounded = false;
            _this.isCharacterJumpFrame = false;
            _this.characterController = null;
            _this.buttonJump = BABYLON.Xbox360Button.A;
            _this.keyboardJump = BABYLON.UserInputKey.SpaceBar;
            _this.playerNumber = BABYLON.PlayerNumber.One;
            _this.playerDeltaX = 0.0;
            _this.playerDeltaZ = 0.0;
            _this.playerMouseX = 0.0;
            _this.playerMouseY = 0.0;
            _this.attachCamera = _this.getEditorProperty("attachCamera", _this.attachCamera);
            _this.playerNumber = _this.getEditorProperty("playerNumber", _this.playerNumber);
            _this.movementSpeed = _this.getEditorProperty("movementSpeed", _this.movementSpeed);
            _this.mouseSensitivity = _this.getEditorProperty("mouseSensitivity", _this.mouseSensitivity);
            _this.minimumPitchAngle = _this.getEditorProperty("minimumPitchAngle", _this.minimumPitchAngle);
            _this.maximumPitchAngle = _this.getEditorProperty("maximumPitchAngle", _this.maximumPitchAngle);
            _this.vertSensitivity = _this.getEditorProperty("verticalSensitivity", _this.vertSensitivity);
            _this.horzSensitivity = _this.getEditorProperty("horizontalSensitivity", _this.horzSensitivity);
            _this.jumpingVelocity = _this.getEditorProperty("impulseJumpVelocity", _this.jumpingVelocity);
            // Scale Mouse Pointer Sensitivity
            if (_this.playerNumber == BABYLON.PlayerNumber.One) {
                BABYLON.UserInputOptions.PointerAngularSensibility = (BABYLON.UserInputOptions.PointerAngularSensibility * _this.mouseSensitivity);
            }
            return _this;
        }
        ThirdPersonController.prototype.getCharacterController = function () { return this.characterController; };
        ThirdPersonController.prototype.start = function () { this.setupThirdPersonController(); };
        ThirdPersonController.prototype.update = function () { this.updateThirdPersonController(); };
        ThirdPersonController.prototype.destroy = function () { this.destroyThirdPersonController(); };
        ThirdPersonController.prototype.setupThirdPersonController = function () {
            // Setup Camera Attachments
            this.cameraPivot = this.getChildTransform("Pivot");
            if (this.cameraPivot == null) {
                this.cameraPivot = new BABYLON.TransformNode("Pivot", this.scene);
                this.cameraPivot.setParent(this.transform);
                this.cameraPivot.position = new BABYLON.Vector3(0.0, 1.85, 0.0);
            }
            BABYLON.Utilities.ValidateTransformQuaternion(this.cameraPivot);
            if (this.attachCamera === true) {
                // TODO: Create Multi Player Camera (No Attach Camera)
                this.cameraRigger = BABYLON.SceneManager.GetTransformNode(this.scene, "Main Camera");
                if (this.cameraRigger != null && this.cameraPivot != null) {
                    this.cameraRigger.setParent(this.cameraPivot);
                    this.cameraRigger.position = new BABYLON.Vector3(0.0, 0.0, -4.5);
                    this.cameraRigger.rotationQuaternion = BABYLON.Quaternion.Identity();
                    console.log("TPC: Attached main camera to player controller: " + this.transform.name);
                }
                else {
                    BABYLON.Tools.Warn("Failed to locate camera or local pivot for: " + this.transform.name);
                }
            }
            // Setup Character Controller
            this.characterController = this.getComponent("BABYLON.CharacterController");
            if (this.characterController == null)
                BABYLON.Tools.Warn("Failed to locate character controller for: " + this.transform.name);
        };
        ThirdPersonController.prototype.updateThirdPersonController = function () {
            this.playerDeltaX = BABYLON.SceneManager.GetUserInput(BABYLON.UserInputAxis.Horizontal, this.playerNumber);
            this.playerDeltaZ = BABYLON.SceneManager.GetUserInput(BABYLON.UserInputAxis.Vertical, this.playerNumber);
            this.playerMouseX = BABYLON.SceneManager.GetUserInput(BABYLON.UserInputAxis.MouseX, this.playerNumber);
            this.playerMouseY = BABYLON.SceneManager.GetUserInput(BABYLON.UserInputAxis.MouseY, this.playerNumber);
            // Update Dead Input Values
            if (Math.abs(this.playerDeltaX) <= BABYLON.UserInputOptions.GamepadDeadStickValue)
                this.playerDeltaX = 0;
            if (Math.abs(this.playerDeltaZ) <= BABYLON.UserInputOptions.GamepadDeadStickValue)
                this.playerDeltaZ = 0;
            if (Math.abs(this.playerMouseX) <= BABYLON.UserInputOptions.GamepadDeadStickValue)
                this.playerMouseX = 0;
            if (Math.abs(this.playerMouseY) <= BABYLON.UserInputOptions.GamepadDeadStickValue)
                this.playerMouseY = 0;
            // Update Character Movement
            if (this.characterController != null) {
            }
        };
        ThirdPersonController.prototype.destroyThirdPersonController = function () {
            this.cameraPivot = null;
            this.cameraRigger = null;
            this.characterController = null;
        };
        return ThirdPersonController;
    }(BABYLON.ScriptComponent));
    PROJECT.ThirdPersonController = ThirdPersonController;
})(PROJECT || (PROJECT = {}));
var PROJECT;
(function (PROJECT) {
    /**
     * Babylon Script Component
     * @class BoundingBoxSkins
     */
    var BoundingBoxSkins = /** @class */ (function (_super) {
        __extends(BoundingBoxSkins, _super);
        function BoundingBoxSkins(transform, scene, properties) {
            if (properties === void 0) { properties = {}; }
            var _this = _super.call(this, transform, scene, properties) || this;
            _this.skins = null;
            _this.syncBoundingInfo = true;
            _this.updateEveryFrame = false;
            _this.positionThreashold = 0.1;
            _this.lastPosition = BABYLON.Vector3.Zero();
            // ..
            // Validate Skin Bounding Box Info
            // ..
            _this.syncBoundingInfo = _this.getEditorProperty("syncBoundingInfo", _this.syncBoundingInfo);
            _this.updateEveryFrame = _this.getEditorProperty("updateEveryFrame", _this.updateEveryFrame);
            _this.positionThreashold = _this.getEditorProperty("positionThreashold", _this.positionThreashold);
            if (_this.syncBoundingInfo === true) {
                var skinned_1 = false;
                var metadata = _this.getMetadata();
                if (metadata != null && metadata.skin === true) {
                    skinned_1 = true;
                }
                _this.skins = _this.transform.getChildMeshes(false, function (node) {
                    var data = BABYLON.SceneManager.FindSceneMetadata(node);
                    return ((data != null && data.skin === true) || (skinned_1 === true && node.name.indexOf("_primitive") >= 0)); // TODO: Remove Primitives
                });
                if (skinned_1 === true && _this.transform instanceof BABYLON.AbstractMesh) {
                    if (_this.skins == null)
                        _this.skins = [];
                    _this.skins.unshift(_this.transform);
                }
            }
            return _this;
        }
        BoundingBoxSkins.prototype.start = function () {
            this.checkSkins();
        };
        BoundingBoxSkins.prototype.update = function () {
            if (this.updateEveryFrame === true) {
                this.checkSkins();
            }
        };
        BoundingBoxSkins.prototype.after = function () {
        };
        BoundingBoxSkins.prototype.destroy = function () {
            this.skins = null;
        };
        BoundingBoxSkins.prototype.checkSkins = function () {
            // Start render loop function
            if (this.skins != null && this.skins.length > 0) {
                if (this.transform.position.x !== this.lastPosition.x || this.transform.position.y !== this.lastPosition.y || this.transform.position.z !== this.lastPosition.z) {
                    if (Math.abs(this.transform.position.x - this.lastPosition.x) >= this.positionThreashold || Math.abs(this.transform.position.y - this.lastPosition.y) >= this.positionThreashold || Math.abs(this.transform.position.z - this.lastPosition.z) >= this.positionThreashold) {
                        this.skins.forEach(function (skin) { skin.refreshBoundingInfo(true); });
                        //console.log("===> Position Change Update: " + this.transform.name);
                        //console.log(this.transform.position.toString());
                        this.lastPosition.x = this.transform.position.x;
                        this.lastPosition.y = this.transform.position.y;
                        this.lastPosition.z = this.transform.position.z;
                    }
                }
            }
        };
        return BoundingBoxSkins;
    }(BABYLON.ScriptComponent));
})(PROJECT || (PROJECT = {}));
var PROJECT;
(function (PROJECT) {
    /**
     * Babylon skidmark section class (Native Bullet Physics 2.82)
     * @class SkidmarkSection
     */
    var SkidmarkSection = /** @class */ (function () {
        function SkidmarkSection() {
            this.Pos = BABYLON.Vector3.Zero();
            this.Normal = BABYLON.Vector3.Zero();
            this.Tangent = BABYLON.Vector4.Zero();
            this.Posl = BABYLON.Vector3.Zero();
            this.Posr = BABYLON.Vector3.Zero();
            this.Intensity = 0.0;
            this.LastIndex = -1;
        }
        return SkidmarkSection;
    }());
    PROJECT.SkidmarkSection = SkidmarkSection;
    /**
     * Babylon Script Component
     * @class SkidmarkManager
     */
    var SkidmarkManager = /** @class */ (function (_super) {
        __extends(SkidmarkManager, _super);
        function SkidmarkManager(transform, scene, properties) {
            if (properties === void 0) { properties = {}; }
            var _this = _super.call(this, transform, scene, properties) || this;
            SkidmarkManager.MAX_MARKS = _this.getEditorProperty("maxSections", SkidmarkManager.MAX_MARKS);
            SkidmarkManager.MARK_COLOR = BABYLON.Utilities.ParseColor3(_this.getEditorProperty("textureColor", SkidmarkManager.MARK_COLOR));
            SkidmarkManager.MARK_WIDTH = _this.getEditorProperty("textureWidth", SkidmarkManager.MARK_WIDTH);
            SkidmarkManager.GROUND_OFFSET = _this.getEditorProperty("groundOffset", SkidmarkManager.GROUND_OFFSET);
            SkidmarkManager.VELOCITY_SCALE = _this.getEditorProperty("velocityScale", SkidmarkManager.VELOCITY_SCALE);
            SkidmarkManager.GPU_TRIANGLES = _this.getEditorProperty("gpuQuadIndices", SkidmarkManager.GPU_TRIANGLES);
            SkidmarkManager.TEXTURE_MARKS = _this.getEditorProperty("textureMarks", SkidmarkManager.TEXTURE_MARKS);
            SkidmarkManager.TEX_INTENSITY = _this.getEditorProperty("textureIntensity", SkidmarkManager.TEX_INTENSITY);
            SkidmarkManager.MIN_DISTANCE = _this.getEditorProperty("textureDistance", SkidmarkManager.MIN_DISTANCE);
            SkidmarkManager.MIN_SQR_DISTANCE = (SkidmarkManager.MIN_DISTANCE * SkidmarkManager.MIN_DISTANCE);
            SkidmarkManager.SkidThreashold = _this.getEditorProperty("skidThreashold", SkidmarkManager.SkidThreashold);
            return _this;
        }
        SkidmarkManager.prototype.start = function () { SkidmarkManager.CreateSkidmarkManager(this.scene); };
        SkidmarkManager.prototype.update = function () { SkidmarkManager.UpdateSkidmarkManager(); };
        SkidmarkManager.GetVelocityScale = function () { return SkidmarkManager.VELOCITY_SCALE; };
        SkidmarkManager.AddSkidmarkSegment = function (pos, normal, intensity, lastIndex) {
            if (SkidmarkManager.SkidmarkMesh == null)
                return null;
            SkidmarkManager.TempVector3_POS.set(0, 0, 0);
            SkidmarkManager.TempVector3_DIR.set(0, 0, 0);
            SkidmarkManager.TempVector3_XDIR.set(0, 0, 0);
            SkidmarkManager.TempVector3_SDIR.set(0, 0, 0);
            // ..
            if (intensity > 1.0)
                intensity = 1.0;
            else if (intensity < 0.0)
                return -1.0;
            // ..
            if (lastIndex > 0) {
                pos.subtractToRef(SkidmarkManager.SkidmarkSections[lastIndex].Pos, SkidmarkManager.TempVector3_POS);
                var sqrDistance = SkidmarkManager.TempVector3_POS.lengthSquared();
                if (sqrDistance < SkidmarkManager.MIN_SQR_DISTANCE)
                    return lastIndex;
            }
            // ..
            var curSection = SkidmarkManager.SkidmarkSections[SkidmarkManager.SkidmarkIndex];
            normal.scaleToRef(SkidmarkManager.GROUND_OFFSET, SkidmarkManager.TempVector3_POS);
            pos.addToRef(SkidmarkManager.TempVector3_POS, curSection.Pos);
            curSection.Normal.copyFrom(normal);
            curSection.Intensity = (intensity * SkidmarkManager.TEX_INTENSITY);
            curSection.LastIndex = lastIndex;
            // ..
            if (lastIndex != -1) {
                var lastSection = SkidmarkManager.SkidmarkSections[lastIndex];
                curSection.Pos.subtractToRef(lastSection.Pos, SkidmarkManager.TempVector3_DIR);
                BABYLON.Vector3.CrossToRef(SkidmarkManager.TempVector3_DIR, normal, SkidmarkManager.TempVector3_XDIR);
                SkidmarkManager.TempVector3_XDIR.normalizeToRef(SkidmarkManager.TempVector3_XDIR);
                // ..
                SkidmarkManager.TempVector3_XDIR.scaleToRef(SkidmarkManager.MARK_WIDTH * 0.5, SkidmarkManager.TempVector3_SDIR);
                curSection.Pos.addToRef(SkidmarkManager.TempVector3_SDIR, curSection.Posl);
                curSection.Pos.subtractToRef(SkidmarkManager.TempVector3_SDIR, curSection.Posr);
                curSection.Tangent.set(SkidmarkManager.TempVector3_XDIR.x, SkidmarkManager.TempVector3_XDIR.y, SkidmarkManager.TempVector3_XDIR.z, 1);
                // ..
                if (lastSection.LastIndex === -1) {
                    curSection.Pos.addToRef(SkidmarkManager.TempVector3_SDIR, lastSection.Posl);
                    curSection.Pos.subtractToRef(SkidmarkManager.TempVector3_SDIR, lastSection.Posr);
                    lastSection.Tangent.copyFrom(curSection.Tangent);
                }
            }
            // ..
            SkidmarkManager.AddSkidmarkVertexData();
            var curIndex = SkidmarkManager.SkidmarkIndex;
            SkidmarkManager.SkidmarkIndex = ++SkidmarkManager.SkidmarkIndex % SkidmarkManager.MAX_MARKS;
            return curIndex;
        };
        SkidmarkManager.CreateSkidmarkManager = function (scene) {
            if (SkidmarkManager.SkidmarkMesh == null) {
                var skidmarkMaterial = new BABYLON.StandardMaterial("SkidmarkMaterial", scene);
                skidmarkMaterial.backFaceCulling = false;
                skidmarkMaterial.disableLighting = true;
                skidmarkMaterial.emissiveColor = SkidmarkManager.MARK_COLOR;
                skidmarkMaterial.diffuseColor = SkidmarkManager.MARK_COLOR;
                skidmarkMaterial.diffuseTexture = BABYLON.Utilities.ParseTexture(SkidmarkManager.TEXTURE_MARKS, scene);
                if (skidmarkMaterial.diffuseTexture != null) {
                    skidmarkMaterial.diffuseTexture.hasAlpha = true;
                    skidmarkMaterial.useAlphaFromDiffuseTexture = true;
                }
                skidmarkMaterial.freeze();
                SkidmarkManager.SkidmarkMesh = new BABYLON.Mesh("SkidmarkMesh", scene);
                SkidmarkManager.SkidmarkMesh.material = skidmarkMaterial;
                SkidmarkManager.SkidmarkMesh.alwaysSelectAsActiveMesh = true;
                SkidmarkManager.SkidmarkMesh.doNotSyncBoundingInfo = true;
                SkidmarkManager.SkidmarkMesh.receiveShadows = false;
                SkidmarkManager.SkidmarkMesh.checkCollisions = false;
                SkidmarkManager.SkidmarkMesh.useVertexColors = true;
                SkidmarkManager.SkidmarkMesh.hasVertexAlpha = true;
                SkidmarkManager.SkidmarkMesh.isPickable = false;
                // ..
                // Setup Skidmark Section Properties
                // ..
                SkidmarkManager.SkidmarkSections = new Array(SkidmarkManager.MAX_MARKS);
                for (var i = 0; i < SkidmarkManager.SkidmarkSections.length; i++) {
                    SkidmarkManager.SkidmarkSections[i] = new SkidmarkSection();
                }
                // ..
                // Setup Raw Mesh Vertex Buffer Data
                // ..
                SkidmarkManager.SkidBufferPositions = new Float32Array(SkidmarkManager.MAX_MARKS * 4 * 3);
                SkidmarkManager.SkidBufferNormals = new Float32Array(SkidmarkManager.MAX_MARKS * 4 * 3);
                SkidmarkManager.SkidBufferTangents = new Float32Array(SkidmarkManager.MAX_MARKS * 4 * 4);
                SkidmarkManager.SkidBufferColors = new Float32Array(SkidmarkManager.MAX_MARKS * 4 * 4);
                SkidmarkManager.SkidBufferUvs = new Float32Array(SkidmarkManager.MAX_MARKS * 4 * 2);
                SkidmarkManager.SkidBufferIndices = new Int32Array(SkidmarkManager.MAX_MARKS * 6);
                // ..
                // Apply Raw Vertex Buffer Data To Mesh
                // ..
                var vertexData = new BABYLON.VertexData();
                vertexData.positions = SkidmarkManager.SkidBufferPositions;
                vertexData.normals = SkidmarkManager.SkidBufferNormals;
                vertexData.tangents = SkidmarkManager.SkidBufferTangents;
                vertexData.colors = SkidmarkManager.SkidBufferColors;
                vertexData.uvs = SkidmarkManager.SkidBufferUvs;
                vertexData.indices = SkidmarkManager.SkidBufferIndices;
                vertexData.applyToMesh(SkidmarkManager.SkidmarkMesh, true);
                SkidmarkManager.SkidmarkMesh.freezeWorldMatrix();
            }
        };
        SkidmarkManager.AddSkidmarkVertexData = function () {
            var curr = SkidmarkManager.SkidmarkSections[SkidmarkManager.SkidmarkIndex];
            if (curr.LastIndex === -1)
                return;
            var last = SkidmarkManager.SkidmarkSections[curr.LastIndex];
            SkidmarkManager.SkidmarkUpdated = true;
            // ..
            // Update Position Buffers Directly
            // ..
            var index = SkidmarkManager.SkidmarkIndex * 4 + 0;
            SkidmarkManager.SkidBufferPositions[index * 3] = last.Posl.x;
            SkidmarkManager.SkidBufferPositions[(index * 3) + 1] = last.Posl.y;
            SkidmarkManager.SkidBufferPositions[(index * 3) + 2] = last.Posl.z;
            index = SkidmarkManager.SkidmarkIndex * 4 + 1;
            SkidmarkManager.SkidBufferPositions[index * 3] = last.Posr.x;
            SkidmarkManager.SkidBufferPositions[(index * 3) + 1] = last.Posr.y;
            SkidmarkManager.SkidBufferPositions[(index * 3) + 2] = last.Posr.z;
            index = SkidmarkManager.SkidmarkIndex * 4 + 2;
            SkidmarkManager.SkidBufferPositions[index * 3] = curr.Posl.x;
            SkidmarkManager.SkidBufferPositions[(index * 3) + 1] = curr.Posl.y;
            SkidmarkManager.SkidBufferPositions[(index * 3) + 2] = curr.Posl.z;
            index = SkidmarkManager.SkidmarkIndex * 4 + 3;
            SkidmarkManager.SkidBufferPositions[index * 3] = curr.Posr.x;
            SkidmarkManager.SkidBufferPositions[(index * 3) + 1] = curr.Posr.y;
            SkidmarkManager.SkidBufferPositions[(index * 3) + 2] = curr.Posr.z;
            // ..
            // Update Normal Buffers Directly
            // ..
            index = SkidmarkManager.SkidmarkIndex * 4 + 0;
            SkidmarkManager.SkidBufferNormals[index * 3] = last.Normal.x;
            SkidmarkManager.SkidBufferNormals[(index * 3) + 1] = last.Normal.y;
            SkidmarkManager.SkidBufferNormals[(index * 3) + 2] = last.Normal.z;
            index = SkidmarkManager.SkidmarkIndex * 4 + 1;
            SkidmarkManager.SkidBufferNormals[index * 3] = last.Normal.x;
            SkidmarkManager.SkidBufferNormals[(index * 3) + 1] = last.Normal.y;
            SkidmarkManager.SkidBufferNormals[(index * 3) + 2] = last.Normal.z;
            index = SkidmarkManager.SkidmarkIndex * 4 + 2;
            SkidmarkManager.SkidBufferNormals[index * 3] = curr.Normal.x;
            SkidmarkManager.SkidBufferNormals[(index * 3) + 1] = curr.Normal.y;
            SkidmarkManager.SkidBufferNormals[(index * 3) + 2] = curr.Normal.z;
            index = SkidmarkManager.SkidmarkIndex * 4 + 3;
            SkidmarkManager.SkidBufferNormals[index * 3] = curr.Normal.x;
            SkidmarkManager.SkidBufferNormals[(index * 3) + 1] = curr.Normal.y;
            SkidmarkManager.SkidBufferNormals[(index * 3) + 2] = curr.Normal.z;
            // ..
            // Update Tangent Buffers Directly
            // ..
            index = SkidmarkManager.SkidmarkIndex * 4 + 0;
            SkidmarkManager.SkidBufferTangents[index * 4] = last.Tangent.x;
            SkidmarkManager.SkidBufferTangents[(index * 4) + 1] = last.Tangent.y;
            SkidmarkManager.SkidBufferTangents[(index * 4) + 2] = last.Tangent.z;
            SkidmarkManager.SkidBufferTangents[(index * 4) + 3] = last.Tangent.w;
            index = SkidmarkManager.SkidmarkIndex * 4 + 1;
            SkidmarkManager.SkidBufferTangents[index * 4] = last.Tangent.x;
            SkidmarkManager.SkidBufferTangents[(index * 4) + 1] = last.Tangent.y;
            SkidmarkManager.SkidBufferTangents[(index * 4) + 2] = last.Tangent.z;
            SkidmarkManager.SkidBufferTangents[(index * 4) + 3] = last.Tangent.w;
            index = SkidmarkManager.SkidmarkIndex * 4 + 2;
            SkidmarkManager.SkidBufferTangents[index * 4] = curr.Tangent.x;
            SkidmarkManager.SkidBufferTangents[(index * 4) + 1] = curr.Tangent.y;
            SkidmarkManager.SkidBufferTangents[(index * 4) + 2] = curr.Tangent.z;
            SkidmarkManager.SkidBufferTangents[(index * 4) + 3] = curr.Tangent.w;
            index = SkidmarkManager.SkidmarkIndex * 4 + 3;
            SkidmarkManager.SkidBufferTangents[index * 4] = curr.Tangent.x;
            SkidmarkManager.SkidBufferTangents[(index * 4) + 1] = curr.Tangent.y;
            SkidmarkManager.SkidBufferTangents[(index * 4) + 2] = curr.Tangent.z;
            SkidmarkManager.SkidBufferTangents[(index * 4) + 3] = curr.Tangent.w;
            // ..
            // Update Color Buffers Directly
            // ..
            index = SkidmarkManager.SkidmarkIndex * 4 + 0;
            SkidmarkManager.SkidBufferColors[index * 4] = 1.0;
            SkidmarkManager.SkidBufferColors[(index * 4) + 1] = 1.0;
            SkidmarkManager.SkidBufferColors[(index * 4) + 2] = 1.0;
            SkidmarkManager.SkidBufferColors[(index * 4) + 3] = last.Intensity;
            index = SkidmarkManager.SkidmarkIndex * 4 + 1;
            SkidmarkManager.SkidBufferColors[index * 4] = 1.0;
            SkidmarkManager.SkidBufferColors[(index * 4) + 1] = 1.0;
            SkidmarkManager.SkidBufferColors[(index * 4) + 2] = 1.0;
            SkidmarkManager.SkidBufferColors[(index * 4) + 3] = last.Intensity;
            index = SkidmarkManager.SkidmarkIndex * 4 + 2;
            SkidmarkManager.SkidBufferColors[index * 4] = 1.0;
            SkidmarkManager.SkidBufferColors[(index * 4) + 1] = 1.0;
            SkidmarkManager.SkidBufferColors[(index * 4) + 2] = 1.0;
            SkidmarkManager.SkidBufferColors[(index * 4) + 3] = curr.Intensity;
            index = SkidmarkManager.SkidmarkIndex * 4 + 3;
            SkidmarkManager.SkidBufferColors[index * 4] = 1.0;
            SkidmarkManager.SkidBufferColors[(index * 4) + 1] = 1.0;
            SkidmarkManager.SkidBufferColors[(index * 4) + 2] = 1.0;
            SkidmarkManager.SkidBufferColors[(index * 4) + 3] = curr.Intensity;
            // ..
            // Update Coord Buffers Directly
            // ..
            index = SkidmarkManager.SkidmarkIndex * 4 + 0;
            SkidmarkManager.SkidBufferUvs[index * 2] = 0;
            SkidmarkManager.SkidBufferUvs[(index * 2) + 1] = 0;
            index = SkidmarkManager.SkidmarkIndex * 4 + 1;
            SkidmarkManager.SkidBufferUvs[index * 2] = 1;
            SkidmarkManager.SkidBufferUvs[(index * 2) + 1] = 0;
            index = SkidmarkManager.SkidmarkIndex * 4 + 2;
            SkidmarkManager.SkidBufferUvs[index * 2] = 0;
            SkidmarkManager.SkidBufferUvs[(index * 2) + 1] = 1;
            index = SkidmarkManager.SkidmarkIndex * 4 + 3;
            SkidmarkManager.SkidBufferUvs[index * 2] = 1;
            SkidmarkManager.SkidBufferUvs[(index * 2) + 1] = 1;
            // ..
            // Update Triangle 1 Buffers Directly (QUAD)
            //..
            SkidmarkManager.SkidBufferIndices[SkidmarkManager.SkidmarkIndex * 6 + 0] = SkidmarkManager.SkidmarkIndex * 4 + 0;
            SkidmarkManager.SkidBufferIndices[SkidmarkManager.SkidmarkIndex * 6 + 2] = SkidmarkManager.SkidmarkIndex * 4 + 1;
            SkidmarkManager.SkidBufferIndices[SkidmarkManager.SkidmarkIndex * 6 + 1] = SkidmarkManager.SkidmarkIndex * 4 + 2;
            // ..
            // Update Triangle 2 Buffers Directly (QUAD)
            // ..
            SkidmarkManager.SkidBufferIndices[SkidmarkManager.SkidmarkIndex * 6 + 3] = SkidmarkManager.SkidmarkIndex * 4 + 2;
            SkidmarkManager.SkidBufferIndices[SkidmarkManager.SkidmarkIndex * 6 + 5] = SkidmarkManager.SkidmarkIndex * 4 + 1;
            SkidmarkManager.SkidBufferIndices[SkidmarkManager.SkidmarkIndex * 6 + 4] = SkidmarkManager.SkidmarkIndex * 4 + 3;
        };
        SkidmarkManager.UpdateSkidmarkManager = function () {
            if (SkidmarkManager.SkidmarkMesh != null && SkidmarkManager.SkidmarkUpdated === true) {
                SkidmarkManager.SkidmarkUpdated = false;
                if (SkidmarkManager.SkidmarkMesh.geometry != null) {
                    SkidmarkManager.SkidmarkMesh.geometry.updateVerticesDataDirectly(BABYLON.VertexBuffer.PositionKind, SkidmarkManager.SkidBufferPositions, 0, false);
                    SkidmarkManager.SkidmarkMesh.geometry.updateVerticesDataDirectly(BABYLON.VertexBuffer.NormalKind, SkidmarkManager.SkidBufferNormals, 0, false);
                    SkidmarkManager.SkidmarkMesh.geometry.updateVerticesDataDirectly(BABYLON.VertexBuffer.TangentKind, SkidmarkManager.SkidBufferTangents, 0, false);
                    SkidmarkManager.SkidmarkMesh.geometry.updateVerticesDataDirectly(BABYLON.VertexBuffer.ColorKind, SkidmarkManager.SkidBufferColors, 0, false);
                    SkidmarkManager.SkidmarkMesh.geometry.updateVerticesDataDirectly(BABYLON.VertexBuffer.UVKind, SkidmarkManager.SkidBufferUvs, 0, false);
                    SkidmarkManager.SkidmarkMesh.geometry.updateIndices(SkidmarkManager.SkidBufferIndices, 0, SkidmarkManager.GPU_TRIANGLES);
                }
            }
        };
        SkidmarkManager.MAX_MARKS = 4096; // Max number of marks total for everyone together
        SkidmarkManager.GROUND_OFFSET = 0.01; // Distance above surface in metres
        SkidmarkManager.VELOCITY_SCALE = 0.02; // Velocity offset scale factor
        SkidmarkManager.GPU_TRIANGLES = true; // GPU quad triangle indices only
        SkidmarkManager.MARK_COLOR = BABYLON.Color3.Black(); // Skidmark Color
        SkidmarkManager.MARK_WIDTH = 0.3; // Width of the Skidmarks. Should match the width of the wheels
        SkidmarkManager.TEX_INTENSITY = 1.0; // Amount of the skidmark texture intensity coeffecient
        SkidmarkManager.MIN_DISTANCE = 0.1; // Distance between skid texture sections in metres. Bigger = better performance, less smooth
        SkidmarkManager.MIN_SQR_DISTANCE = (SkidmarkManager.MIN_DISTANCE * SkidmarkManager.MIN_DISTANCE);
        SkidmarkManager.TEXTURE_MARKS = null;
        SkidmarkManager.SkidBufferPositions = null;
        SkidmarkManager.SkidBufferNormals = null;
        SkidmarkManager.SkidBufferTangents = null;
        SkidmarkManager.SkidBufferColors = null;
        SkidmarkManager.SkidBufferUvs = null;
        SkidmarkManager.SkidBufferIndices = null;
        SkidmarkManager.SkidmarkSections = null;
        SkidmarkManager.SkidmarkIndex = 0;
        SkidmarkManager.SkidmarkMesh = null;
        SkidmarkManager.SkidmarkUpdated = false;
        SkidmarkManager.TempVector3_POS = new BABYLON.Vector3(0, 0, 0);
        SkidmarkManager.TempVector3_DIR = new BABYLON.Vector3(0, 0, 0);
        SkidmarkManager.TempVector3_XDIR = new BABYLON.Vector3(0, 0, 0);
        SkidmarkManager.TempVector3_SDIR = new BABYLON.Vector3(0, 0, 0);
        SkidmarkManager.SkidThreashold = 0.5;
        return SkidmarkManager;
    }(BABYLON.ScriptComponent));
    PROJECT.SkidmarkManager = SkidmarkManager;
})(PROJECT || (PROJECT = {}));
var PROJECT;
(function (PROJECT) {
    /**
     * Babylon standard rigidbody vehicle controller class (Native Bullet Physics 2.82)
     * @class StandardCarController
     */
    var StandardCarController = /** @class */ (function (_super) {
        __extends(StandardCarController, _super);
        function StandardCarController(transform, scene, properties) {
            if (properties === void 0) { properties = {}; }
            var _this = _super.call(this, transform, scene, properties) || this;
            _this._rigidbody = null;
            _this._engineAudioSource = null;
            _this._skidAudioSource = null;
            _this.gearIndex = 0; // First Gear Ratio
            _this.shiftingGears = false;
            _this.engineForce = 0;
            _this.forwardSpeed = 0;
            _this.absoluteSpeed = 0;
            _this.americanSpeed = 0;
            _this.normalizedSpeed = 0;
            _this.frontWheelPower = 0;
            _this.backWheelPower = 0;
            _this.wheelBrakingForce = 0;
            _this.visualSteerAngle = 0;
            _this.physicsSteerAngle = 0;
            _this.raycastVehicle = null;
            _this.frontLeftWheelMesh = null;
            _this.frontRightWheelMesh = null;
            _this.backLeftWheelMesh = null;
            _this.backRightWheelMesh = null;
            _this.frontLeftWheelTrans = null;
            _this.frontRightWheelTrans = null;
            _this.backLeftWheelTrans = null;
            _this.backRightWheelTrans = null;
            _this.frontLeftWheelCollider = null;
            _this.frontRightWheelCollider = null;
            _this.backLeftWheelCollider = null;
            _this.backRightWheelCollider = null;
            _this.engineTorqueCurve = null;
            _this.wheelRadius = 0;
            _this.shiftDelay = 0;
            _this.engineRPM = 0;
            //private clutchSlip:number = 0;
            //private lerpedRPM:number = 0;
            //private oldRPM:number = 0;
            _this.FRONT_LEFT = -1;
            _this.FRONT_RIGHT = -1;
            _this.BACK_LEFT = -1;
            _this.BACK_RIGHT = -1;
            _this.onUpdateVehicleInformation = null;
            _this.smokeTexture = null;
            _this.shadowTexture = null;
            _this.maxTurnAngle = 0.3;
            _this.maxBurnAngle = 0.5;
            _this.addSteerBoost = 10;
            _this.setEngineTorque = null;
            _this.topEngineSpeed = 120;
            _this.baseEnginePower = 1000;
            _this.lowSpeedAngle = 0.165;
            _this.highSpeedAngle = 0.015;
            _this.lowSpeedTurning = 0.015;
            _this.highSpeedTurning = 0.005;
            _this.stableDownForce = 1.0;
            _this.transmissionRatio = 0.7;
            _this.differentialRatio = 3.55;
            _this.maxReversePower = 0.66;
            _this.lerpEnginePitching = 5000;
            _this.maxBrakingForce = 100;
            _this.handBrakingForce = 2500;
            _this.linearBrakingForce = 0.35;
            _this.angularBrakingForce = 0.0;
            _this.wheelLockFriction = 1.0;
            _this.wheelBurnFriction = 1.0;
            _this.defaultLerpSpeed = 0.65;
            _this.driftingLerpSpeed = 0.25;
            _this.burnoutLerpSpeed = 0.1;
            _this.burnoutTimeDelay = 1.5;
            _this.burnoutDonutBoost = 0.0;
            _this.burnoutCoefficient = 0.0;
            _this.burnoutTriggerMark = 10;
            _this.wheelDriveType = 0;
            _this.gearBoxShiftDelay = 0.3;
            _this.gearBoxShiftNext = 3500;
            _this.gearBoxShiftDown = 2500;
            _this.gearBoxShiftRatios = [3.437, 0.00, 3.626, 2.2, 1.541, 1.213, 1.0, 0.767];
            _this.gearBoxShiftScales = [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0];
            _this.m_frontLeftWheel = null;
            _this.m_frontRightWheel = null;
            _this.m_backLeftWheel = null;
            _this.m_backRightWheel = null;
            _this.m_physicsWorld = null;
            _this.m_frontLeftWheelSkid = -1;
            _this.m_frontRightWheelSkid = -1;
            _this.m_backLeftWheelSkid = -1;
            _this.m_backRightWheelSkid = -1;
            _this.m_velocityOffset = new BABYLON.Vector3(0, 0, 0);
            ////////////////////////////////////////////////////
            // Public Vehicle Controller Movement Functions   //
            ////////////////////////////////////////////////////
            _this.burnoutTimer = 0;
            _this.restoreTimer = 0;
            _this.cooldownTimer = 0;
            _this.wheelDonuts = false;
            _this.wheelBurnout = false;
            _this.wheelSkidding = false;
            _this.allowedTurningAngle = 0;
            _this.allowedTurningIncement = 0;
            _this.engineForce = 0;
            _this.frontWheelPower = 0;
            _this.backWheelPower = 0;
            _this.wheelBrakingForce = 0;
            _this.visualSteerAngle = 0;
            _this.physicsSteerAngle = 0;
            _this.m_physicsWorld = BABYLON.SceneManager.GetPhysicsWorld(_this.scene);
            _this.smokeTexture = _this.getEditorProperty("smokeTexture", _this.smokeTexture);
            _this.shadowTexture = _this.getEditorProperty("shadowTexture", _this.shadowTexture);
            _this.setEngineTorque = _this.getEditorProperty("setEngineTorque", _this.setEngineTorque);
            _this.topEngineSpeed = _this.getEditorProperty("topEngineSpeed", _this.topEngineSpeed);
            _this.baseEnginePower = _this.getEditorProperty("baseEnginePower", _this.baseEnginePower);
            _this.maxReversePower = _this.getEditorProperty("maxReversePower", _this.maxReversePower);
            _this.stableDownForce = _this.getEditorProperty("stableDownForce", _this.stableDownForce);
            _this.maxTurnAngle = _this.getEditorProperty("maxTurnAngle", _this.maxTurnAngle);
            _this.maxBurnAngle = _this.getEditorProperty("maxBurnAngle", _this.maxBurnAngle);
            _this.addSteerBoost = _this.getEditorProperty("addSteerBoost", _this.addSteerBoost);
            _this.lowSpeedAngle = _this.getEditorProperty("lowSpeedAngle", _this.lowSpeedAngle);
            _this.highSpeedAngle = _this.getEditorProperty("highSpeedAngle", _this.highSpeedAngle);
            _this.wheelDriveType = _this.getEditorProperty("wheelDriveType", _this.wheelDriveType);
            _this.maxBrakingForce = _this.getEditorProperty("maxBrakingForce", _this.maxBrakingForce);
            _this.handBrakingForce = _this.getEditorProperty("handBrakingForce", _this.handBrakingForce);
            _this.linearBrakingForce = _this.getEditorProperty("linearBrakingForce", _this.linearBrakingForce);
            _this.angularBrakingForce = _this.getEditorProperty("angularBrakingForce", _this.angularBrakingForce);
            _this.wheelBurnFriction = _this.getEditorProperty("wheelBurnFriction", _this.wheelBurnFriction);
            _this.wheelLockFriction = _this.getEditorProperty("wheelLockFriction", _this.wheelLockFriction);
            _this.lowSpeedTurning = _this.getEditorProperty("lowSpeedTurning", _this.lowSpeedTurning);
            _this.highSpeedTurning = _this.getEditorProperty("highSpeedTurning", _this.highSpeedTurning);
            _this.frontLeftWheelTrans = _this.getEditorProperty("frontLeftWheelMesh", _this.frontLeftWheelTrans);
            _this.frontRightWheelTrans = _this.getEditorProperty("frontRightWheelMesh", _this.frontRightWheelTrans);
            _this.backLeftWheelTrans = _this.getEditorProperty("rearLeftWheelMesh", _this.backLeftWheelTrans);
            _this.backRightWheelTrans = _this.getEditorProperty("rearRightWheelMesh", _this.backRightWheelTrans);
            _this.frontLeftWheelCollider = _this.getEditorProperty("frontLeftWheelCollider", _this.frontLeftWheelCollider);
            _this.frontRightWheelCollider = _this.getEditorProperty("frontRightWheelCollider", _this.frontRightWheelCollider);
            _this.backLeftWheelCollider = _this.getEditorProperty("rearLeftWheelCollider", _this.backLeftWheelCollider);
            _this.backRightWheelCollider = _this.getEditorProperty("rearRightWheelCollider", _this.backRightWheelCollider);
            _this.defaultLerpSpeed = _this.getEditorProperty("defaultLerpSpeed", _this.defaultLerpSpeed);
            _this.driftingLerpSpeed = _this.getEditorProperty("driftingLerpSpeed", _this.driftingLerpSpeed);
            _this.burnoutLerpSpeed = _this.getEditorProperty("burnoutLerpSpeed", _this.burnoutLerpSpeed);
            _this.burnoutTimeDelay = _this.getEditorProperty("burnoutTimeDelay", _this.burnoutTimeDelay);
            _this.burnoutDonutBoost = _this.getEditorProperty("burnoutDonutBoost", _this.burnoutDonutBoost);
            _this.burnoutCoefficient = _this.getEditorProperty("burnoutCoefficient", _this.burnoutCoefficient);
            _this.burnoutTriggerMark = _this.getEditorProperty("burnoutTriggerMark", _this.burnoutTriggerMark);
            _this.lerpEnginePitching = _this.getEditorProperty("lerpEnginePitching", _this.lerpEnginePitching);
            _this.differentialRatio = _this.getEditorProperty("gearBoxDifferential", _this.differentialRatio);
            _this.transmissionRatio = _this.getEditorProperty("gearBoxOverdrive", _this.transmissionRatio);
            _this.gearBoxShiftNext = _this.getEditorProperty("gearBoxShiftNext", _this.gearBoxShiftNext);
            _this.gearBoxShiftDown = _this.getEditorProperty("gearBoxShiftDown", _this.gearBoxShiftDown);
            _this.gearBoxShiftDelay = _this.getEditorProperty("gearBoxShiftDelay", _this.gearBoxShiftDelay);
            _this.gearBoxShiftRatios = _this.getEditorProperty("gearBoxShiftRatios", _this.gearBoxShiftRatios);
            _this.gearBoxShiftScales = _this.getEditorProperty("gearBoxShiftScales", _this.gearBoxShiftScales);
            if (_this.maxTurnAngle <= 0)
                _this.maxTurnAngle = 0.3;
            if (_this.maxBurnAngle <= 0)
                _this.maxBurnAngle = 0.5;
            if (_this.addSteerBoost <= 0)
                _this.addSteerBoost = 10;
            if (_this.lowSpeedAngle <= 0)
                _this.lowSpeedAngle = 0.165;
            if (_this.highSpeedAngle <= 0)
                _this.highSpeedAngle = 0.015;
            if (_this.lowSpeedTurning <= 0)
                _this.lowSpeedTurning = 0.015;
            if (_this.highSpeedTurning <= 0)
                _this.highSpeedTurning = 0.005;
            if (_this.lerpEnginePitching <= 0)
                _this.lerpEnginePitching = 5000;
            if (_this.baseEnginePower <= 0)
                _this.baseEnginePower = 1000;
            if (_this.topEngineSpeed <= 0)
                _this.topEngineSpeed = 120;
            if (_this.gearBoxShiftNext <= 0)
                _this.gearBoxShiftNext = 4500;
            if (_this.gearBoxShiftDown <= 0)
                _this.gearBoxShiftNext = 3000;
            if (_this.gearBoxShiftDelay <= 0)
                _this.gearBoxShiftDelay = 0.3;
            if (_this.transmissionRatio <= 0)
                _this.transmissionRatio = 1;
            if (_this.differentialRatio <= 0)
                _this.differentialRatio = 1;
            if (_this.defaultLerpSpeed <= 0)
                _this.defaultLerpSpeed = 1;
            if (_this.driftingLerpSpeed <= 0)
                _this.driftingLerpSpeed = 1;
            if (_this.burnoutLerpSpeed <= 0)
                _this.burnoutLerpSpeed = 1;
            if (_this.burnoutTimeDelay <= 0)
                _this.burnoutTimeDelay = 1;
            if (_this.setEngineTorque != null) {
                // TODO: USE ENGINE TORQUE CURVES
                // console.warn("Setup Engine Torque Animation");
                // console.log(this.setEngineTorque);
            }
            return _this;
        }
        StandardCarController.prototype.getRigidbodyPhysics = function () { return this._rigidbody; };
        StandardCarController.prototype.getRaycastVehicle = function () { return this.raycastVehicle; };
        StandardCarController.prototype.getAbsoluteSpeed = function () { return this.absoluteSpeed; };
        StandardCarController.prototype.getNormalizedSpeed = function () { return this.normalizedSpeed; };
        StandardCarController.prototype.getCurrentGearIndex = function () { return this.gearIndex; };
        StandardCarController.prototype.getCurrentEngineRPM = function () { return this.engineRPM; };
        StandardCarController.prototype.getCurrentEnginePitch = function () { return BABYLON.Scalar.Clamp((this.engineRPM / this.lerpEnginePitching) + 0.1); };
        StandardCarController.prototype.getGearShiftRatioCount = function () { return (this.gearBoxShiftRatios != null) ? this.gearBoxShiftRatios.length : 0; };
        StandardCarController.prototype.getSmokeTextureInfo = function () { return this.smokeTexture; };
        StandardCarController.prototype.getShadowTextureInfo = function () { return this.shadowTexture; };
        StandardCarController.prototype.getFrontLeftWheelNode = function () { return this.frontLeftWheelMesh; };
        StandardCarController.prototype.getFrontRightWheelNode = function () { return this.frontRightWheelMesh; };
        StandardCarController.prototype.getBackLeftWheelNode = function () { return this.backLeftWheelMesh; };
        StandardCarController.prototype.getBackRightWheelNode = function () { return this.backRightWheelMesh; };
        StandardCarController.prototype.getWheelBurnoutEnabled = function () { return this.wheelBurnout; };
        StandardCarController.prototype.start = function () { this.initVehicleState(); };
        StandardCarController.prototype.update = function () { this.updateVehicleState(); };
        StandardCarController.prototype.destroy = function () { this.destroyVehicleState(); };
        //////////////////////////////////////////////////
        // Protected Vehicle Movement State Functions //
        //////////////////////////////////////////////////
        StandardCarController.prototype.initVehicleState = function () {
            BABYLON.Utilities.ValidateTransformQuaternion(this.transform);
            // Setup Engine Audio
            this._engineAudioSource = this.getComponent("BABYLON.AudioSource");
            if (this._engineAudioSource == null)
                BABYLON.Tools.Warn("No engine audio source manager found for: " + this.transform.name);
            // Setup Raycast Vehicle
            this._rigidbody = this.getComponent("BABYLON.RigidbodyPhysics");
            if (this._rigidbody != null) {
                if (this._rigidbody.hasRaycastVehicle()) {
                    this.raycastVehicle = this._rigidbody.getRaycastVehicle();
                    if (this.raycastVehicle != null) {
                        this._rigidbody.setDamping(0, 0); // Default Vehicle Drag Damping
                        var frontLeftWheelName = (this.frontLeftWheelTrans != null && this.frontLeftWheelTrans.name != null && this.frontLeftWheelTrans.name !== "") ? this.frontLeftWheelTrans.name : null;
                        var frontRightWheelName = (this.frontRightWheelTrans != null && this.frontRightWheelTrans.name != null && this.frontRightWheelTrans.name !== "") ? this.frontRightWheelTrans.name : null;
                        var backLeftWheelName = (this.backLeftWheelTrans != null && this.backLeftWheelTrans.name != null && this.backLeftWheelTrans.name !== "") ? this.backLeftWheelTrans.name : null;
                        var backRightWheelName = (this.backRightWheelTrans != null && this.backRightWheelTrans.name != null && this.backRightWheelTrans.name !== "") ? this.backRightWheelTrans.name : null;
                        var frontLeftWheelLabel = (this.frontLeftWheelCollider != null && this.frontLeftWheelCollider.name != null && this.frontLeftWheelCollider.name !== "") ? this.frontLeftWheelCollider.name : null;
                        var frontRightWheelLabel = (this.frontRightWheelCollider != null && this.frontRightWheelCollider.name != null && this.frontRightWheelCollider.name !== "") ? this.frontRightWheelCollider.name : null;
                        var backLeftWheelLabel = (this.backLeftWheelCollider != null && this.backLeftWheelCollider.name != null && this.backLeftWheelCollider.name !== "") ? this.backLeftWheelCollider.name : null;
                        var backRightWheelLabel = (this.backRightWheelCollider != null && this.backRightWheelCollider.name != null && this.backRightWheelCollider.name !== "") ? this.backRightWheelCollider.name : null;
                        // Get Wheel Indexs from Wheel Names
                        if (frontLeftWheelLabel != null)
                            this.FRONT_LEFT = this.raycastVehicle.getWheelIndexByName(frontLeftWheelLabel);
                        if (frontRightWheelLabel != null)
                            this.FRONT_RIGHT = this.raycastVehicle.getWheelIndexByName(frontRightWheelLabel);
                        if (backLeftWheelLabel != null)
                            this.BACK_LEFT = this.raycastVehicle.getWheelIndexByName(backLeftWheelLabel);
                        if (backRightWheelLabel != null)
                            this.BACK_RIGHT = this.raycastVehicle.getWheelIndexByName(backRightWheelLabel);
                        // Setup Wheel Info And Transform Meshes
                        if (this.raycastVehicle.getNumWheels() >= 4) {
                            if (this.FRONT_LEFT >= 0 && frontLeftWheelName != null) {
                                this.m_frontLeftWheel = this.raycastVehicle.getWheelInfo(this.FRONT_LEFT);
                                this.frontLeftWheelMesh = this.getChildTransform(frontLeftWheelName, BABYLON.SearchType.StartsWith, false);
                                if (this.frontLeftWheelMesh != null) {
                                    this.m_frontLeftWheel.spinner = BABYLON.SceneManager.FindSceneChildTransform(this.frontLeftWheelMesh, "Wheel", BABYLON.SearchType.IndexOf, true);
                                    this.raycastVehicle.setWheelTransformMesh(this.FRONT_LEFT, this.frontLeftWheelMesh);
                                    if (this.wheelDriveType === 1 || this.wheelDriveType === 2) { // FRONT OR ALL WHEEL DRIVE
                                        if (this.wheelRadius <= 0 && this.m_frontLeftWheel != null) {
                                            this.wheelRadius = this.m_frontLeftWheel.get_m_wheelsRadius();
                                        }
                                    }
                                }
                            }
                            if (this.FRONT_RIGHT >= 0 && frontRightWheelName != null) {
                                this.m_frontRightWheel = this.raycastVehicle.getWheelInfo(this.FRONT_RIGHT);
                                this.frontRightWheelMesh = this.getChildTransform(frontRightWheelName, BABYLON.SearchType.StartsWith, false);
                                if (this.frontRightWheelMesh != null) {
                                    this.m_frontRightWheel.spinner = BABYLON.SceneManager.FindSceneChildTransform(this.frontRightWheelMesh, "Wheel", BABYLON.SearchType.IndexOf, true);
                                    this.raycastVehicle.setWheelTransformMesh(this.FRONT_RIGHT, this.frontRightWheelMesh);
                                    if (this.wheelDriveType === 1 || this.wheelDriveType === 2) { // FRONT OR ALL WHEEL DRIVE
                                        if (this.wheelRadius <= 0 && this.m_frontRightWheel != null) {
                                            this.wheelRadius = this.m_frontRightWheel.get_m_wheelsRadius();
                                        }
                                    }
                                }
                            }
                            if (this.BACK_LEFT >= 0 && backLeftWheelName != null) {
                                this.m_backLeftWheel = this.raycastVehicle.getWheelInfo(this.BACK_LEFT);
                                this.backLeftWheelMesh = this.getChildTransform(backLeftWheelName, BABYLON.SearchType.StartsWith, false);
                                if (this.backLeftWheelMesh != null) {
                                    this.m_backLeftWheel.spinner = BABYLON.SceneManager.FindSceneChildTransform(this.backLeftWheelMesh, "Wheel", BABYLON.SearchType.IndexOf, true);
                                    this.raycastVehicle.setWheelTransformMesh(this.BACK_LEFT, this.backLeftWheelMesh);
                                    if (this.wheelDriveType === 0 || this.wheelDriveType === 2) { // REAR OR ALL WHEEL DRIVE
                                        if (this.wheelRadius <= 0 && this.m_backLeftWheel != null) {
                                            this.wheelRadius = this.m_backLeftWheel.get_m_wheelsRadius();
                                        }
                                    }
                                }
                            }
                            if (this.BACK_RIGHT >= 0 && backRightWheelName != null) {
                                this.m_backRightWheel = this.raycastVehicle.getWheelInfo(this.BACK_RIGHT);
                                this.backRightWheelMesh = this.getChildTransform(backRightWheelName, BABYLON.SearchType.StartsWith, false);
                                if (this.backRightWheelMesh != null) {
                                    this.m_backRightWheel.spinner = BABYLON.SceneManager.FindSceneChildTransform(this.backRightWheelMesh, "Wheel", BABYLON.SearchType.IndexOf, true);
                                    this.raycastVehicle.setWheelTransformMesh(this.BACK_RIGHT, this.backRightWheelMesh);
                                    if (this.wheelDriveType === 0 || this.wheelDriveType === 2) { // REAR OR ALL WHEEL DRIVE
                                        if (this.wheelRadius <= 0 && this.m_backRightWheel != null) {
                                            this.wheelRadius = this.m_backRightWheel.get_m_wheelsRadius();
                                        }
                                    }
                                }
                            }
                            if (this._skidAudioSource == null && this.backRightWheelMesh != null)
                                this._skidAudioSource = BABYLON.SceneManager.FindScriptComponent(this.backRightWheelMesh, "BABYLON.AudioSource");
                            if (this._skidAudioSource == null && this.backLeftWheelMesh != null)
                                this._skidAudioSource = BABYLON.SceneManager.FindScriptComponent(this.backLeftWheelMesh, "BABYLON.AudioSource");
                            if (this._skidAudioSource == null && this.frontRightWheelMesh != null)
                                this._skidAudioSource = BABYLON.SceneManager.FindScriptComponent(this.frontRightWheelMesh, "BABYLON.AudioSource");
                            if (this._skidAudioSource == null && this.frontLeftWheelMesh != null)
                                this._skidAudioSource = BABYLON.SceneManager.FindScriptComponent(this.frontLeftWheelMesh, "BABYLON.AudioSource");
                            if (this._skidAudioSource == null)
                                BABYLON.Tools.Warn("No skid audio source manager found for: " + this.transform.name);
                        }
                        else {
                            BABYLON.Tools.Warn("Invalid vehicle controller wheel count info for: " + this.transform.name);
                        }
                    }
                    else {
                        BABYLON.Tools.Warn("Failed to create vehicle controller for: " + this.transform.name);
                    }
                }
                else {
                    BABYLON.Tools.Warn("No wheel collider information found for: " + this.transform.name);
                }
            }
            else {
                BABYLON.Tools.Warn("Failed to get rigidbody component: " + this.transform.name);
            }
        };
        StandardCarController.prototype.updateVehicleState = function () {
            var deltaTime = this.getDeltaSeconds();
            ///////////////////////////////////////
            // Double Check Gear Index - ???
            ///////////////////////////////////////
            if (this.gearIndex < 0)
                this.gearIndex = 0;
            else if (this.gearIndex >= this.getGearShiftRatioCount())
                this.gearIndex = (this.getGearShiftRatioCount() - 1);
            ///////////////////////////////////////
            // Handle Shift Delay Flag - ???
            ///////////////////////////////////////
            if (this.shiftDelay > 0) {
                this.shiftDelay -= deltaTime;
            }
            if (this.shiftDelay <= 0) {
                this.shiftDelay = 0;
                this.shiftingGears = false;
            }
            ///////////////////////////////////////
            if (this._rigidbody != null && this.raycastVehicle != null) {
                this.forwardSpeed = this.raycastVehicle.getRawCurrentSpeedKph();
                if (this.forwardSpeed < 0.2)
                    this.forwardSpeed = 0;
                // ..
                this.absoluteSpeed = this.raycastVehicle.getAbsCurrentSpeedKph();
                if (this.absoluteSpeed < 0.2)
                    this.absoluteSpeed = 0;
                this.americanSpeed = (this.absoluteSpeed * BABYLON.System.Kph2Mph);
                this.normalizedSpeed = BABYLON.Scalar.Clamp((this.absoluteSpeed / this.topEngineSpeed));
                // ..
                if (this.gearBoxShiftRatios != null && this.gearIndex >= 0 && this.gearIndex < this.getGearShiftRatioCount()) {
                    var wheelDiameter = (this.wheelRadius * 2 * BABYLON.System.Meter2Inch);
                    var finalGearRatio = (this.gearBoxShiftRatios[this.gearIndex] * this.differentialRatio * this.transmissionRatio);
                    this.engineRPM = (this.americanSpeed * finalGearRatio * 336) / wheelDiameter + 1000;
                    // ..
                    // Update Engine Gear Box
                    // ..
                    if (this.americanSpeed < 5) {
                        this.gearIndex = 0;
                    }
                    else {
                        if (this.gearIndex > 0) {
                            if (this.engineRPM < this.gearBoxShiftDown) {
                                this.gearIndex--;
                                this.shiftDelay = 0;
                                this.shiftingGears = false;
                            }
                        }
                        if (this.gearIndex < 5) {
                            if (this.engineRPM > this.gearBoxShiftNext) {
                                this.gearIndex++;
                                this.shiftDelay = this.gearBoxShiftDelay;
                                this.shiftingGears = true;
                            }
                        }
                    }
                }
            }
            // Account for further movement since the last wheel update
            var velocityScale = PROJECT.SkidmarkManager.GetVelocityScale();
            if (velocityScale > 0.0 && this._rigidbody != null) {
                this.m_velocityOffset.copyFrom(this._rigidbody.getLinearVelocity());
                this.m_velocityOffset.scaleInPlace(velocityScale);
            }
            // Update Engine Sound Pitch
            if (this._engineAudioSource != null) {
                var engineSoundClip = this._engineAudioSource.getSoundClip();
                if (engineSoundClip != null)
                    engineSoundClip.setPlaybackRate(this.getCurrentEnginePitch() * 0.75);
            }
            // Update Wheel Skidding Info
            var skid_FL = 0, skid_FR = 0, skid_RL = 0, skid_RR = 0;
            var skidThreashold = PROJECT.SkidmarkManager.SkidThreashold;
            if (this.wheelDriveType === 1 || this.wheelDriveType === 2) { // FRONT OR ALL WHEEL DRIVE
                if (this.m_frontLeftWheel != null) {
                    skid_FL = BABYLON.Scalar.Clamp((1 - this.m_frontLeftWheel.get_m_skidInfo()));
                    if (skid_FL < skidThreashold)
                        skid_FL = 0;
                    if (skid_FL > 0) {
                        var contactPointFL = this.m_frontLeftWheel.get_m_raycastInfo().get_m_contactPointWS();
                        var contactNormalFL = this.m_frontLeftWheel.get_m_raycastInfo().get_m_contactNormalWS();
                        var skidPosFL = new BABYLON.Vector3(contactPointFL.x(), contactPointFL.y(), contactPointFL.z());
                        var skidNormFL = new BABYLON.Vector3(contactNormalFL.x(), contactNormalFL.y(), contactNormalFL.z());
                        var skidScaleFL = BABYLON.Scalar.Normalize(skid_FL, skidThreashold, 1.0);
                        if (velocityScale > 0.0)
                            skidPosFL.addInPlace(this.m_velocityOffset);
                        this.m_frontLeftWheelSkid = PROJECT.SkidmarkManager.AddSkidmarkSegment(skidPosFL, skidNormFL, skidScaleFL, this.m_frontLeftWheelSkid);
                    }
                    else {
                        this.m_frontLeftWheelSkid = -1;
                    }
                }
                if (this.m_frontRightWheel != null) {
                    skid_FR = BABYLON.Scalar.Clamp((1 - this.m_frontRightWheel.get_m_skidInfo()));
                    if (skid_FR < skidThreashold)
                        skid_FR = 0;
                    if (skid_FR > 0) {
                        var contactPointFR = this.m_frontRightWheel.get_m_raycastInfo().get_m_contactPointWS();
                        var contactNormalFR = this.m_frontRightWheel.get_m_raycastInfo().get_m_contactNormalWS();
                        var skidPosFR = new BABYLON.Vector3(contactPointFR.x(), contactPointFR.y(), contactPointFR.z());
                        var skidNormFR = new BABYLON.Vector3(contactNormalFR.x(), contactNormalFR.y(), contactNormalFR.z());
                        var skidScaleFR = BABYLON.Scalar.Normalize(skid_FR, skidThreashold, 1.0);
                        if (velocityScale > 0.0)
                            skidPosFR.addInPlace(this.m_velocityOffset);
                        this.m_frontRightWheelSkid = PROJECT.SkidmarkManager.AddSkidmarkSegment(skidPosFR, skidNormFR, skidScaleFR, this.m_frontRightWheelSkid);
                    }
                    else {
                        this.m_frontRightWheelSkid = -1;
                    }
                }
                if (this.wheelBurnout == true || this.restoreTimer > 0) {
                    skid_FL *= 0.75;
                    skid_FR *= 0.75;
                }
                ///////////////////////////////
                // Half Skid For Front Wheels
                ///////////////////////////////
                skid_FL *= 0.5;
                skid_FR *= 0.5;
            }
            if (this.m_backLeftWheel != null) {
                skid_RL = BABYLON.Scalar.Clamp((1 - this.m_backLeftWheel.get_m_skidInfo()));
                if (skid_RL < skidThreashold)
                    skid_RL = 0;
                if (skid_RL > 0) {
                    var contactPointRL = this.m_backLeftWheel.get_m_raycastInfo().get_m_contactPointWS();
                    var contactNormalRL = this.m_backLeftWheel.get_m_raycastInfo().get_m_contactNormalWS();
                    var skidPosRL = new BABYLON.Vector3(contactPointRL.x(), contactPointRL.y(), contactPointRL.z());
                    var skidNormRL = new BABYLON.Vector3(contactNormalRL.x(), contactNormalRL.y(), contactNormalRL.z());
                    var skidScaleRL = BABYLON.Scalar.Normalize(skid_RL, skidThreashold, 1.0);
                    if (velocityScale > 0.0)
                        skidPosRL.addInPlace(this.m_velocityOffset);
                    this.m_backLeftWheelSkid = PROJECT.SkidmarkManager.AddSkidmarkSegment(skidPosRL, skidNormRL, skidScaleRL, this.m_backLeftWheelSkid);
                }
                else {
                    this.m_backLeftWheelSkid = -1;
                }
            }
            if (this.m_backRightWheel != null) {
                skid_RR = BABYLON.Scalar.Clamp((1 - this.m_backRightWheel.get_m_skidInfo()));
                if (skid_RR < skidThreashold)
                    skid_RR = 0;
                if (skid_RR > 0) {
                    var contactPointRR = this.m_backRightWheel.get_m_raycastInfo().get_m_contactPointWS();
                    var contactNormalRR = this.m_backRightWheel.get_m_raycastInfo().get_m_contactNormalWS();
                    var skidPosRR = new BABYLON.Vector3(contactPointRR.x(), contactPointRR.y(), contactPointRR.z());
                    var skidNormRR = new BABYLON.Vector3(contactNormalRR.x(), contactNormalRR.y(), contactNormalRR.z());
                    var skidScaleRR = BABYLON.Scalar.Normalize(skid_RR, skidThreashold, 1.0);
                    if (velocityScale > 0.0)
                        skidPosRR.addInPlace(this.m_velocityOffset);
                    this.m_backRightWheelSkid = PROJECT.SkidmarkManager.AddSkidmarkSegment(skidPosRR, skidNormRR, skidScaleRR, this.m_backRightWheelSkid);
                }
                else {
                    this.m_backRightWheelSkid = -1;
                }
            }
            if (this.wheelBurnout == true || this.restoreTimer > 0) {
                skid_RL *= 0.75;
                skid_RR *= 0.75;
            }
            ///////////////////////////////////////////
            // Play Skid Audio Track
            ///////////////////////////////////////////
            var skidding = 0;
            if (skid_FL > skidding)
                skidding = skid_FL;
            if (skid_FR > skidding)
                skidding = skid_FR;
            if (skid_RL > skidding)
                skidding = skid_RL;
            if (skid_RR > skidding)
                skidding = skid_RR;
            ///////////////////////////////////////////
            if (this._skidAudioSource != null) {
                var skidSoundClip = this._skidAudioSource.getSoundClip();
                if (skidSoundClip != null)
                    skidSoundClip.setPlaybackRate(skidding);
            }
            ///////////////////////////////////////////
            // Final Vehicle Information Update
            ///////////////////////////////////////////
            if (this.onUpdateVehicleInformation != null) {
                this.onUpdateVehicleInformation(skid_FL, skid_FR, skid_RL, skid_RR);
            }
        };
        StandardCarController.prototype.destroyVehicleState = function () {
            this._rigidbody = null;
            this._engineAudioSource = null;
            this._skidAudioSource = null;
            if (this.m_frontLeftWheel != null) {
                Ammo.destroy(this.m_frontLeftWheel); // ???
                this.m_frontLeftWheel = null;
            }
            if (this.m_frontRightWheel != null) {
                Ammo.destroy(this.m_frontRightWheel); // ???
                this.m_frontRightWheel = null;
            }
            if (this.m_backLeftWheel != null) {
                Ammo.destroy(this.m_backLeftWheel); // ???
                this.m_backLeftWheel = null;
            }
            if (this.m_backRightWheel != null) {
                Ammo.destroy(this.m_backRightWheel); // ???
                this.m_backRightWheel = null;
            }
            this.m_physicsWorld = null;
            this.raycastVehicle = null;
            this.frontLeftWheelMesh = null;
            this.frontRightWheelMesh = null;
            this.backLeftWheelMesh = null;
            this.backRightWheelMesh = null;
            this.frontLeftWheelTrans = null;
            this.frontRightWheelTrans = null;
            this.backLeftWheelTrans = null;
            this.backRightWheelTrans = null;
            this.frontLeftWheelCollider = null;
            this.frontRightWheelCollider = null;
            this.backLeftWheelCollider = null;
            this.backRightWheelCollider = null;
        };
        /** Drives the raycast vehicle with the specfied movement and hand braking properties. */
        StandardCarController.prototype.drive = function (forward, turn, braking) {
            if (braking === void 0) { braking = false; }
            if (this._rigidbody == null || this.raycastVehicle == null)
                return;
            if (this.FRONT_LEFT >= 0 && this.FRONT_RIGHT >= 0 && this.BACK_LEFT >= 0 && this.BACK_RIGHT >= 0) {
                var deltaTime = this.getDeltaSeconds();
                this.engineForce = 0;
                this.wheelBrakingForce = 0;
                this.frontWheelPower = 0;
                this.backWheelPower = 0;
                // ..
                // Update Engine Forces
                // ..
                var gearShiftScale = (this.gearBoxShiftScales != null && this.gearBoxShiftScales.length > this.gearIndex) ? this.gearBoxShiftScales[this.gearIndex] : 1.0;
                var gearShiftRatio = (this.gearBoxShiftRatios != null && this.gearBoxShiftRatios.length > this.gearIndex) ? this.gearBoxShiftRatios[this.gearIndex] : 1.0;
                var finalGearRatio = (gearShiftRatio * this.differentialRatio * this.transmissionRatio);
                var engineMotorTorque = this.getVehicleEngineTorque(this.engineRPM) * Math.abs(forward) * gearShiftScale;
                var allowedEnginePower = (engineMotorTorque * finalGearRatio);
                if (forward > 0.1) { // Forward
                    if (this.forwardSpeed < -1)
                        this.wheelBrakingForce = this.maxBrakingForce;
                    else
                        this.engineForce = allowedEnginePower;
                }
                else if (forward < -0.1) { // Reverse
                    if (this.forwardSpeed > 1)
                        this.wheelBrakingForce = this.maxBrakingForce;
                    else
                        this.engineForce = -(allowedEnginePower * this.maxReversePower);
                }
                else {
                    this.engineForce = 0;
                    this.wheelBrakingForce = 10; // Static
                }
                if (this.shiftingGears === true || this.americanSpeed > this.topEngineSpeed)
                    this.engineForce = 0;
                // ..
                // Update Physics Turn Angle (Actual Steering)
                // ..
                this.allowedTurningAngle = BABYLON.Scalar.Lerp(this.lowSpeedAngle, this.highSpeedAngle, this.normalizedSpeed);
                this.allowedTurningIncement = BABYLON.Scalar.Lerp(this.lowSpeedTurning, this.highSpeedTurning, this.normalizedSpeed);
                if (this.wheelBurnout === true && this.wheelDonuts === true) {
                    this.allowedTurningAngle = this.maxBurnAngle;
                }
                this.allowedTurningAngle = BABYLON.Scalar.Clamp(this.allowedTurningAngle, 0, 0.6);
                if (turn > 0) { // Right
                    if (this.physicsSteerAngle < this.allowedTurningAngle) {
                        this.physicsSteerAngle += (this.allowedTurningIncement);
                    }
                }
                else if (turn < 0) { // Left
                    if (this.physicsSteerAngle > -this.allowedTurningAngle) {
                        this.physicsSteerAngle -= (this.allowedTurningIncement);
                    }
                }
                else {
                    if (this.physicsSteerAngle < -this.allowedTurningIncement) {
                        this.physicsSteerAngle += this.allowedTurningIncement;
                    }
                    else {
                        if (this.physicsSteerAngle > this.allowedTurningIncement) {
                            this.physicsSteerAngle -= this.allowedTurningIncement;
                        }
                        else {
                            this.physicsSteerAngle = 0;
                        }
                    }
                }
                // ..
                // Update Visual Turn Angle (No Steering Effect)
                // ..
                if (this.wheelBurnout === true || this.wheelSkidding == true) {
                    this.allowedTurningIncement = this.lowSpeedTurning;
                    this.allowedTurningAngle = (this.wheelBurnout === true) ? this.maxBurnAngle : this.maxTurnAngle;
                }
                else {
                    this.allowedTurningIncement = BABYLON.Scalar.Lerp(this.lowSpeedTurning, this.highSpeedTurning, this.normalizedSpeed);
                    this.allowedTurningAngle = BABYLON.Scalar.Lerp(this.lowSpeedAngle, this.highSpeedAngle, this.normalizedSpeed);
                    this.allowedTurningAngle += (this.addSteerBoost * BABYLON.System.Deg2Rad);
                }
                if (turn > 0) { // Right
                    if (this.visualSteerAngle < this.allowedTurningAngle) {
                        this.visualSteerAngle += (this.allowedTurningIncement);
                    }
                }
                else if (turn < 0) { // Left
                    if (this.visualSteerAngle > -this.allowedTurningAngle) {
                        this.visualSteerAngle -= (this.allowedTurningIncement);
                    }
                }
                else {
                    if (this.visualSteerAngle < -this.allowedTurningIncement) {
                        this.visualSteerAngle += this.allowedTurningIncement;
                    }
                    else {
                        if (this.visualSteerAngle > this.allowedTurningIncement) {
                            this.visualSteerAngle -= this.allowedTurningIncement;
                        }
                        else {
                            this.visualSteerAngle = 0;
                        }
                    }
                }
                // ..
                // Update Raycast Vehicle Controls
                // ..
                var updateFriction = true;
                if (braking === true && this.handBrakingForce > 0) {
                    this.burnoutTimer = 0;
                    this.wheelBurnout = false;
                    this.wheelDonuts = false;
                    // ..
                    // Validate Wheel Skidding Mode
                    // ..
                    if (this.raycastVehicle.lockedWheelIndexes == null)
                        this.raycastVehicle.lockedWheelIndexes = [this.BACK_LEFT, this.BACK_RIGHT];
                    if (this.americanSpeed >= 5) {
                        if (this.wheelSkidding === false) {
                            this.wheelSkidding = true;
                            if (this.m_frontLeftWheel != null)
                                this.m_frontLeftWheel.set_m_frictionSlip(this.wheelLockFriction);
                            if (this.m_frontRightWheel != null)
                                this.m_frontRightWheel.set_m_frictionSlip(this.wheelLockFriction);
                            if (this.m_backLeftWheel != null)
                                this.m_backLeftWheel.set_m_frictionSlip(this.wheelLockFriction);
                            if (this.m_backRightWheel != null)
                                this.m_backRightWheel.set_m_frictionSlip(this.wheelLockFriction);
                            updateFriction = false; // Note: Disable Friction Lerping This Frame
                        }
                    }
                    // ..
                    // Update Vehicle Wheel Information
                    // ..
                    this.updateCurrentBrakeDamping(this.linearBrakingForce, this.angularBrakingForce);
                    if (updateFriction === true)
                        this.updateCurrentFrictionSlip(deltaTime * this.driftingLerpSpeed);
                    this.updateCurrentRotationBoost(0);
                    // ..
                    this.raycastVehicle.setVisualSteeringAngle(this.visualSteerAngle, this.FRONT_LEFT);
                    this.raycastVehicle.setVisualSteeringAngle(this.visualSteerAngle, this.FRONT_RIGHT);
                    this.raycastVehicle.setPhysicsSteeringAngle(this.physicsSteerAngle, this.FRONT_LEFT);
                    this.raycastVehicle.setPhysicsSteeringAngle(this.physicsSteerAngle, this.FRONT_RIGHT);
                    // ..
                    this.raycastVehicle.setEngineForce(0, this.FRONT_LEFT);
                    this.raycastVehicle.setEngineForce(0, this.FRONT_RIGHT);
                    this.raycastVehicle.setEngineForce(0, this.BACK_LEFT);
                    this.raycastVehicle.setEngineForce(0, this.BACK_RIGHT);
                    // ..
                    this.raycastVehicle.setBrakingForce(0, this.FRONT_LEFT);
                    this.raycastVehicle.setBrakingForce(0, this.FRONT_RIGHT);
                    this.raycastVehicle.setBrakingForce(this.handBrakingForce, this.BACK_LEFT);
                    this.raycastVehicle.setBrakingForce(this.handBrakingForce, this.BACK_RIGHT);
                }
                else {
                    this.wheelSkidding = false;
                    if (this.raycastVehicle.lockedWheelIndexes != null)
                        this.raycastVehicle.lockedWheelIndexes = null;
                    if (this.burnoutTriggerMark > 0) {
                        this.burnoutTriggerMark = BABYLON.Scalar.Clamp(this.burnoutTriggerMark, 0, 15);
                    }
                    if (this.burnoutDonutBoost > 0) {
                        this.burnoutDonutBoost = BABYLON.Scalar.Clamp(this.burnoutDonutBoost, 1, 5);
                    }
                    if (this.burnoutCoefficient > 0) {
                        this.burnoutCoefficient = BABYLON.Scalar.Clamp(this.burnoutCoefficient, 1, 5);
                    }
                    var isBurnoutSpeed = (this.americanSpeed <= this.burnoutTriggerMark);
                    var isFullThrottle = (forward <= -0.8 || forward >= 0.8);
                    var isFullTurning = (turn <= -0.8 || turn >= 0.8);
                    var wheelLerpSpeed = (deltaTime * this.defaultLerpSpeed);
                    var wheelBoostSpeed = 0; // Default Zero Wheel Rotation Boost
                    // ..
                    // Validate Wheel Burnout Mode
                    // ..
                    if (this.burnoutTimer <= 0 && this.burnoutCoefficient >= 1.0 && isBurnoutSpeed === true && isFullThrottle === true) {
                        this.burnoutTimer = (this.burnoutTimeDelay * 0.25); // Note: 25 Percent Slipping Time
                        this.wheelDonuts = false;
                        this.wheelBurnout = true;
                    }
                    // ..
                    // Validate Wheel Burnout Timers
                    // ..
                    if (this.restoreTimer > 0) {
                        this.restoreTimer -= deltaTime;
                        if (this.restoreTimer < 0)
                            this.restoreTimer = 0;
                        wheelLerpSpeed *= this.burnoutLerpSpeed;
                    }
                    if (this.cooldownTimer > 0) {
                        this.cooldownTimer -= deltaTime;
                        if (this.cooldownTimer < 0)
                            this.cooldownTimer = 0;
                    }
                    if (this.wheelDonuts === true && isFullTurning === false) {
                        this.burnoutTimer = 0;
                    }
                    // ..
                    // Validate Wheel Drive Burnout Mode
                    // ..
                    if (this.burnoutTimer > 0 && isFullThrottle === true) {
                        wheelBoostSpeed = (forward < -0.1) ? -0.185 : 0.185;
                        var frontSlipFactor = (this.wheelDonuts === true) ? 1.25 : 1.0;
                        if (this.burnoutCoefficient >= 1.0)
                            this.engineForce *= (this.wheelDonuts === true && this.burnoutDonutBoost > this.burnoutCoefficient) ? this.burnoutDonutBoost : this.burnoutCoefficient;
                        if (this.m_frontLeftWheel != null)
                            this.m_frontLeftWheel.set_m_frictionSlip(this.wheelBurnFriction * frontSlipFactor);
                        if (this.m_frontRightWheel != null)
                            this.m_frontRightWheel.set_m_frictionSlip(this.wheelBurnFriction * frontSlipFactor);
                        if (this.m_backLeftWheel != null)
                            this.m_backLeftWheel.set_m_frictionSlip(this.wheelBurnFriction);
                        if (this.m_backRightWheel != null)
                            this.m_backRightWheel.set_m_frictionSlip(this.wheelBurnFriction);
                        updateFriction = false; // Note: Disable Friction Lerping This Frame
                        // ..
                        this.burnoutTimer -= deltaTime;
                        if (this.burnoutTimer <= 0 && this.cooldownTimer <= 0 && this.burnoutDonutBoost >= 1.0 && isFullTurning === true) {
                            this.burnoutTimer = 0.01; // Note: Fixed Donut Burnout Time Extension
                            this.wheelDonuts = true;
                        }
                    }
                    else {
                        this.burnoutTimer = 0; // Note: Force Burnout Timer Reset
                        if (this.wheelDonuts === true) {
                            this.wheelDonuts = false;
                            this.cooldownTimer = (this.burnoutTimeDelay * 2); // Note: 200 Percent Cooldown Time
                        }
                        if (this.wheelBurnout === true) {
                            this.wheelBurnout = false;
                            this.restoreTimer = (this.burnoutTimeDelay * 0.75); // Note: 75 Percent Restoring Time
                        }
                    }
                    // ..
                    // Validate Wheel Drive Power Force
                    // ..
                    if (this.wheelBurnout === true && this.wheelDonuts === true) {
                        this.frontWheelPower = (this.engineForce * 0.1); // Note: 10 Percent Engine Power Force
                    }
                    else if (this.wheelDriveType === 1 || this.wheelDriveType === 2) { // FRONT OR ALL WHEEL DRIVE
                        this.frontWheelPower = this.engineForce;
                    }
                    if (this.wheelDriveType === 0 || this.wheelDriveType === 2) { // REAR OR ALL WHEEL DRIVE
                        this.backWheelPower = this.engineForce;
                    }
                    // ..
                    // Update Vehicle Wheel Information
                    // ..
                    this.updateCurrentBrakeDamping(0, 0);
                    if (updateFriction === true)
                        this.updateCurrentFrictionSlip(wheelLerpSpeed);
                    this.updateCurrentRotationBoost(wheelBoostSpeed);
                    // ..
                    this.raycastVehicle.setVisualSteeringAngle(this.visualSteerAngle, this.FRONT_LEFT);
                    this.raycastVehicle.setVisualSteeringAngle(this.visualSteerAngle, this.FRONT_RIGHT);
                    this.raycastVehicle.setPhysicsSteeringAngle(this.physicsSteerAngle, this.FRONT_LEFT);
                    this.raycastVehicle.setPhysicsSteeringAngle(this.physicsSteerAngle, this.FRONT_RIGHT);
                    // ..
                    this.raycastVehicle.setEngineForce(this.frontWheelPower, this.FRONT_LEFT);
                    this.raycastVehicle.setEngineForce(this.frontWheelPower, this.FRONT_RIGHT);
                    this.raycastVehicle.setEngineForce(this.backWheelPower, this.BACK_LEFT);
                    this.raycastVehicle.setEngineForce(this.backWheelPower, this.BACK_RIGHT);
                    // ..
                    this.raycastVehicle.setBrakingForce(this.wheelBrakingForce * 0.5, this.FRONT_LEFT);
                    this.raycastVehicle.setBrakingForce(this.wheelBrakingForce * 0.5, this.FRONT_RIGHT);
                    this.raycastVehicle.setBrakingForce(this.wheelBrakingForce, this.BACK_LEFT);
                    this.raycastVehicle.setBrakingForce(this.wheelBrakingForce, this.BACK_RIGHT);
                }
                // Trace Current Speed
                // const msg:string = ("Speed: " + this.americanSpeed.toFixed(1) + " --> Turn Angle: " + this.allowedTurningAngle.toFixed(4));
                // const msg:string = ("MPH: " + this.americanSpeed.toFixed(1) + " --> Gear Index: " + this.gearIndex.toFixed(0) + " --> Engine RPM: " + this.engineRPM.toFixed(0) + " ---> Engine Pitch: " + this.getCurrentEnginePitch().toFixed(2) + " ---> Raw KPH: " + this.absoluteSpeed.toFixed(1));
                // const msg:string = ("Car Speed: " + this.americanSpeed.toFixed(1) + " --> Gear Index: " + this.gearIndex.toFixed(0) + " --> Engine RPM: " + this.engineRPM.toFixed(0) + " ---> Engine Toruqe: " + engineMotorTorque.toFixed(2)+ " ---> Engine Power: " + allowedEnginePower.toFixed(2));
                var msg = ("Car Speed: " + this.americanSpeed.toFixed(1) + " --> Gear Index: " + this.gearIndex.toFixed(0) + " --> Engine RPM: " + this.engineRPM.toFixed(0) + " ---> Cooldown Timer: " + this.cooldownTimer.toFixed(2));
                BABYLON.Utilities.PrintToScreen(msg, "#008000");
            }
        };
        StandardCarController.prototype.getVehicleEngineTorque = function (rpm) {
            var result = this.baseEnginePower;
            //if (this.engineTorqueCurve != null) {
            //    result = 1000; // TODO: Sample Animation Curve
            //}
            return result;
        };
        StandardCarController.prototype.updateCurrentBrakeDamping = function (linear, angular) {
            if (this._rigidbody != null)
                this._rigidbody.setDamping(linear, angular);
        };
        StandardCarController.prototype.updateCurrentRotationBoost = function (boost) {
            if (this.wheelDriveType === 1 || this.wheelDriveType === 2) { // FRONT OR ALL WHEEL DRIVE
                if (this.m_frontLeftWheel != null)
                    this.m_frontLeftWheel.rotationBoost = boost;
                if (this.m_frontRightWheel != null)
                    this.m_frontRightWheel.rotationBoost = boost;
            }
            if (this.wheelDriveType === 0 || this.wheelDriveType === 2) { // REAR OR ALL WHEEL DRIVE
                if (this.m_backLeftWheel != null)
                    this.m_backLeftWheel.rotationBoost = boost;
                if (this.m_backRightWheel != null)
                    this.m_backRightWheel.rotationBoost = boost;
            }
        };
        StandardCarController.prototype.updateCurrentFrictionSlip = function (lerpSpeed) {
            if (this.m_frontLeftWheel != null && this.m_frontLeftWheel.defaultFriction != null) {
                var frontLeftFriction = this.m_frontLeftWheel.get_m_frictionSlip();
                if (frontLeftFriction < this.m_frontLeftWheel.defaultFriction) {
                    frontLeftFriction = BABYLON.Scalar.Lerp(frontLeftFriction, this.m_frontLeftWheel.defaultFriction, lerpSpeed);
                    this.m_frontLeftWheel.set_m_frictionSlip(frontLeftFriction);
                }
                else if (frontLeftFriction > this.m_frontLeftWheel.defaultFriction) {
                    this.m_frontLeftWheel.set_m_frictionSlip(this.m_frontLeftWheel.defaultFriction);
                }
            }
            if (this.m_frontRightWheel != null && this.m_frontRightWheel.defaultFriction != null) {
                var frontRightFriction = this.m_frontRightWheel.get_m_frictionSlip();
                if (frontRightFriction !== this.m_frontRightWheel.defaultFriction) {
                    frontRightFriction = BABYLON.Scalar.Lerp(frontRightFriction, this.m_frontRightWheel.defaultFriction, lerpSpeed);
                    this.m_frontRightWheel.set_m_frictionSlip(frontRightFriction);
                }
                else if (frontRightFriction > this.m_frontRightWheel.defaultFriction) {
                    this.m_frontRightWheel.set_m_frictionSlip(this.m_frontRightWheel.defaultFriction);
                }
            }
            if (this.m_backLeftWheel != null && this.m_backLeftWheel.defaultFriction != null) {
                var backLeftFriction = this.m_backLeftWheel.get_m_frictionSlip();
                if (backLeftFriction !== this.m_backLeftWheel.defaultFriction) {
                    backLeftFriction = BABYLON.Scalar.Lerp(backLeftFriction, this.m_backLeftWheel.defaultFriction, lerpSpeed);
                    this.m_backLeftWheel.set_m_frictionSlip(backLeftFriction);
                }
                else if (backLeftFriction > this.m_backLeftWheel.defaultFriction) {
                    this.m_backLeftWheel.set_m_frictionSlip(this.m_backLeftWheel.defaultFriction);
                }
            }
            if (this.m_backRightWheel != null && this.m_backRightWheel.defaultFriction != null) {
                var backRightFriction = this.m_backRightWheel.get_m_frictionSlip();
                if (backRightFriction !== this.m_backRightWheel.defaultFriction) {
                    backRightFriction = BABYLON.Scalar.Lerp(backRightFriction, this.m_backRightWheel.defaultFriction, lerpSpeed);
                    this.m_backRightWheel.set_m_frictionSlip(backRightFriction);
                }
                else if (backRightFriction > this.m_backRightWheel.defaultFriction) {
                    this.m_backRightWheel.set_m_frictionSlip(this.m_backRightWheel.defaultFriction);
                }
            }
        };
        return StandardCarController;
    }(BABYLON.ScriptComponent));
    PROJECT.StandardCarController = StandardCarController;
})(PROJECT || (PROJECT = {}));
var PROJECT;
(function (PROJECT) {
    /**
     * Babylon Script Component
     * @class VehicleInputController
     */
    var VehicleInputController = /** @class */ (function (_super) {
        __extends(VehicleInputController, _super);
        function VehicleInputController(transform, scene, properties) {
            if (properties === void 0) { properties = {}; }
            var _this = _super.call(this, transform, scene, properties) || this;
            _this.playerDeltaX = 0;
            _this.playerDeltaY = 0;
            _this.playerMouseX = 0;
            _this.playerMouseY = 0;
            _this.currentUsedDistance = 0;
            _this.currentRotationAngle = 0;
            _this.wantedRotationAngle = 0;
            _this.wantedPosition = BABYLON.Vector3.Zero();
            _this.targetPosition = BABYLON.Vector3.Zero();
            _this.targetRotation = BABYLON.Quaternion.Zero();
            _this.targetAngles = BABYLON.Vector3.Zero();
            _this.cameraAngles = BABYLON.Vector3.Zero();
            _this.rotationQuat = BABYLON.Quaternion.Zero();
            _this.rotationVec = BABYLON.Vector3.Zero();
            _this.distanceVec = BABYLON.Vector3.Zero();
            _this.yVelocity = BABYLON.Vector2.Zero();
            _this.zVelocity = BABYLON.Vector2.Zero();
            _this.enableInput = false;
            _this.attachCamera = false;
            _this.followBehind = false;
            _this.followDistance = 5.0;
            _this.followHeight = 1.75;
            _this.rotationLagTime = 0.5;
            _this.distanceLagTime = 0.25;
            _this.distanceMultiplier = 0.025;
            _this.playerNumber = BABYLON.PlayerNumber.One;
            _this.triggerForward = BABYLON.Xbox360Trigger.Right;
            _this.keyboardForawrd = BABYLON.UserInputKey.W;
            _this.auxKeyboardForawrd = BABYLON.UserInputKey.UpArrow;
            _this.triggerBackwards = BABYLON.Xbox360Trigger.Left;
            _this.keyboardBackwards = BABYLON.UserInputKey.S;
            _this.auxKeyboardBackwards = BABYLON.UserInputKey.DownArrow;
            _this.buttonHandbrake = BABYLON.Xbox360Button.X;
            _this.keyboardHandbrake = BABYLON.UserInputKey.SpaceBar;
            _this.m_cameraTransform = null;
            _this.m_rigidbodyPhysics = null;
            _this.m_standardCarController = null;
            _this.enableInput = _this.getEditorProperty("enableInput", _this.enableInput);
            _this.playerNumber = _this.getEditorProperty("playerNumber", _this.playerNumber);
            _this.attachCamera = _this.getEditorProperty("attachCamera", _this.attachCamera);
            _this.followBehind = _this.getEditorProperty("followBehind", _this.followBehind);
            _this.followDistance = _this.getEditorProperty("followDistance", _this.followDistance);
            _this.followHeight = _this.getEditorProperty("followHeight", _this.followHeight);
            _this.rotationLagTime = _this.getEditorProperty("rotationLagTime", _this.rotationLagTime);
            _this.distanceLagTime = _this.getEditorProperty("distanceLagTime", _this.distanceLagTime);
            _this.distanceMultiplier = _this.getEditorProperty("distanceMultiplier", _this.distanceMultiplier);
            return _this;
        }
        VehicleInputController.prototype.getPlayerDeltaX = function () { return this.playerDeltaX; };
        ;
        VehicleInputController.prototype.getPlayerDeltaY = function () { return this.playerDeltaY; };
        ;
        VehicleInputController.prototype.getPlayerMouseX = function () { return this.playerMouseX; };
        ;
        VehicleInputController.prototype.getPlayerMouseY = function () { return this.playerMouseY; };
        ;
        VehicleInputController.prototype.start = function () { this.initVehicleController(); };
        VehicleInputController.prototype.update = function () { this.updateVehicleController(); };
        VehicleInputController.prototype.destroy = function () { this.destroyVehicleController(); };
        //////////////////////////////////////////////////
        // Protected Character Movement State Functions //
        //////////////////////////////////////////////////
        VehicleInputController.prototype.initVehicleController = function () {
            // Get Rigidbody Physics
            this.m_rigidbodyPhysics = this.getComponent("BABYLON.RigidbodyPhysics");
            if (this.m_rigidbodyPhysics == null)
                BABYLON.Tools.Warn("Null rigidbody physics for: " + this.transform.name);
            // Get Standard Car Controller
            this.m_standardCarController = this.getComponent("PROJECT.StandardCarController");
            if (this.m_standardCarController == null)
                BABYLON.Tools.Warn("Null standard car controller for: " + this.transform.name);
            // TODO: Get Player Camera Transform
            if (this.attachCamera === true) {
                this.m_cameraTransform = BABYLON.SceneManager.GetTransformNode(this.scene, "Main Camera");
                if (this.m_cameraTransform != null)
                    BABYLON.Utilities.ValidateTransformQuaternion(this.m_cameraTransform);
            }
            // Sync Vehicle Chase Camera Position
            this.syncVehicleController(this.followBehind, true);
            // const abstractMesh:BABYLON.AbstractMesh = this.getAbstractMesh();
            // if (abstractMesh != null) abstractMesh.physicsImpostor.registerAfterPhysicsStep((impostor:BABYLON.PhysicsImpostor)=>{ this.syncVehicleController(this.followBehind, true); });
        };
        VehicleInputController.prototype.updateVehicleController = function () {
            if (this.enableInput === true) {
                // Get User Input
                this.playerDeltaX = BABYLON.SceneManager.GetUserInput(BABYLON.UserInputAxis.Horizontal, this.playerNumber);
                this.playerDeltaY = BABYLON.SceneManager.GetUserInput(BABYLON.UserInputAxis.Vertical, this.playerNumber);
                this.playerMouseX = BABYLON.SceneManager.GetUserInput(BABYLON.UserInputAxis.MouseX, this.playerNumber);
                this.playerMouseY = BABYLON.SceneManager.GetUserInput(BABYLON.UserInputAxis.MouseY, this.playerNumber);
                // Check Dead Stick
                if (Math.abs(this.playerDeltaX) <= BABYLON.UserInputOptions.GamepadDeadStickValue)
                    this.playerDeltaX = 0;
                if (Math.abs(this.playerDeltaY) <= BABYLON.UserInputOptions.GamepadDeadStickValue)
                    this.playerDeltaY = 0;
                if (Math.abs(this.playerMouseX) <= BABYLON.UserInputOptions.GamepadDeadStickValue)
                    this.playerMouseX = 0;
                if (Math.abs(this.playerMouseY) <= BABYLON.UserInputOptions.GamepadDeadStickValue)
                    this.playerMouseY = 0;
                // Get Button Triggers
                var auxForwardKeyboard = BABYLON.SceneManager.GetKeyboardInput(this.auxKeyboardForawrd); // Player One Only
                var forwardKeyboard = BABYLON.SceneManager.GetKeyboardInput(this.keyboardForawrd); // Player One Only
                var forwardTrigger = BABYLON.SceneManager.GetGamepadTriggerInput(this.triggerForward, this.playerNumber);
                var auxBackwardKeyboard = BABYLON.SceneManager.GetKeyboardInput(this.auxKeyboardBackwards); // Player One Only
                var backwardKeyboard = BABYLON.SceneManager.GetKeyboardInput(this.keyboardBackwards); // Player One Only
                var backwardTrigger = BABYLON.SceneManager.GetGamepadTriggerInput(this.triggerBackwards, this.playerNumber);
                var handbrakeKeyboard = BABYLON.SceneManager.GetKeyboardInput(this.keyboardHandbrake); // Player One Only
                var handbrakeButton = BABYLON.SceneManager.GetGamepadButtonInput(this.buttonHandbrake, this.playerNumber);
                // Reset Player Movement
                var playerMovement = 0;
                var playerSteering = 0;
                var playerHandbrake = false;
                var playerDonuts = false;
                // Primary Accelerattion
                if (forwardTrigger > 0.2)
                    playerMovement = forwardTrigger;
                else if (this.playerNumber === BABYLON.PlayerNumber.One && (forwardKeyboard === true || auxForwardKeyboard === true))
                    playerMovement = 1;
                // Braking Takes Precedence
                if (backwardTrigger > 0.2)
                    playerMovement = -backwardTrigger;
                else if (this.playerNumber === BABYLON.PlayerNumber.One && (backwardKeyboard === true || auxBackwardKeyboard === true))
                    playerMovement = -1;
                // Includes AD And Arrow Keys
                playerSteering = this.playerDeltaX;
                // Pull Hard Hand Brake Lever
                playerHandbrake = (handbrakeKeyboard === true || handbrakeButton === true);
                // Drive Standard Car Controller
                if (this.m_standardCarController != null)
                    this.m_standardCarController.drive(playerMovement, playerSteering, playerHandbrake);
            }
            // Sync Vehicle Chase Camera Position
            this.syncVehicleController(this.followBehind, true);
        };
        VehicleInputController.prototype.syncVehicleController = function (follow, look) {
            if (this.attachCamera === true && this.m_cameraTransform != null && this.m_rigidbodyPhysics != null) {
                var deltaTime = this.getDeltaSeconds();
                this.m_rigidbodyPhysics.getTransformPositionToRef(this.targetPosition);
                this.m_rigidbodyPhysics.getTransformRotationToRef(this.targetRotation);
                // Smooth Position
                this.wantedPosition.copyFrom(this.targetPosition);
                this.wantedPosition.y += this.followHeight;
                this.currentUsedDistance = BABYLON.Utilities.SmoothDampAngle(this.currentUsedDistance, this.followDistance + (this.m_rigidbodyPhysics.getLinearVelocity().length() * this.distanceMultiplier), this.distanceLagTime, Number.MAX_VALUE, deltaTime, this.zVelocity);
                // Smooth Rotation
                BABYLON.Utilities.ToEulerToRef(this.targetRotation, this.targetAngles);
                BABYLON.Utilities.ToEulerToRef(this.m_cameraTransform.rotationQuaternion, this.cameraAngles);
                this.wantedRotationAngle = this.targetAngles.y;
                this.currentRotationAngle = this.cameraAngles.y;
                this.currentRotationAngle = BABYLON.Utilities.SmoothDampAngle(this.currentRotationAngle, this.wantedRotationAngle, this.rotationLagTime, Number.MAX_VALUE, deltaTime, this.yVelocity);
                // Set Wanted Position
                this.distanceVec.set(0, 0, -this.currentUsedDistance);
                BABYLON.Utilities.FromEulerToRef(0, this.currentRotationAngle, 0, this.rotationQuat);
                BABYLON.Utilities.MultiplyQuaternionByVectorToRef(this.rotationQuat, this.distanceVec, this.rotationVec);
                this.wantedPosition.addInPlace(this.rotationVec);
                // Update Follow Camera
                if (follow === true) {
                    if (this.m_cameraTransform.position.x !== this.wantedPosition.x ||
                        this.m_cameraTransform.position.y !== this.wantedPosition.y ||
                        this.m_cameraTransform.position.z !== this.wantedPosition.z) {
                        this.m_cameraTransform.position.set(this.wantedPosition.x, this.wantedPosition.y, this.wantedPosition.z);
                    }
                }
                if (look === true) {
                    // TODO: Update Quaternion Rotation Instead - ???
                    this.m_cameraTransform.lookAt(this.targetPosition);
                }
            }
        };
        VehicleInputController.prototype.destroyVehicleController = function () {
            this.m_cameraTransform = null;
            this.m_rigidbodyPhysics = null;
            this.m_standardCarController = null;
        };
        return VehicleInputController;
    }(BABYLON.ScriptComponent));
    PROJECT.VehicleInputController = VehicleInputController;
})(PROJECT || (PROJECT = {}));
var PROJECT;
(function (PROJECT) {
    /**
     * Babylon Script Component
     * @class ItemRotator
     */
    var ItemRotator = /** @class */ (function (_super) {
        __extends(ItemRotator, _super);
        function ItemRotator(transform, scene, properties) {
            if (properties === void 0) { properties = {}; }
            var _this = _super.call(this, transform, scene, properties) || this;
            _this.rotateSpeed = 1.0;
            _this.rotateSpeed = _this.getEditorProperty("rotateSpeed", _this.rotateSpeed);
            return _this;
        }
        ItemRotator.prototype.start = function () {
            console.log("===> Starting item rotator for: " + this.transform.name);
        };
        ItemRotator.prototype.update = function () {
            var delta = this.getDeltaSeconds();
            this.transform.addRotation(0, (this.rotateSpeed * delta), 0);
        };
        ItemRotator.prototype.destroy = function () {
            console.log("===> Destroying item rotator for: " + this.transform.name);
        };
        return ItemRotator;
    }(BABYLON.ScriptComponent));
    PROJECT.ItemRotator = ItemRotator;
})(PROJECT || (PROJECT = {}));
var PROJECT;
(function (PROJECT) {
    /**
     * Babylon Script Component
     * @class TestAnimation
     */
    var TestAnimation = /** @class */ (function (_super) {
        __extends(TestAnimation, _super);
        function TestAnimation(transform, scene, properties) {
            if (properties === void 0) { properties = {}; }
            var _this = _super.call(this, transform, scene, properties) || this;
            //private animator:BABYLON.AnimationState = null;
            _this.animator = null;
            return _this;
        }
        TestAnimation.prototype.start = function () {
            console.log("===> Starting animation test for: " + this.transform.name);
            this.animator = this.getComponent("BABYLON.AnimationState");
            if (this.animator == null) {
                BABYLON.Tools.Warn("Failed to get animation state component: " + this.transform.name);
            }
        };
        TestAnimation.prototype.update = function () {
            // Update render loop function
        };
        TestAnimation.prototype.after = function () {
            // After render loop function
        };
        TestAnimation.prototype.destroy = function () {
            // Destroy component function
        };
        return TestAnimation;
    }(BABYLON.ScriptComponent));
    PROJECT.TestAnimation = TestAnimation;
})(PROJECT || (PROJECT = {}));
var PROJECT;
(function (PROJECT) {
    /**
    * Babylon Script Component
    * @class TestCenter
    */
    var TestCenter = /** @class */ (function (_super) {
        __extends(TestCenter, _super);
        function TestCenter(transform, scene, properties) {
            if (properties === void 0) { properties = {}; }
            return _super.call(this, transform, scene, properties) || this;
        }
        TestCenter.prototype.start = function () {
            // Start render loop function
            var rb = this.getComponent("BABYLON.RigidbodyPhysics");
            console.warn("### FINAL COM ###");
            console.log(rb.centerOfMass);
        };
        TestCenter.prototype.update = function () {
            // Update render loop function
        };
        TestCenter.prototype.after = function () {
            // After render loop function
        };
        TestCenter.prototype.destroy = function () {
            // Destroy component function
        };
        return TestCenter;
    }(BABYLON.ScriptComponent));
    PROJECT.TestCenter = TestCenter;
})(PROJECT || (PROJECT = {}));
var PROJECT;
(function (PROJECT) {
    /**
     * Babylon Script Component
     * @class TestCollision
     */
    var TestCollision = /** @class */ (function (_super) {
        __extends(TestCollision, _super);
        function TestCollision(transform, scene, properties) {
            if (properties === void 0) { properties = {}; }
            var _this = _super.call(this, transform, scene, properties) || this;
            _this.rigidbody = null;
            return _this;
        }
        TestCollision.prototype.start = function () {
            var _this = this;
            // Start render loop function
            console.log("Test collision for: " + this.transform.name);
            this.rigidbody = this.getComponent("BABYLON.RigidbodyPhysics");
            if (this.rigidbody != null) {
                this.rigidbody.registerOnCollisionEnter(function (mesh) {
                    var tag = BABYLON.SceneManager.GetTransformTag(mesh);
                    console.log("###: " + _this.transform.name + ": Begin Contact With: " + mesh.name);
                });
                this.rigidbody.registerOnCollisionStay(function (mesh) {
                    var tag = BABYLON.SceneManager.GetTransformTag(mesh);
                    //console.log("###: " + this.transform.name + ": Update Contact With: " + mesh.name);
                });
                this.rigidbody.registerOnCollisionExit(function (mesh) {
                    var tag = BABYLON.SceneManager.GetTransformTag(mesh);
                    console.warn("###: " + _this.transform.name + ": End Contact With: " + mesh.name);
                });
            }
            else {
                console.warn("Failed to locate rigidbody component for: " + this.transform.name);
            }
        };
        TestCollision.prototype.update = function () {
            // Update render loop function
        };
        TestCollision.prototype.after = function () {
            // After render loop function
        };
        TestCollision.prototype.destroy = function () {
            // Destroy component function
        };
        return TestCollision;
    }(BABYLON.ScriptComponent));
    PROJECT.TestCollision = TestCollision;
})(PROJECT || (PROJECT = {}));
var PROJECT;
(function (PROJECT) {
    /**
     * Babylon Script Component
     * @class TestController
     */
    var TestController = /** @class */ (function (_super) {
        __extends(TestController, _super);
        function TestController(transform, scene, properties) {
            if (properties === void 0) { properties = {}; }
            var _this = _super.call(this, transform, scene, properties) || this;
            _this.testTexture = null;
            _this.m_physicsWorld = null;
            _this.m_physicsEngine = null;
            _this.ran = false;
            _this.testTexture = _this.getEditorProperty("testTexture", _this.testTexture);
            return _this;
        }
        TestController.prototype.start = function () {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    // Start render loop function
                    console.log("===> Starting test controller...");
                    this.m_physicsWorld = BABYLON.SceneManager.GetPhysicsWorld(this.scene);
                    this.m_physicsEngine = BABYLON.SceneManager.GetPhysicsEngine(this.scene);
                    return [2 /*return*/];
                });
            });
        };
        TestController.prototype.update = function () {
            // Update render loop function
            // const num_manifolds:number = this.m_physicsWorld.getBroadphase().getOverlappingPairCache().getNumOverlappingPairs();
            //const num_manifolds:number = this.m_physicsWorld.getDispatcher().getNumManifolds();
            //const msg = "Total Overlapping Paris: " + num_manifolds;
            //BABYLON.Utilities.PrintToScreen(msg);   
            // Test Running Loop
            //if (this.ran === false) {
            //    this.ran = true;
            //    
            //}
        };
        TestController.prototype.after = function () {
            // After render loop function
        };
        TestController.prototype.destroy = function () {
            // Destroy component function
        };
        return TestController;
    }(BABYLON.ScriptComponent));
    PROJECT.TestController = TestController;
})(PROJECT || (PROJECT = {}));
var PROJECT;
(function (PROJECT) {
    /**
    * Babylon Script Component
    * @class WTFComp
    */
    var WTFComp = /** @class */ (function (_super) {
        __extends(WTFComp, _super);
        function WTFComp(transform, scene, properties) {
            if (properties === void 0) { properties = {}; }
            return _super.call(this, transform, scene, properties) || this;
        }
        WTFComp.prototype.start = function () {
            // Start render loop function
        };
        WTFComp.prototype.update = function () {
            // Update render loop function
        };
        WTFComp.prototype.after = function () {
            // After render loop function
        };
        WTFComp.prototype.destroy = function () {
            // Destroy component function
        };
        return WTFComp;
    }(BABYLON.ScriptComponent));
    PROJECT.WTFComp = WTFComp;
})(PROJECT || (PROJECT = {}));
//# sourceMappingURL=data:application/json;base64,

// Project Data Store
if (navigator.dataStore == null) navigator.dataStore = {};

navigator.dataStore['manifest'] = JSON.parse(window.atob("ewogICJuYW1lIjogIiMjI1RJVExFIyMjIiwKICAic2hvcnRfbmFtZSI6ICIjIyNTSE9SVCMjIyIsCiAgInRoZW1lX2NvbG9yIjogIiMjI1NQTEFTSCMjIyIsCiAgImJhY2tncm91bmRfY29sb3IiOiAiIyMjU1BMQVNIIyMjIiwKICAib3JpZW50YXRpb24iOiAiIyMjT1JJRU5UIyMjIiwgIAogICJkaXNwbGF5IjogIiMjI0RJU1BMQVkjIyMiLAogICJzdGFydF91cmwiOiAiIyMjU1RBUlQjIyMiLAogICJpY29ucyI6IFsKICAgIHsKICAgICAgInNyYyI6ICJpY29ucy9pY29uLTcyeDcyLnBuZyIsCiAgICAgICJzaXplcyI6ICI3Mng3MiIsCiAgICAgICJ0eXBlIjogImltYWdlL3BuZyIKICAgIH0sCiAgICB7CiAgICAgICJzcmMiOiAiaWNvbnMvaWNvbi05Nng5Ni5wbmciLAogICAgICAic2l6ZXMiOiAiOTZ4OTYiLAogICAgICAidHlwZSI6ICJpbWFnZS9wbmciCiAgICB9LAogICAgewogICAgICAic3JjIjogImljb25zL2ljb24tMTI4eDEyOC5wbmciLAogICAgICAic2l6ZXMiOiAiMTI4eDEyOCIsCiAgICAgICJ0eXBlIjogImltYWdlL3BuZyIKICAgIH0sCiAgICB7CiAgICAgICJzcmMiOiAiaWNvbnMvaWNvbi0xNDR4MTQ0LnBuZyIsCiAgICAgICJzaXplcyI6ICIxNDR4MTQ0IiwKICAgICAgInR5cGUiOiAiaW1hZ2UvcG5nIgogICAgfSwKICAgIHsKICAgICAgInNyYyI6ICJpY29ucy9pY29uLTE1MngxNTIucG5nIiwKICAgICAgInNpemVzIjogIjE1MngxNTIiLAogICAgICAidHlwZSI6ICJpbWFnZS9wbmciCiAgICB9LAogICAgewogICAgICAic3JjIjogImljb25zL2ljb24tMTkyeDE5Mi5wbmciLAogICAgICAic2l6ZXMiOiAiMTkyeDE5MiIsCiAgICAgICJ0eXBlIjogImltYWdlL3BuZyIKICAgIH0sCiAgICB7CiAgICAgICJzcmMiOiAiaWNvbnMvaWNvbi0zODR4Mzg0LnBuZyIsCiAgICAgICJzaXplcyI6ICIzODR4Mzg0IiwKICAgICAgInR5cGUiOiAiaW1hZ2UvcG5nIgogICAgfSwKICAgIHsKICAgICAgInNyYyI6ICJpY29ucy9pY29uLTUxMng1MTIucG5nIiwKICAgICAgInNpemVzIjogIjUxMng1MTIiLAogICAgICAidHlwZSI6ICJpbWFnZS9wbmciCiAgICB9CiAgXQp9"));


// Project Shader Store
// Project Shader Chunks
