window.BabylonToolkitLicense = "I-ABCDEF12345";

// Xbox Project Shim Services
var EnableXboxLiveServices = true;

// babylon.toolkit.js
var BABYLON;!function(e){var t=function(){function e(e){this.motion=e.motion,this.posX=e.posX||0,this.posY=e.posY,this.weight=e.weight||0}return e.GetIdleBlendTree=function(e){for(var t=0,r=e;t<r.length;t++){var i=r[t];if(0===i.posX&&0===i.posY)return i}return null},e.GetDefaultIdleBlendTree=function(){return e.DefaultIdleBlendTree},e.DefaultIdleBlendTree=new e({motion:"Idle",posX:0,posY:0}),e}();e.BlendTreeValue=t;var r=function(){function t(){}return t.ZCross=function(e,t){return e.x*t.y-t.x*e.y},t.ClampValue=function(e,t,r){return e<=t?t:e>=r?r:e},t.ClampVector=function(r,i,s){var o=e.Vector3.Zero();return t.ClampVectorToRef(r,i,s,o),o},t.ClampVectorToRef=function(e,r,i,s){null!=s&&(s.x=t.ClampValue(e.x,r,i),s.y=t.ClampValue(e.y,r,i),s.z=t.ClampValue(e.z,r,i))},t.GetSignedAngle=function(e,t){return Math.atan2(e.x*t.y-e.y*t.x,e.x*t.x+e.y*t.y)},t.GetBarycentricVector=function(r,i,s,o){var n=e.Vector3.Zero();return t.GetBarycentricVectorToRef(r,i,s,o,n),n},t.GetBarycentricVectorToRef=function(e,r,i,s,o){t.TempVector2_AB.set(0,0),t.TempVector2_AB.set(0,0),t.TempVector2_AB.set(0,0),i.subtractToRef(r,t.TempVector2_AB),s.subtractToRef(r,t.TempVector2_AC),e.subtractToRef(r,t.TempVector2_AP);var n=1/t.ZCross(t.TempVector2_AB,t.TempVector2_AC),a=n*t.ZCross(t.TempVector2_AB,t.TempVector2_AP),l=n*t.ZCross(t.TempVector2_AP,t.TempVector2_AC),h=1-a-l;null!=o&&(o.x=h,o.y=a,o.z=l)},t.GetLinearInterpolation=function(e,t,r,i,s){return t+(s-e)*((i-t)/(r-e))},t.TempVector2_AB=new e.Vector2(0,0),t.TempVector2_AC=new e.Vector2(0,0),t.TempVector2_AP=new e.Vector2(0,0),t}();e.BlendTreeUtils=r;var i=function(){function i(){}return i.Calculate1DSimpleBlend=function(e,t){var s=t[0],o=t[t.length-1];if(e<=s.posY)s.weight=1;else if(e>=o.posY)o.weight=1;else{var n=i.GetRightNeighbourBlendTreeIndex(e,t),a=t[n-1],l=t[n],h=r.GetLinearInterpolation(a.posY,1,l.posY,0,e);a.weight=h,l.weight=1-a.weight}},i.Calculate2DSimpleDirectional=function(e,s,o){i.TempVector2_IP.set(e,s),i.TempVector2_TA.set(0,0),i.TempVector2_TB.set(0,0),i.TempVector2_TC.set(0,0),i.TempVector3_BARY.set(0,0,0);var n=!0,a=t.GetIdleBlendTree(o);if(a){var l=o.indexOf(a);o.splice(l,1)}else n=!1,a=t.GetDefaultIdleBlendTree();o.sort(function(e,t){return Math.atan2(e.posY,e.posX)-Math.atan2(t.posY,t.posX)}),o.unshift(a);for(var h=0,c=2;c<o.length;++c)i.TempVector2_TB.set(o[c-1].posX,o[c-1].posY),i.TempVector2_TC.set(o[c].posX,o[c].posY),r.GetBarycentricVectorToRef(i.TempVector2_IP,i.TempVector2_TA,i.TempVector2_TB,i.TempVector2_TC,i.TempVector3_BARY),r.ClampVectorToRef(i.TempVector3_BARY,0,1,i.TempVector3_BARY),i.TempVector3_BARY.z>0&&i.TempVector3_BARY.y>0&&(o[0].weight+=i.TempVector3_BARY.x,o[c-1].weight+=i.TempVector3_BARY.z,o[c].weight+=i.TempVector3_BARY.y,h+=i.TempVector3_BARY.x+i.TempVector3_BARY.y+i.TempVector3_BARY.z);i.TempVector2_TB.set(o[o.length-1].posX,o[o.length-1].posY),i.TempVector2_TC.set(o[1].posX,o[1].posY),r.GetBarycentricVectorToRef(i.TempVector2_IP,i.TempVector2_TA,i.TempVector2_TB,i.TempVector2_TC,i.TempVector3_BARY),r.ClampVectorToRef(i.TempVector3_BARY,0,1,i.TempVector3_BARY),i.TempVector3_BARY.z>0&&i.TempVector3_BARY.y>0&&(o[0].weight+=i.TempVector3_BARY.x,o[o.length-1].weight+=i.TempVector3_BARY.z,o[1].weight+=i.TempVector3_BARY.y,h+=i.TempVector3_BARY.x+i.TempVector3_BARY.y+i.TempVector3_BARY.z);for(var m=0,u=o;m<u.length;m++){var p=u[m];p.weight/=h}if(!n){o.shift();for(var f=a.weight/o.length,_=0,y=o;_<y.length;_++){var p=y[_];p.weight+=f}}},i.Calculate2DFreeformDirectional=function(t,s,o){i.TempVector2_IP.set(t,s),i.TempVector2_POSI.set(0,0),i.TempVector2_POSJ.set(0,0),i.TempVector2_POSIP.set(0,0),i.TempVector2_POSIJ.set(0,0);for(var n=2,a=0,l=i.TempVector2_IP.length(),h=0;h<o.length;++h){var c=o[h];i.TempVector2_POSI.set(c.posX,c.posY);for(var m=i.TempVector2_POSI.length(),u=l-m,p=r.GetSignedAngle(i.TempVector2_POSI,i.TempVector2_IP),f=1,_=0;_<o.length;++_)if(_!==h){i.TempVector2_POSJ.set(o[_].posX,o[_].posY);var y=i.TempVector2_POSJ.length(),d=(m+y)/2,v=u/d,g=(y-m)/d,C=r.GetSignedAngle(i.TempVector2_POSI,i.TempVector2_POSJ);i.TempVector2_POSIP.set(v,p*n),i.TempVector2_POSIJ.set(g,C*n);var b=i.TempVector2_POSIJ.lengthSquared(),S=e.Vector2.Dot(i.TempVector2_POSIP,i.TempVector2_POSIJ)/b;S=1-S,S=r.ClampValue(S,0,1),f=Math.min(S,f)}c.weight=f,a+=f}for(var x=0,T=o;x<T.length;x++){var c=T[x];c.weight/=a}},i.Calculate2DFreeformCartesian=function(t,s,o){i.TempVector2_IP.set(t,s),i.TempVector2_POSI.set(0,0),i.TempVector2_POSJ.set(0,0),i.TempVector2_POSIP.set(0,0),i.TempVector2_POSIJ.set(0,0);for(var n=0,a=0;a<o.length;++a){var l=o[a];i.TempVector2_POSI.set(l.posX,l.posY),i.TempVector2_IP.subtractToRef(i.TempVector2_POSI,i.TempVector2_POSIP);for(var h=1,c=0;c<o.length;++c)if(c!==a){i.TempVector2_POSJ.set(o[c].posX,o[c].posY),i.TempVector2_POSJ.subtractToRef(i.TempVector2_POSI,i.TempVector2_POSIJ);var m=i.TempVector2_POSIJ.lengthSquared(),u=e.Vector2.Dot(i.TempVector2_POSIP,i.TempVector2_POSIJ)/m;u=1-u,u=r.ClampValue(u,0,1),h=Math.min(h,u)}l.weight=h,n+=h}for(var p=0,f=o;p<f.length;p++){var l=f[p];l.weight/=n}},i.GetRightNeighbourBlendTreeIndex=function(e,t){t.sort(function(e,t){return e.posY-t.posY});for(var r=0;r<t.length;++r)if(t[r].posY>e)return r;return-1},i.TempVector2_IP=new e.Vector2(0,0),i.TempVector2_TA=new e.Vector2(0,0),i.TempVector2_TB=new e.Vector2(0,0),i.TempVector2_TC=new e.Vector2(0,0),i.TempVector2_POSI=new e.Vector2(0,0),i.TempVector2_POSJ=new e.Vector2(0,0),i.TempVector2_POSIP=new e.Vector2(0,0),i.TempVector2_POSIJ=new e.Vector2(0,0),i.TempVector3_BARY=new e.Vector3(0,0,0),i}();e.BlendTreeSystem=i}(BABYLON||(BABYLON={}));var __extends=this&&this.__extends||function(){var e=function(t,r){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(t,r)};return function(t,r){function i(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(i.prototype=r.prototype,new i)}}(),BABYLON;!function(e){var t=function(e){function t(t,r,i){return void 0===i&&(i={}),e.call(this,t,r,i)||this}return __extends(t,e),t.prototype.start=function(){this.initAnimationState()},t.prototype.update=function(){},t.prototype.after=function(){},t.prototype.destroy=function(){},t.prototype.initAnimationState=function(){console.warn("Dump Animation State Machine: "+this.transform.name),console.log(this)},t}(e.ScriptComponent);e.AnimationState=t}(BABYLON||(BABYLON={}));var __extends=this&&this.__extends||function(){var e=function(t,r){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(t,r)};return function(t,r){function i(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(i.prototype=r.prototype,new i)}}(),BABYLON;!function(e){var t=function(t){function r(e,r,i){void 0===i&&(i={});var s=t.call(this,e,r,i)||this;return s._audio=null,s._name=null,s._file=null,s._loop=!1,s._mute=!1,s._volume=1,s._pitch=1,s._priority=128,s._panstereo=0,s._mindistance=1,s._maxdistance=50,s._rolloffmode="linear",s._rollofffactor=1,s._playonawake=!0,s._spatialblend=0,s._reverbzonemix=1,s._bypasseffects=!1,s._bypassreverbzones=!1,s._bypasslistenereffects=!1,s._name=s.getEditorProperty("name",s._name),s._file=s.getEditorProperty("file",s._file),s._loop=s.getEditorProperty("loop",s._loop),s._mute=s.getEditorProperty("mute",s._mute),s._volume=s.getEditorProperty("volume",s._volume),s._pitch=s.getEditorProperty("pitch",s._pitch),s._priority=s.getEditorProperty("priority",s._priority),s._panstereo=s.getEditorProperty("panstereo",s._panstereo),s._playonawake=s.getEditorProperty("playonawake",s._playonawake),s._mindistance=s.getEditorProperty("mindistance",s._mindistance),s._maxdistance=s.getEditorProperty("maxdistance",s._maxdistance),s._rolloffmode=s.getEditorProperty("rolloffmode",s._rolloffmode),s._rollofffactor=s.getEditorProperty("rollofffactor",s._rollofffactor),s._spatialblend=s.getEditorProperty("spatialblend",s._spatialblend),s._reverbzonemix=s.getEditorProperty("reverbzonemix",s._reverbzonemix),s._bypasseffects=s.getEditorProperty("bypasseffects",s._bypasseffects),s._bypassreverbzones=s.getEditorProperty("bypassreverbzones",s._bypassreverbzones),s._bypasslistenereffects=s.getEditorProperty("bypasslistenereffects",s._bypasslistenereffects),s}return __extends(r,t),r.prototype.getSoundClip=function(){return this._audio},r.prototype.start=function(){this.initAudioSource()},r.prototype.destroy=function(){this.destroyAudioSource()},r.prototype.initAudioSource=function(){var t=this;if(null!=this._name&&""!==this._name||(this._name="Unknown"),null!=this._file&&""!==this._file){var r=e.SceneManager.GetRootUrl(this.scene),i=this._spatialblend>=.1,s="logarithmic"===this._rolloffmode?"exponential":"linear";this._audio=new e.Sound(this._name,r+this._file,this.scene,function(){t._audio.setVolume(t._mute===!0?0:t._volume),t._audio.setPlaybackRate(t._pitch)},{loop:this._loop,autoplay:this._playonawake,refDistance:this._mindistance,maxDistance:this._maxdistance,rolloffFactor:this._rollofffactor,spatialSound:i,distanceModel:s}),this._audio.setPosition(this.transform.position.clone()),i===!0&&this._audio.attachToMesh(this.transform)}},r.prototype.destroyAudioSource=function(){null!=this._audio&&(this._audio.dispose(),this._audio=null)},r}(e.ScriptComponent);e.AudioSource=t}(BABYLON||(BABYLON={}));var __extends=this&&this.__extends||function(){var e=function(t,r){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(t,r)};return function(t,r){function i(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(i.prototype=r.prototype,new i)}}(),BABYLON;!function(e){var t=function(t){function r(r,i,s){void 0===s&&(s={});var o=t.call(this,r,i,s)||this;return o.cameraType=0,o.mainCamera=!1,o.virtualReality=null,o.multiPlayerSetup=null,o.m_cameraRig=null,o.mainCamera="MainCamera"===o.getTransformTag(),o.cameraType=o.getEditorProperty("mainCameraType",o.cameraType),o.virtualReality=o.getEditorProperty("webVirtualReality",o.virtualReality),o.multiPlayerSetup=o.getEditorProperty("multiPlayerSetup",o.multiPlayerSetup),null!=o.multiPlayerSetup&&(e.UniversalCameraSystem.startupMode=o.multiPlayerSetup.playerStartupMode,e.UniversalCameraSystem.stereoCameras=o.multiPlayerSetup.stereoSideBySide),o}return __extends(r,t),r.prototype.isMainCamera=function(){return this.mainCamera},r.prototype.getCameraType=function(){return this.cameraType},r.prototype.start=function(){this.initCameraSystemState()},r.prototype.update=function(){this.updateCameraSystemState()},r.prototype.destroy=function(){this.destroyCameraSystemState()},r.prototype.initCameraSystemState=function(){if(e.Utilities.ValidateTransformQuaternion(this.transform),this.m_cameraRig=this.getCameraRig(),null!=this.m_cameraRig)if(0===this.cameraType)null==e.UniversalCameraSystem.PlayerOneCamera&&(e.UniversalCameraSystem.PlayerOneCamera=this.m_cameraRig);else if(1===this.cameraType){if(null!=this.virtualReality&&this.virtualReality.experienceHelper===!0){var t=!1,r=null;if(this.virtualReality.useCustomButton===!0&&null!=this.virtualReality.buttonElementID&&""!==this.virtualReality.buttonElementID){var i=document.getElementById(this.virtualReality.buttonElementID);null!=i?(t=!0,r=i):e.Tools.Warn("Babylon.js failed to locate webvr button element id: "+this.virtualReality.buttonElementID)}var s=null,o=null;null!=this.virtualReality.floorMeshesTags&&""!==this.virtualReality.floorMeshesTags||(this.virtualReality.floorMeshesTags="Navigation"),this.virtualReality.enableTeleportation===!0&&(o=this.scene.getMeshesByTags(this.virtualReality.floorMeshesTags)),s=this.virtualReality.enableTeleportation===!0&&null!=o&&o.length>0?{createDeviceOrientationCamera:1===this.virtualReality.defaultCamera,createFallbackVRDeviceOrientationFreeCamera:this.virtualReality.fallbackCamera,laserToggle:this.virtualReality.displayLaserBeam,useCustomVRButton:t,customVRButton:r,rayLength:this.virtualReality.rayCastLength,defaultHeight:this.virtualReality.defaultHeight,positionScale:this.virtualReality.positionScale,floorMeshes:o}:{createDeviceOrientationCamera:1===this.virtualReality.defaultCamera,createFallbackVRDeviceOrientationFreeCamera:this.virtualReality.fallbackCamera,laserToggle:this.virtualReality.displayLaserBeam,useCustomVRButton:t,customVRButton:r,rayLength:this.virtualReality.rayCastLength,defaultHeight:this.virtualReality.defaultHeight,positionScale:this.virtualReality.positionScale},e.UniversalCameraSystem.DefaultControllers=!0;var n=this.scene.createDefaultVRExperience(s);null!=n&&(n.displayGaze=this.virtualReality.displayGazeIcon,this.virtualReality.enableInteractions===!0&&n.enableInteractions(),n.onControllerMeshLoadedObservable.add(function(t,r){"left"===t.hand?e.UniversalCameraSystem.LeftControllerStick=t:"right"===t.hand&&(e.UniversalCameraSystem.RightControllerStick=t)})),e.UniversalCameraSystem.VrCameraHelper=n}}else if(2===this.cameraType){var a=this.m_cameraRig.name;if(null==e.UniversalCameraSystem.PlayerOneCamera){var l=a+".1",h=this.m_cameraRig.clone(l);h.name=l,h.parent=null,h.position=this.transform.position.clone(),h.rotationQuaternion=this.transform.rotationQuaternion.clone(),h.viewport=new e.Viewport(0,0,0,0),h.setEnabled(!1),e.UniversalCameraSystem.PlayerOneCamera=h}if(null==e.UniversalCameraSystem.PlayerTwoCamera){var c=a+".2",m=this.m_cameraRig.clone(c);m.name=c,m.parent=null,m.position=this.transform.position.clone(),m.rotationQuaternion=this.transform.rotationQuaternion.clone(),m.viewport=new e.Viewport(0,0,0,0),m.setEnabled(!1),e.UniversalCameraSystem.PlayerTwoCamera=m}if(null==e.UniversalCameraSystem.PlayerThreeCamera){var u=a+".3",p=this.m_cameraRig.clone(u);p.name=u,p.parent=null,p.position=this.transform.position.clone(),p.rotationQuaternion=this.transform.rotationQuaternion.clone(),p.viewport=new e.Viewport(0,0,0,0),p.setEnabled(!1),e.UniversalCameraSystem.PlayerThreeCamera=p}if(null==e.UniversalCameraSystem.PlayerFourCamera){var f=a+".4",_=this.m_cameraRig.clone(f);_.name=f,_.parent=null,_.position=this.transform.position.clone(),_.rotationQuaternion=this.transform.rotationQuaternion.clone(),_.viewport=new e.Viewport(0,0,0,0),_.setEnabled(!1),e.UniversalCameraSystem.PlayerFourCamera=_}e.UniversalCameraSystem.multiPlayerView=!0,e.UniversalCameraSystem.SetMultiPlayerViewLayout(this.scene,e.UniversalCameraSystem.startupMode)}},r.prototype.updateCameraSystemState=function(){null!=this.m_cameraRig&&(0===this.cameraType||1===this.cameraType||2===this.cameraType)},r.prototype.destroyCameraSystemState=function(){this.virtualReality=null},r.GetPlayerCamera=function(t){return e.UniversalCameraSystem.IsMultiPlayerView()?t===e.PlayerNumber.One?e.UniversalCameraSystem.PlayerOneCamera:t===e.PlayerNumber.Two?e.UniversalCameraSystem.PlayerTwoCamera:t===e.PlayerNumber.Three?e.UniversalCameraSystem.PlayerThreeCamera:t===e.PlayerNumber.Four?e.UniversalCameraSystem.PlayerFourCamera:null:t===e.PlayerNumber.One?null!=e.UniversalCameraSystem.WebVR?e.UniversalCameraSystem.WebVR.currentVRCamera:e.UniversalCameraSystem.PlayerOneCamera:(e.Tools.Warn("Babylon.js multi player camera not available for player: "+t),null)},Object.defineProperty(r,"WebVR",{get:function(){return e.UniversalCameraSystem.VrCameraHelper},enumerable:!0,configurable:!0}),r.GetWebVRLeftController=function(){return e.UniversalCameraSystem.LeftControllerStick},r.GetWebVRRightController=function(){return e.UniversalCameraSystem.RightControllerStick},r.GetWebVRLeftControllerPrefab=function(){return e.UniversalCameraSystem.LeftControllerPrefab},r.GetWebVRRightControllerPrefab=function(){return e.UniversalCameraSystem.RightControllerPrefab},r.ShowWebVRDefaultControllers=function(t,r){void 0===t&&(t=null),void 0===r&&(r=null),null!=e.UniversalCameraSystem.LeftControllerStick&&(e.UniversalCameraSystem.LeftControllerStick.mesh.setEnabled(!1),e.UniversalCameraSystem.LeftControllerStick.attachToMesh(e.UniversalCameraSystem.LeftControllerStick.defaultModel),e.UniversalCameraSystem.LeftControllerStick.mesh.setEnabled(!0),e.UniversalCameraSystem.DefaultControllers=!0),null!=e.UniversalCameraSystem.RightControllerStick&&(e.UniversalCameraSystem.RightControllerStick.mesh.setEnabled(!1),e.UniversalCameraSystem.RightControllerStick.attachToMesh(e.UniversalCameraSystem.RightControllerStick.defaultModel),e.UniversalCameraSystem.RightControllerStick.mesh.setEnabled(!0),e.UniversalCameraSystem.DefaultControllers=!0),null!=e.UniversalCameraSystem.WebVR&&(null!=t&&(e.UniversalCameraSystem.WebVR.displayGaze=t),null!=r&&(e.UniversalCameraSystem.WebVR.displayLaserPointer=r))},r.ShowWebVRCustomControllers=function(t,r){void 0===t&&(t=null),void 0===r&&(r=null),null!=e.UniversalCameraSystem.LeftControllerStick&&(e.UniversalCameraSystem.LeftControllerStick.mesh.setEnabled(!1),e.UniversalCameraSystem.LeftControllerStick.attachToMesh(e.UniversalCameraSystem.LeftControllerPrefab),e.UniversalCameraSystem.LeftControllerStick.mesh.setEnabled(!0),e.UniversalCameraSystem.DefaultControllers=!1),null!=e.UniversalCameraSystem.RightControllerStick&&(e.UniversalCameraSystem.RightControllerStick.mesh.setEnabled(!1),e.UniversalCameraSystem.RightControllerStick.attachToMesh(e.UniversalCameraSystem.RightControllerPrefab),e.UniversalCameraSystem.RightControllerStick.mesh.setEnabled(!0),e.UniversalCameraSystem.DefaultControllers=!1),null!=e.UniversalCameraSystem.WebVR&&(null!=t&&(e.UniversalCameraSystem.WebVR.displayGaze=t),null!=r&&(e.UniversalCameraSystem.WebVR.displayLaserPointer=r))},r.IsStereoCameras=function(){return e.UniversalCameraSystem.stereoCameras},r.IsMultiPlayerView=function(){return e.UniversalCameraSystem.multiPlayerView},r.GetMultiPlayerCount=function(){return e.UniversalCameraSystem.multiPlayerCount},r.ActivateMultiPlayerCameras=function(t){var r=!1;return null!=e.UniversalCameraSystem.multiPlayerCameras&&e.UniversalCameraSystem.multiPlayerCameras.length>0&&(t.activeCameras=e.UniversalCameraSystem.multiPlayerCameras,r=!0),r},r.DisposeMultiPlayerCameras=function(){null!=e.UniversalCameraSystem.PlayerOneCamera&&(e.UniversalCameraSystem.PlayerOneCamera.dispose(),e.UniversalCameraSystem.PlayerOneCamera=null),null!=e.UniversalCameraSystem.PlayerTwoCamera&&(e.UniversalCameraSystem.PlayerTwoCamera.dispose(),e.UniversalCameraSystem.PlayerTwoCamera=null),null!=e.UniversalCameraSystem.PlayerThreeCamera&&(e.UniversalCameraSystem.PlayerThreeCamera.dispose(),e.UniversalCameraSystem.PlayerThreeCamera=null),null!=e.UniversalCameraSystem.PlayerFourCamera&&(e.UniversalCameraSystem.PlayerFourCamera.dispose(),e.UniversalCameraSystem.PlayerFourCamera=null)},r.SetMultiPlayerViewLayout=function(t,r){var i=!1,s=e.Scalar.Clamp(r,1,4);return e.UniversalCameraSystem.IsMultiPlayerView()?(null!=e.UniversalCameraSystem.PlayerOneCamera&&null!=e.UniversalCameraSystem.PlayerTwoCamera&&null!=e.UniversalCameraSystem.PlayerThreeCamera&&null!=e.UniversalCameraSystem.PlayerFourCamera?(e.UniversalCameraSystem.multiPlayerCameras=[],1===s?(e.UniversalCameraSystem.PlayerOneCamera.viewport=new e.Viewport(0,0,1,1),e.UniversalCameraSystem.PlayerTwoCamera.viewport=new e.Viewport(0,0,0,0),e.UniversalCameraSystem.PlayerTwoCamera.setEnabled(!1),e.UniversalCameraSystem.PlayerThreeCamera.viewport=new e.Viewport(0,0,0,0),e.UniversalCameraSystem.PlayerThreeCamera.setEnabled(!1),e.UniversalCameraSystem.PlayerFourCamera.viewport=new e.Viewport(0,0,0,0),e.UniversalCameraSystem.PlayerFourCamera.setEnabled(!1),e.UniversalCameraSystem.multiPlayerCameras.push(e.UniversalCameraSystem.PlayerOneCamera)):2===s?(e.UniversalCameraSystem.stereoCameras===!0?(e.UniversalCameraSystem.PlayerOneCamera.viewport=new e.Viewport(0,0,.5,1),e.UniversalCameraSystem.PlayerTwoCamera.viewport=new e.Viewport(.5,0,.5,1)):(e.UniversalCameraSystem.PlayerOneCamera.viewport=new e.Viewport(0,.5,1,.5),e.UniversalCameraSystem.PlayerTwoCamera.viewport=new e.Viewport(0,0,1,.5)),e.UniversalCameraSystem.PlayerTwoCamera.setEnabled(!0),e.UniversalCameraSystem.PlayerThreeCamera.viewport=new e.Viewport(0,0,0,0),e.UniversalCameraSystem.PlayerThreeCamera.setEnabled(!1),e.UniversalCameraSystem.PlayerFourCamera.viewport=new e.Viewport(0,0,0,0),e.UniversalCameraSystem.PlayerFourCamera.setEnabled(!1),e.UniversalCameraSystem.multiPlayerCameras.push(e.UniversalCameraSystem.PlayerOneCamera),e.UniversalCameraSystem.multiPlayerCameras.push(e.UniversalCameraSystem.PlayerTwoCamera)):3===s?(e.UniversalCameraSystem.PlayerOneCamera.viewport=new e.Viewport(0,0,.5,1),e.UniversalCameraSystem.PlayerTwoCamera.viewport=new e.Viewport(.5,.5,.5,.5),e.UniversalCameraSystem.PlayerTwoCamera.setEnabled(!0),e.UniversalCameraSystem.PlayerThreeCamera.viewport=new e.Viewport(.5,0,.5,.5),e.UniversalCameraSystem.PlayerThreeCamera.setEnabled(!0),e.UniversalCameraSystem.PlayerFourCamera.viewport=new e.Viewport(0,0,0,0),e.UniversalCameraSystem.PlayerFourCamera.setEnabled(!1),e.UniversalCameraSystem.multiPlayerCameras.push(e.UniversalCameraSystem.PlayerOneCamera),e.UniversalCameraSystem.multiPlayerCameras.push(e.UniversalCameraSystem.PlayerTwoCamera),e.UniversalCameraSystem.multiPlayerCameras.push(e.UniversalCameraSystem.PlayerThreeCamera)):4===s?(e.UniversalCameraSystem.PlayerOneCamera.viewport=new e.Viewport(0,.5,.5,.5),e.UniversalCameraSystem.PlayerTwoCamera.viewport=new e.Viewport(0,0,.5,.5),e.UniversalCameraSystem.PlayerTwoCamera.setEnabled(!0),e.UniversalCameraSystem.PlayerThreeCamera.viewport=new e.Viewport(.5,.5,.5,.5),e.UniversalCameraSystem.PlayerThreeCamera.setEnabled(!0),e.UniversalCameraSystem.PlayerFourCamera.viewport=new e.Viewport(.5,0,.5,.5),e.UniversalCameraSystem.PlayerFourCamera.setEnabled(!0),e.UniversalCameraSystem.multiPlayerCameras.push(e.UniversalCameraSystem.PlayerOneCamera),e.UniversalCameraSystem.multiPlayerCameras.push(e.UniversalCameraSystem.PlayerTwoCamera),e.UniversalCameraSystem.multiPlayerCameras.push(e.UniversalCameraSystem.PlayerThreeCamera),e.UniversalCameraSystem.multiPlayerCameras.push(e.UniversalCameraSystem.PlayerFourCamera)):e.Tools.Warn("Babylon.js camera rig invalid player count specified: "+s)):e.Tools.Warn("Babylon.js camera rig failed to initialize multi player cameras"),e.UniversalCameraSystem.multiPlayerCount=s,i=e.UniversalCameraSystem.ActivateMultiPlayerCameras(t),i===!1&&e.Tools.Warn("Babylon.js camera rig failed to initialize multi player views")):e.Tools.Warn("Babylon.js camera rig multi player view option not enabled"),i},r.VrCameraHelper=null,r.DefaultControllers=!0,r.LeftControllerStick=null,r.RightControllerStick=null,r.LeftControllerPrefab=null,r.RightControllerPrefab=null,r.PlayerOneCamera=null,r.PlayerTwoCamera=null,r.PlayerThreeCamera=null,r.PlayerFourCamera=null,r.multiPlayerView=!1,r.multiPlayerCount=1,r.multiPlayerCameras=null,r.stereoCameras=!0,r.startupMode=1,r}(e.ScriptComponent);e.UniversalCameraSystem=t}(BABYLON||(BABYLON={}));var __extends=this&&this.__extends||function(){var e=function(t,r){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(t,r)};return function(t,r){function i(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(i.prototype=r.prototype,new i)}}(),BABYLON;!function(e){var t=function(t){function r(r,i,s){void 0===s&&(s={});var o=t.call(this,r,i,s)||this;return o._abstractMesh=null,o._avatarRadius=.5,o._avatarHeight=2,o._skinWidth=.08,o._stepOffset=.3,o._slopeLimit=45,o._minMoveDistance=.001,o._isPhysicsReady=!1,o._maxCollisions=4,o._useGhostSweepTest=!1,o._tmpAmmoQuaternion=null,o._tmpOriginQuaternion=null,o._tmpRotateQuaternion=null,o._tmpBabylonQuaternion=null,o._tmpBabylonEulerVector=null,o._tmpCollisionContacts=null,o.m_character=null,o.m_ghostShape=null,o.m_ghostObject=null,o.m_ghostCollision=null,o.m_ghostTransform=null,o.m_ghostPosition=null,o.m_ghostRotation=null,o.m_startPosition=null,o.m_startRotation=null,o.m_startTransform=null,o.m_walkDirection=null,o.m_warpPosition=null,o.m_turningRate=0,o.m_moveDeltaX=0,o.m_moveDeltaZ=0,o.m_physicsEngine=null,o._onCollisionEnterObservable=new e.Observable,o._onCollisionStayObservable=new e.Observable,o._onCollisionExitObservable=new e.Observable,o._abstractMesh=o.getAbstractMesh(),o._avatarRadius=o.getEditorProperty("avatarRadius",o._avatarRadius),o._avatarHeight=o.getEditorProperty("avatarHeight",o._avatarHeight),o._skinWidth=o.getEditorProperty("skinWidth",o._skinWidth),o._slopeLimit=o.getEditorProperty("slopeLimit",o._slopeLimit),o._stepOffset=o.getEditorProperty("stepOffset",o._stepOffset),o._minMoveDistance=o.getEditorProperty("minMoveDistance",o._minMoveDistance),o._useGhostSweepTest=o.getEditorProperty("useGhostSweepTest",o._useGhostSweepTest),o._tmpAmmoQuaternion=new Ammo.btQuaternion(0,0,0,1),o._tmpOriginQuaternion=new Ammo.btQuaternion(0,0,0,1),o._tmpRotateQuaternion=new Ammo.btQuaternion(0,0,0,1),o._tmpBabylonQuaternion=new e.Quaternion(0,0,0,1),o._tmpBabylonEulerVector=new e.Vector3(0,0,0),o._tmpBabylonQuaternion=new e.Quaternion(0,0,0,1),o.m_warpPosition=new Ammo.btVector3(0,0,0),o.m_walkDirection=new Ammo.btVector3(0,0,0),o.m_physicsEngine=e.SceneManager.GetPhysicsEngine(o.scene),o.setMaxNotifications(o._maxCollisions),o}return __extends(r,t),r.prototype.getAvatarRadius=function(){return this._avatarRadius},r.prototype.getAvatarHeight=function(){return this._avatarHeight},r.prototype.getSkinWidth=function(){return this._skinWidth},r.prototype.getStepOffset=function(){return this._stepOffset},r.prototype.getUseSweepTest=function(){return this._useGhostSweepTest},r.prototype.getMinMoveDistance=function(){return this._minMoveDistance},r.prototype.setMinMoveDistance=function(e){this._minMoveDistance=e},r.prototype.getVerticalVelocity=function(){return null!=this.m_character&&this.m_character.getVerticalVelocity?this.m_character.getVerticalVelocity():0},r.prototype.setMaxJumpHeight=function(e){null!=this.m_character&&this.m_character.setMaxJumpHeight(e)},r.prototype.setFallingSpeed=function(e){null!=this.m_character&&this.m_character.setFallSpeed(e)},r.prototype.getSlopeLimit=function(){return null!=this.m_character?this.m_character.getMaxSlope():0},r.prototype.setSlopeLimit=function(e){null!=this.m_character&&this.m_character.setMaxSlope(e)},r.prototype.setUpAxis=function(e){null!=this.m_character&&this.m_character.setUpAxis(e)},r.prototype.getGravity=function(){return null!=this.m_character?this.m_character.getGravity():0},r.prototype.setGravity=function(e){null!=this.m_character&&this.m_character.setGravity(e)},r.prototype.isGrounded=function(){return null!=this.m_character&&this.m_character.onGround()},r.prototype.isReady=function(){return null!=this.m_character},r.prototype.canJump=function(){return null!=this.m_character&&this.m_character.canJump()},r.prototype.internalWarp=function(e){null!=this.m_character&&this.m_character.warp(e)},r.prototype.internalJump=function(){null!=this.m_character&&this.m_character.jump()},r.prototype.internalSetJumpSpeed=function(e){null!=this.m_character&&this.m_character.setJumpSpeed(e)},r.prototype.internalSetWalkDirection=function(e){null!=this.m_character&&this.m_character.setWalkDirection(e)},r.prototype.internalSetVelocityForTimeInterval=function(e,t){null!=this.m_character&&this.m_character.setVelocityForTimeInterval(e,t)},r.prototype.start=function(){this.initMovementState()},r.prototype.update=function(){this.updateMovementState()},r.prototype.after=function(){this.afterMovementState()},r.prototype.destroy=function(){this.destroyMovementState()},r.prototype.initMovementState=function(){e.Utilities.ValidateTransformQuaternion(this.transform);var t=e.SceneManager.GetPhysicsWorld(this.scene);null!=t?(this.m_startPosition=new Ammo.btVector3(this.transform.position.x,this.transform.position.y,this.transform.position.z),this.m_startRotation=new Ammo.btQuaternion(this.transform.rotationQuaternion.x,this.transform.rotationQuaternion.y,this.transform.rotationQuaternion.z,this.transform.rotationQuaternion.w),this.m_startTransform=new Ammo.btTransform,this.m_startTransform.setIdentity(),this.m_startTransform.setOrigin(this.m_startPosition),this.m_startTransform.setRotation(this.m_startRotation),this.m_ghostShape=new Ammo.btCapsuleShape(this._avatarRadius,.5*this._avatarHeight),this.m_ghostShape.setMargin(this._skinWidth),this.m_ghostObject=new Ammo.btPairCachingGhostObject,this.m_ghostObject.setWorldTransform(this.m_startTransform),this.m_ghostObject.setCollisionShape(this.m_ghostShape),this.m_ghostObject.setCollisionFlags(e.CollisionFlags.CF_CHARACTER_OBJECT),this.m_ghostCollision=Ammo.castObject(this.m_ghostObject,Ammo.btCollisionObject),this.m_ghostCollision.setContactProcessingThreshold(0),this.m_ghostCollision.entity=this._abstractMesh,this.m_character=new Ammo.btKinematicCharacterController(this.m_ghostObject,this.m_ghostShape,this._stepOffset),this.m_character.setUseGhostSweepTest(this._useGhostSweepTest),this.m_character.setUpInterpolate(!0),this.m_character.setMaxSlope(this._slopeLimit*e.System.Deg2Rad),this.m_character.setGravity(e.System.Gravity3G),t.addCollisionObject(this.m_ghostObject,e.CollisionFilters.CharacterFilter,e.CollisionFilters.StaticFilter|e.CollisionFilters.DefaultFilter|e.CollisionFilters.CharacterFilter),t.addAction(this.m_character)):e.Tools.Warn("Null physics world detected. Failed to create character controller: "+this.transform.name),this._isPhysicsReady=null!=this.m_physicsEngine&&null!=this._tmpCollisionContacts&&null!=this.m_ghostObject&&null!=this._abstractMesh,this.updateMovementState(),this.afterMovementState()},r.prototype.syncMovementState=function(){this._isPhysicsReady===!0&&(this.m_ghostTransform=this.m_ghostObject.getWorldTransform(),null!=this.m_ghostTransform?(this.m_ghostPosition=this.m_ghostTransform.getOrigin(),this.m_ghostRotation=this.m_ghostTransform.getRotation()):(this.m_ghostPosition=null,this.m_ghostRotation=null))},r.prototype.updateMovementState=function(){this.syncMovementState(),this._isPhysicsReady===!0&&(0!==this.m_turningRate&&null!=this.m_ghostTransform&&null!=this.m_ghostRotation&&(this._tmpBabylonQuaternion.set(this.m_ghostRotation.x(),this.m_ghostRotation.y(),this.m_ghostRotation.z(),this.m_ghostRotation.w()),e.Utilities.ToEulerToRef(this._tmpBabylonQuaternion,this._tmpBabylonEulerVector),this._tmpBabylonEulerVector.y+=this.m_turningRate,e.Utilities.FromEulerToRef(this._tmpBabylonEulerVector.x,this._tmpBabylonEulerVector.y,this._tmpBabylonEulerVector.z,this._tmpBabylonQuaternion),this._tmpAmmoQuaternion.setValue(this._tmpBabylonQuaternion.x,this._tmpBabylonQuaternion.y,this._tmpBabylonQuaternion.z,this._tmpBabylonQuaternion.w),this.m_ghostTransform.setRotation(this._tmpAmmoQuaternion),this.m_ghostObject.setWorldTransform(this.m_ghostTransform)),null!=this.m_walkDirection&&this.internalSetWalkDirection(this.m_walkDirection))},r.prototype.afterMovementState=function(){this.syncMovementState(),this._isPhysicsReady===!0&&(null!=this.m_ghostPosition&&this.transform.position.set(this.m_ghostPosition.x(),this.m_ghostPosition.y(),this.m_ghostPosition.z()),null!=this.m_ghostRotation&&this.transform.rotationQuaternion.set(this.m_ghostRotation.x(),this.m_ghostRotation.y(),this.m_ghostRotation.z(),this.m_ghostRotation.w())),this.parseGhostCollisionContacts()},r.prototype.parseGhostCollisionContacts=function(){if(this._isPhysicsReady===!0){var e=this._onCollisionEnterObservable.hasObservers(),t=this._onCollisionStayObservable.hasObservers(),r=this._onCollisionExitObservable.hasObservers();if(e||t||r){var i=0;for(i=0;i<this._tmpCollisionContacts.length;i++)this._tmpCollisionContacts[i].reset=!0;var s=this.m_ghostObject.getNumOverlappingObjects();if(s>this._maxCollisions&&(s=this._maxCollisions),s>0)for(i=0;i<s;i++){var o=this.m_ghostObject.getOverlappingObject(i);if(null!=o){var n=Ammo.castObject(o,Ammo.btCollisionObject);if(null!=n&&null!=n.entity&&n.isActive()){var a=-1,l=n.entity;for(i=0;i<this._tmpCollisionContacts.length;i++){var h=this._tmpCollisionContacts[i];
if(null!=h.mesh&&h.mesh===l){h.state=1,h.reset=!1,a=i;break}}if(a===-1)for(i=0;i<this._tmpCollisionContacts.length;i++){var c=this._tmpCollisionContacts[i];if(null==c.mesh){c.mesh=l,c.state=0,c.reset=!1;break}}}}}for(i=0;i<this._tmpCollisionContacts.length;i++){var m=this._tmpCollisionContacts[i];m.reset===!0?(r&&null!=m.mesh&&this._onCollisionExitObservable.notifyObservers(m.mesh),m.mesh=null,m.state=0,m.reset=!1):0===m.state?e&&null!=m.mesh&&this._onCollisionEnterObservable.notifyObservers(m.mesh):t&&null!=m.mesh&&this._onCollisionStayObservable.notifyObservers(m.mesh)}}}},r.prototype.destroyMovementState=function(){this.m_physicsEngine=null,null!=this.m_character&&(Ammo.destroy(this.m_character),this.m_character=null),null!=this.m_ghostObject&&(Ammo.destroy(this.m_ghostObject),this.m_ghostObject=null),null!=this.m_ghostShape&&(Ammo.destroy(this.m_ghostShape),this.m_ghostShape=null),null!=this.m_ghostCollision&&(Ammo.destroy(this.m_ghostCollision),this.m_ghostCollision=null),null!=this.m_ghostPosition&&(Ammo.destroy(this.m_ghostPosition),this.m_ghostPosition=null),null!=this.m_ghostRotation&&(Ammo.destroy(this.m_ghostRotation),this.m_ghostRotation=null),null!=this.m_ghostTransform&&(Ammo.destroy(this.m_ghostTransform),this.m_ghostTransform=null),null!=this.m_startPosition&&(Ammo.destroy(this.m_startPosition),this.m_startPosition=null),null!=this.m_startRotation&&(Ammo.destroy(this.m_startRotation),this.m_startRotation=null),null!=this.m_startTransform&&(Ammo.destroy(this.m_startTransform),this.m_startTransform=null),null!=this.m_warpPosition&&(Ammo.destroy(this.m_warpPosition),this.m_warpPosition=null),null!=this.m_walkDirection&&(Ammo.destroy(this.m_walkDirection),this.m_walkDirection=null),null!=this._tmpAmmoQuaternion&&(Ammo.destroy(this._tmpAmmoQuaternion),this._tmpAmmoQuaternion=null),null!=this._tmpOriginQuaternion&&(Ammo.destroy(this._tmpOriginQuaternion),this._tmpOriginQuaternion=null),null!=this._tmpRotateQuaternion&&(Ammo.destroy(this._tmpRotateQuaternion),this._tmpRotateQuaternion=null),this._onCollisionEnterObservable.clear(),this._onCollisionEnterObservable=null,this._onCollisionStayObservable.clear(),this._onCollisionStayObservable=null,this._onCollisionExitObservable.clear(),this._onCollisionExitObservable=null,this._tmpCollisionContacts=null,this._abstractMesh=null},r.prototype.registerOnCollisionEnter=function(e){return this._onCollisionEnterObservable.add(e)},r.prototype.unregisterOnCollisionEnter=function(e){return this._onCollisionEnterObservable.remove(e)},r.prototype.registerOnCollisionStay=function(e){return this._onCollisionStayObservable.add(e)},r.prototype.unregisterOnCollisionStay=function(e){return this._onCollisionStayObservable.remove(e)},r.prototype.registerOnCollisionExit=function(e){return this._onCollisionExitObservable.add(e)},r.prototype.unregisterOnCollisionExit=function(e){return this._onCollisionExitObservable.remove(e)},r.prototype.setMaxNotifications=function(t){this._maxCollisions=t,this._tmpCollisionContacts=[];for(var r=0;r<this._maxCollisions;r++)this._tmpCollisionContacts.push(new e.CollisionContactInfo)},r.prototype.setActivationState=function(e){null!=this.m_ghostCollision&&this.m_ghostCollision.setActivationState&&this.m_ghostCollision.setActivationState(e)},r.prototype.getCollisionFilterGroup=function(){var e=-1;return null!=this.m_ghostCollision&&this.m_ghostCollision.getBroadphaseHandle&&(e=this.m_ghostCollision.getBroadphaseHandle().get_m_collisionFilterGroup()),e},r.prototype.setCollisionFilterGroup=function(e){null!=this.m_ghostCollision&&this.m_ghostCollision.getBroadphaseHandle&&this.m_ghostCollision.getBroadphaseHandle().set_m_collisionFilterGroup(e)},r.prototype.getCollisionFilterMask=function(){var e=-1;return null!=this.m_ghostCollision&&this.m_ghostCollision.getBroadphaseHandle&&(e=this.m_ghostCollision.getBroadphaseHandle().get_m_collisionFilterMask()),e},r.prototype.setCollisionFilterMask=function(e){null!=this.m_ghostCollision&&this.m_ghostCollision.getBroadphaseHandle&&this.m_ghostCollision.getBroadphaseHandle().set_m_collisionFilterMask(e)},r.prototype.getContactProcessingThreshold=function(){var e=-1;return null!=this.m_ghostCollision&&this.m_ghostCollision.getContactProcessingThreshold&&this.m_ghostCollision.getContactProcessingThreshold(),e},r.prototype.setContactProcessingThreshold=function(e){null!=this.m_ghostCollision&&this.m_ghostCollision.setContactProcessingThreshold&&this.m_ghostCollision.setContactProcessingThreshold(e)},r.prototype.setGhostWorldTransform=function(e,t){null!=this.m_ghostObject&&null!=this.m_ghostTransform&&(null!=this.m_ghostPosition&&null!=e&&(this.m_ghostPosition.setValue(e.x,e.y,e.z),this.m_ghostTransform.setOrigin(this.m_ghostPosition)),null!=this.m_ghostRotation&&null!=t&&(this.m_ghostRotation.setValue(t.x,t.y,t.z,t.w),this.m_ghostTransform.setRotation(this.m_ghostRotation)),this.m_ghostObject.setWorldTransform(this.m_ghostTransform))},r.prototype.move=function(e){null!=e&&(this.m_moveDeltaX=e.x,this.m_moveDeltaZ=e.z,Math.abs(e.x)<this._minMoveDistance&&(e.x>0?this.m_moveDeltaX=this._minMoveDistance:e.x<0&&(this.m_moveDeltaX=-this._minMoveDistance)),Math.abs(e.z)<this._minMoveDistance&&(e.z>0?this.m_moveDeltaZ=this._minMoveDistance:e.z<0&&(this.m_moveDeltaZ=-this._minMoveDistance)),null!=this.m_walkDirection&&this.m_walkDirection.setValue(this.m_moveDeltaX,0,this.m_moveDeltaZ))},r.prototype.turn=function(e){this.m_turningRate=e},r.prototype.jump=function(e){this.internalSetJumpSpeed(e),this.internalJump()},r.prototype.warp=function(e){null!=this.m_warpPosition&&(this.m_warpPosition.setValue(e.x,e.y,e.z),this.internalWarp(this.m_warpPosition))},r}(e.ScriptComponent);e.CharacterController=t}(BABYLON||(BABYLON={}));var __extends=this&&this.__extends||function(){var e=function(t,r){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(t,r)};return function(t,r){function i(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(i.prototype=r.prototype,new i)}}(),BABYLON;!function(e){var t=function(t){function r(e,r,i){return void 0===i&&(i={}),t.call(this,e,r,i)||this}return __extends(r,t),Object.defineProperty(r.prototype,"info",{get:function(){return this._info},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"hasAgentInfo",{get:function(){return null!=this.info},enumerable:!0,configurable:!0}),r.prototype.start=function(){},r.prototype.update=function(){},r.prototype.after=function(){},r.prototype.destroy=function(){},r.prototype.setDestination=function(t){this.hasAgentInfo||e.Tools.Warn("Null navigation agent metadata. Set agent destination ignored.")},r.GetNavigationMesh=function(t){return e.SceneManager.GetAbstractMesh(t,"NavigationMesh")},r.GetNavigationZone=function(){return"scene"},r.BuildNavigationNodes=function(t,r){void 0===r&&(r=null);var i=null,s=r||e.NavigationAgent.GetNavigationMesh(t);if(null!=s){i=new Navigation;var o=i.buildNodes(s);null!=o?i.setZoneData(e.NavigationAgent.GetNavigationZone(),o):e.Tools.Warn("Failed to build navigation zone nodes")}else e.Tools.Warn("Failed to locate scene navigation mesh");return i},r.FindNavigationPath=function(t,r,i){var s=e.NavigationAgent.GetNavigationZone(),o=t.getGroup(s,r);return t.findPath(r,i,s,o)},r}(e.ScriptComponent);e.NavigationAgent=t}(BABYLON||(BABYLON={}));var __extends=this&&this.__extends||function(){var e=function(t,r){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(t,r)};return function(t,r){function i(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(i.prototype=r.prototype,new i)}}(),BABYLON;!function(e){var t=function(e){function t(t,r,i){return void 0===i&&(i={}),e.call(this,t,r,i)||this}return __extends(t,e),t.prototype.start=function(){},t.prototype.update=function(){},t.prototype.after=function(){},t.prototype.destroy=function(){},t}(e.ScriptComponent);e.NetworkSystem=t}(BABYLON||(BABYLON={}));var __extends=this&&this.__extends||function(){var e=function(t,r){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(t,r)};return function(t,r){function i(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(i.prototype=r.prototype,new i)}}(),BABYLON;!function(e){var t=function(e){function t(t,r,i){return void 0===i&&(i={}),e.call(this,t,r,i)||this}return __extends(t,e),t.prototype.start=function(){},t.prototype.update=function(){},t.prototype.after=function(){},t.prototype.destroy=function(){},t}(e.ScriptComponent);e.ShurikenParticleSystem=t}(BABYLON||(BABYLON={}));var BABYLON;!function(e){var t=function(){function t(t,r,i,s){this._rightHanded=!1,this._centerMass=new e.Vector3(0,0,0),this._chassisMesh=null,this._tempVectorPos=new e.Vector3(0,0,0),this._tempQuaternion=new e.Quaternion(0,0,0,1),this._tempVectorScale=new e.Vector3(0,0,0),this.lockedWheelIndexes=null,this.m_vehicle=null,this.m_vehicleTuning=null,this.m_vehicleRaycaster=null,this.m_vehicleColliders=null,this.m_tempTransform=null,this.m_tempPosition=null,this.m_tempRotation=null,this.m_wheelDirectionCS0=null,this.m_wheelAxleCS=null,this._tempMatrixA=e.Matrix.Zero(),this._tempMatrixB=e.Matrix.Zero(),this._tempMatrixC=e.Matrix.Zero(),this._rightHanded=i,this._chassisMesh=t,this._centerMass=s,this.m_vehicleColliders=this._chassisMesh.metadata.wheels,this.m_vehicleTuning=new Ammo.btVehicleTuning,this.m_vehicleRaycaster=new Ammo.btSmoothVehicleRaycaster(r),this.m_vehicle=new Ammo.btRaycastVehicle(this.m_vehicleTuning,this._chassisMesh.physicsImpostor.physicsBody,this.m_vehicleRaycaster),this.m_vehicle.setCoordinateSystem(0,1,2),this.m_wheelDirectionCS0=new Ammo.btVector3(0,(-1),0),this.m_wheelAxleCS=new Ammo.btVector3((-1),0,0),this.m_tempPosition=null,this.m_tempRotation=null,this.m_tempTransform=null,r.addAction(this.m_vehicle),this.setupWheelInformation()}return t.prototype.getUpAxis=function(){if(null!=this.m_vehicle)return this.m_vehicle.getUpAxis()},t.prototype.getRightAxis=function(){if(null!=this.m_vehicle)return this.m_vehicle.getRightAxis()},t.prototype.getForwardAxis=function(){if(null!=this.m_vehicle)return this.m_vehicle.getForwardAxis()},t.prototype.getForwardVector=function(){if(null!=this.m_vehicle)return this.m_vehicle.getForwardVector()},t.prototype.getNumWheels=function(){if(null!=this.m_vehicle)return this.m_vehicle.getNumWheels()},t.prototype.getWheelInfo=function(e){if(null!=this.m_vehicle)return this.m_vehicle.getWheelInfo(e)},t.prototype.resetSuspension=function(){null!=this.m_vehicle&&this.m_vehicle.resetSuspension()},t.prototype.setPitchControl=function(e){null!=this.m_vehicle&&this.m_vehicle.setPitchControl(e)},t.prototype.setEngineForce=function(e,t){null!=this.m_vehicle&&this.m_vehicle.applyEngineForce(this._rightHanded?e*-1:e,t)},t.prototype.setBrakingForce=function(e,t){null!=this.m_vehicle&&this.m_vehicle.setBrake(this._rightHanded?1*e:e,t)},t.prototype.getSteeringAngle=function(e){if(null!=this.m_vehicle)return Math.abs(this.m_vehicle.getSteeringValue(e))},t.prototype.setSteeringAngle=function(e,t){null!=this.m_vehicle&&this.m_vehicle.setSteeringValue(this._rightHanded?e*-1:e,t)},t.prototype.getWheelTransform=function(e){if(null!=this.m_vehicle)return this.m_vehicle.getWheelTransformWS(e)},t.prototype.updateWheelTransform=function(e,t){null!=this.m_vehicle&&this.m_vehicle.updateWheelTransform(e,t)},t.prototype.getUserConstraintType=function(){if(null!=this.m_vehicle)return this.m_vehicle.getUserConstraintType()},t.prototype.setUserConstraintType=function(e){null!=this.m_vehicle&&this.m_vehicle.setUserConstraintType(e)},t.prototype.setUserConstraintId=function(e){null!=this.m_vehicle&&this.m_vehicle.setUserConstraintId(e)},t.prototype.getUserConstraintId=function(){if(null!=this.m_vehicle)return this.m_vehicle.getUserConstraintId()},t.prototype.getRawCurrentSpeedKph=function(){if(null!=this.m_vehicle)return this.m_vehicle.getCurrentSpeedKmHour()},t.prototype.getRawCurrentSpeedMph=function(){if(null!=this.m_vehicle)return this.m_vehicle.getCurrentSpeedKmHour()*e.System.Kph2Mph},t.prototype.getAbsCurrentSpeedKph=function(){if(null!=this.m_vehicle)return Math.abs(this.m_vehicle.getCurrentSpeedKmHour())},t.prototype.getAbsCurrentSpeedMph=function(){if(null!=this.m_vehicle)return Math.abs(this.m_vehicle.getCurrentSpeedKmHour())*e.System.Kph2Mph},t.prototype.getVehicleTuningSystem=function(){return this.m_vehicleTuning},t.prototype.getChassisWorldTransform=function(){if(null!=this.m_vehicle)return this.m_vehicle.getChassisWorldTransform()},t.prototype.dispose=function(){this.deleteWheelInformation(),null!=this.m_vehicle&&(Ammo.destroy(this.m_vehicle),this.m_vehicle=null),null!=this.m_vehicleTuning&&(Ammo.destroy(this.m_vehicleTuning),this.m_vehicleTuning=null),null!=this.m_vehicleRaycaster&&(Ammo.destroy(this.m_vehicleRaycaster),this.m_vehicleRaycaster=null),null!=this.m_wheelDirectionCS0&&(Ammo.destroy(this.m_wheelDirectionCS0),this.m_wheelDirectionCS0=null),null!=this.m_wheelAxleCS&&(Ammo.destroy(this.m_wheelAxleCS),this.m_wheelAxleCS=null),null!=this.m_tempPosition&&(Ammo.destroy(this.m_tempPosition),this.m_tempPosition=null),null!=this.m_tempRotation&&(Ammo.destroy(this.m_tempRotation),this.m_tempRotation=null),null!=this.m_tempTransform&&(Ammo.destroy(this.m_tempTransform),this.m_tempTransform=null),this.m_vehicleColliders=null},t.prototype.getCollisionFilterGroup=function(){var e=-1;return null!=this.m_vehicleRaycaster&&this.m_vehicleRaycaster.get_m_collisionFilterGroup&&(e=this.m_vehicleRaycaster.get_m_collisionFilterGroup()),e},t.prototype.setCollisionFilterGroup=function(e){null!=this.m_vehicleRaycaster&&this.m_vehicleRaycaster.set_m_collisionFilterGroup&&this.m_vehicleRaycaster.set_m_collisionFilterGroup(e)},t.prototype.getCollisionFilterMask=function(){var e=-1;return null!=this.m_vehicleRaycaster&&this.m_vehicleRaycaster.get_m_collisionFilterMask&&(e=this.m_vehicleRaycaster.get_m_collisionFilterMask()),e},t.prototype.setCollisionFilterMask=function(e){null!=this.m_vehicleRaycaster&&this.m_vehicleRaycaster.set_m_collisionFilterMask&&this.m_vehicleRaycaster.set_m_collisionFilterMask(e)},t.prototype.getInterpolateMeshNormals=function(){var e=-1;return null!=this.m_vehicleRaycaster&&this.m_vehicleRaycaster.get_m_interpolateMeshNormals&&(e=this.m_vehicleRaycaster.get_m_interpolateMeshNormals()),e},t.prototype.setInterpolateMeshNormals=function(e){null!=this.m_vehicleRaycaster&&this.m_vehicleRaycaster.set_m_interpolateMeshNormals&&this.m_vehicleRaycaster.set_m_interpolateMeshNormals(e)},t.prototype.getWheelIndexByID=function(e){var t=-1;if(null!=this.m_vehicleColliders&&this.m_vehicleColliders.length>0)for(var r=0;r<this.m_vehicleColliders.length;r++){var i=this.m_vehicleColliders[r];if(e.toLowerCase()===i.id.toLowerCase()){t=r;break}}return t},t.prototype.getWheelIndexByName=function(e){var t=-1;if(null!=this.m_vehicleColliders&&this.m_vehicleColliders.length>0)for(var r=0;r<this.m_vehicleColliders.length;r++){var i=this.m_vehicleColliders[r];if(e.toLowerCase()===i.name.toLowerCase()){t=r;break}}return t},t.prototype.getWheelColliderInfo=function(e){var t=-1;return null!=this.m_vehicleColliders&&this.m_vehicleColliders.length>0&&this.m_vehicleColliders.length>e&&(t=this.m_vehicleColliders[e]),t},t.prototype.setWheelTransformMesh=function(e,t){if(null!=t){var r=this.getWheelInfo(e);null!=r&&(r.transform=t)}},t.prototype.setupWheelInformation=function(){if(null!=this._chassisMesh&&null!=this._chassisMesh.physicsImpostor&&null!=this._chassisMesh.physicsImpostor.physicsBody&&this._chassisMesh.physicsImpostor.physicsBody.setActivationState(e.CollisionState.DISABLE_DEACTIVATION),null!=this.m_vehicle&&null!=this.m_vehicleColliders&&this.m_vehicleColliders.length>0){var t=-1;for(t=0;t<this.m_vehicleColliders.length;t++){var r=this.m_vehicleColliders[t],i=null!=r.name?r.name:"Unknown",s=null!=r.radius?r.radius:.5,o=null!=r.position&&r.position.length>=3?r.position[0]:1,n=null!=r.position&&r.position.length>=3?r.position[2]:-1,a=null!=r.suspensiondistance?r.suspensiondistance:.3,l=null!=r.suspensiontarget?r.suspensiontarget:.5,h=null!=r.forceapppointdistance?r.forceapppointdistance:0,c=null!=r.frontwheel||i.toLowerCase().indexOf("front")>=0;this.m_vehicle.addWheel(new Ammo.btVector3(o+-this._centerMass.x,a,n+-this._centerMass.z),this.m_wheelDirectionCS0,this.m_wheelAxleCS,l+h,s,this.m_vehicleTuning,c)}if(this.m_vehicle.getNumWheels()===this.m_vehicleColliders.length)for(t=0;t<this.m_vehicleColliders.length;t++){var r=this.m_vehicleColliders[t],m=6e3,u=500,p=null!=r.wheeldampingrate?.8*r.wheeldampingrate:.2,f=null!=r.forward_extremumvalue?10*r.forward_extremumvalue:10,_=null!=r.forward_stiffness?10*r.forward_stiffness:10,y=null!=r.suspensionspring?1e-4*r.suspensionspring:3.5,d=null!=r.suspensiondamper?.001*r.suspensiondamper:4.5,v=this.m_vehicle.getWheelInfo(t);null!=v&&(v.defaultFriction=f,v.set_m_frictionSlip(f),v.set_m_rollInfluence(p),v.set_m_maxSuspensionForce(m),v.set_m_maxSuspensionTravelCm(u),v.set_m_suspensionStiffness(_),v.set_m_wheelsDampingCompression(y),v.set_m_wheelsDampingRelaxation(d),v.set_m_wheelsRadiusScale&&v.set_m_wheelsRadiusScale(2))}else e.Tools.Warn("Failed to create proper number of wheels for: "+this._chassisMesh.name)}},t.prototype.updateWheelInformation=function(){var t=this.getNumWheels();if(t>0)for(var r=0;r<t;r++){var i=this.getWheelInfo(r);if(null!=i){var s=this.lockedWheelInformation(r);if(i.set_m_bIsWheelLocked&&i.set_m_bIsWheelLocked(s),this.updateWheelTransform(r,!1),this.m_tempTransform=this.getWheelTransform(r),this.m_tempPosition=this.m_tempTransform.getOrigin(),this.m_tempRotation=this.m_tempTransform.getRotation(),null!=i.transform){var o=i.transform;null!=o.parent?(this._tempMatrixA.reset(),this._tempMatrixB.reset(),this._tempMatrixC.reset(),this._tempVectorPos.set(this.m_tempPosition.x(),this.m_tempPosition.y(),this.m_tempPosition.z()),this._tempQuaternion.set(this.m_tempRotation.x(),this.m_tempRotation.y(),this.m_tempRotation.z(),this.m_tempRotation.w()),this._tempVectorScale.set(1,1,1),e.Matrix.ComposeToRef(this._tempVectorScale,this._tempQuaternion,this._tempVectorPos,this._tempMatrixA),o.parent.computeWorldMatrix(),o.parent.getWorldMatrix().invertToRef(this._tempMatrixB),this._tempMatrixA.multiplyToRef(this._tempMatrixB,this._tempMatrixC),this._tempMatrixC.decompose(this._tempVectorScale,o.rotationQuaternion,o.position),o.addRotation(0,Math.PI,0)):(o.position.set(this.m_tempPosition.x(),this.m_tempPosition.y(),this.m_tempPosition.z()),o.rotationQuaternion.set(this.m_tempRotation.x(),this.m_tempRotation.y(),this.m_tempRotation.z(),this.m_tempRotation.w()),o.addRotation(0,Math.PI,0))}}}},t.prototype.lockedWheelInformation=function(e){var t=!1;if(null!=this.lockedWheelIndexes&&this.lockedWheelIndexes.length>0)for(var r=0;r<this.lockedWheelIndexes.length;r++)if(this.lockedWheelIndexes[r]===e){t=!0;break}return t},t.prototype.deleteWheelInformation=function(){var e=this.getNumWheels();if(e>0)for(var t=0;t<e;t++){var r=this.getWheelInfo(t);null!=r&&(null!=r.transform&&delete r.transform,null!=r.defaultFriction&&delete r.defaultFriction)}},t}();e.RaycastVehicle=t}(BABYLON||(BABYLON={}));var __extends=this&&this.__extends||function(){var e=function(t,r){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(t,r)};return function(t,r){function i(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(i.prototype=r.prototype,new i)}}(),BABYLON;!function(e){var t=function(){function e(){this.mesh=null,this.state=0,this.reset=!1}return e}();e.CollisionContactInfo=t;var r=function(r){function i(t,i,s){void 0===s&&(s={});var o=r.call(this,t,i,s)||this;return o._abstractMesh=null,o._isKinematic=!1,o._maxCollisions=4,o._isPhysicsReady=!1,o._centerOfMass=new e.Vector3(0,0,0),o._raycastVehicle=null,o._tmpCollisionContacts=null,o.m_physicsWorld=null,o.m_physicsEngine=null,o._onCollisionEnterObservable=new e.Observable,o._onCollisionStayObservable=new e.Observable,o._onCollisionExitObservable=new e.Observable,o._abstractMesh=o.getAbstractMesh(),o._isKinematic=o.getEditorProperty("isKinematic",o._isKinematic),o.m_physicsWorld=e.SceneManager.GetPhysicsWorld(o.scene),o.m_physicsEngine=e.SceneManager.GetPhysicsEngine(o.scene),null!=o.transform.metadata&&null!=o.transform.metadata.unity&&null!=o.transform.metadata.unity.physics&&(o._centerOfMass=null!=o.transform.metadata.unity.physics.center?e.Utilities.ParseVector3(o.transform.metadata.unity.physics.center,o._centerOfMass):o._centerOfMass),o.setMaxNotifications(o._maxCollisions),o}return __extends(i,r),Object.defineProperty(i.prototype,"isKinematic",{get:function(){return this._isKinematic},enumerable:!0,configurable:!0}),i.prototype.start=function(){this.initRigidbodyState()},i.prototype.update=function(){this.updateRigidbodyState()},i.prototype.after=function(){this.afterRigidbodyState()},i.prototype.destroy=function(){this.destroyRigidbodyState()},i.prototype.initRigidbodyState=function(){e.Utilities.ValidateTransformQuaternion(this.transform),this._isPhysicsReady=null!=this.m_physicsEngine&&null!=this._tmpCollisionContacts&&null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody;var t=this._isKinematic===!0?e.CollisionFilters.StaticFilter:e.CollisionFilters.DefaultFilter,r=this._isKinematic===!0?e.CollisionFilters.AllFilter^e.CollisionFilters.StaticFilter:e.CollisionFilters.AllFilter;this.setContactProcessingThreshold(0),this.setCollisionFilterGroup(t),this.setCollisionFilterMask(r),this.resetBodyCollisionContacts()},i.prototype.updateRigidbodyState=function(){this.syncronizeVehicleController()},i.prototype.afterRigidbodyState=function(){this.parseBodyCollisionContacts(),this.resetBodyCollisionContacts()},i.prototype.destroyRigidbodyState=function(){this.m_physicsWorld=null,this.m_physicsEngine=null,null!=this._raycastVehicle&&(this._raycastVehicle.dispose(),this._raycastVehicle=null),this._onCollisionEnterObservable.clear(),this._onCollisionEnterObservable=null,this._onCollisionStayObservable.clear(),this._onCollisionStayObservable=null,this._onCollisionExitObservable.clear(),this._onCollisionExitObservable=null,this._tmpCollisionContacts=null,this._abstractMesh=null},i.prototype.syncronizeVehicleController=function(){null!=this._raycastVehicle&&this._raycastVehicle.updateWheelInformation()},i.prototype.parseBodyCollisionContacts=function(){if(this._isPhysicsReady===!0){var e=this._onCollisionEnterObservable.hasObservers(),t=this._onCollisionStayObservable.hasObservers(),r=this._onCollisionExitObservable.hasObservers();if(e||t||r){var i=0;for(i=0;i<this._tmpCollisionContacts.length;i++)this._tmpCollisionContacts[i].reset=!0;var s=0;if(null!=this._abstractMesh.physicsImpostor.tmpCollisionObjects){var o=this._abstractMesh.physicsImpostor.tmpCollisionObjects;for(var n in o){var a=-1,l=o[n];for(i=0;i<this._tmpCollisionContacts.length;i++){var h=this._tmpCollisionContacts[i];if(null!=h.mesh&&h.mesh===l){h.state=1,h.reset=!1,a=i;break}}if(a===-1)for(i=0;i<this._tmpCollisionContacts.length;i++){var c=this._tmpCollisionContacts[i];if(null==c.mesh){c.mesh=l,c.state=0,c.reset=!1;break}}if(s++,s>this._maxCollisions)break}}for(i=0;i<this._tmpCollisionContacts.length;i++){var m=this._tmpCollisionContacts[i];m.reset===!0?(r&&null!=m.mesh&&this._onCollisionExitObservable.notifyObservers(m.mesh),m.mesh=null,m.state=0,m.reset=!1):0===m.state?e&&null!=m.mesh&&this._onCollisionEnterObservable.notifyObservers(m.mesh):t&&null!=m.mesh&&this._onCollisionStayObservable.notifyObservers(m.mesh)}}}},i.prototype.resetBodyCollisionContacts=function(){if(this._isPhysicsReady===!0){var e=this._onCollisionEnterObservable.hasObservers(),t=this._onCollisionStayObservable.hasObservers(),r=this._onCollisionExitObservable.hasObservers();e||t||r?this._abstractMesh.physicsImpostor.tmpCollisionObjects={}:this._abstractMesh.physicsImpostor.tmpCollisionObjects=null}},i.prototype.registerOnCollisionEnter=function(e){return this._onCollisionEnterObservable.add(e)},i.prototype.unregisterOnCollisionEnter=function(e){return this._onCollisionEnterObservable.remove(e)},i.prototype.registerOnCollisionStay=function(e){return this._onCollisionStayObservable.add(e)},i.prototype.unregisterOnCollisionStay=function(e){return this._onCollisionStayObservable.remove(e)},i.prototype.registerOnCollisionExit=function(e){return this._onCollisionExitObservable.add(e)},i.prototype.unregisterOnCollisionExit=function(e){return this._onCollisionExitObservable.remove(e)},i.prototype.getMass=function(){var e=0;return null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&(e=this._abstractMesh.physicsImpostor.mass),e},i.prototype.setMass=function(e){null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&this._abstractMesh.physicsImpostor.mass!==e&&(this._abstractMesh.physicsImpostor.mass=e)},i.prototype.getFriction=function(){var e=0;return null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&(e=this._abstractMesh.physicsImpostor.friction),e},i.prototype.setFriction=function(e){null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&this._abstractMesh.physicsImpostor.friction!==e&&(this._abstractMesh.physicsImpostor.friction=e)},i.prototype.getRestitution=function(){var e=0;return null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&(e=this._abstractMesh.physicsImpostor.restitution),e},i.prototype.setRestitution=function(e){null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&this._abstractMesh.physicsImpostor.restitution!==e&&(this._abstractMesh.physicsImpostor.restitution=e)},i.prototype.getLinearVelocity=function(){var e=null;return null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&(e=this._abstractMesh.physicsImpostor.getLinearVelocity()),e},i.prototype.setLinearVelocity=function(e){null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=e&&this._abstractMesh.physicsImpostor.setLinearVelocity(e)},i.prototype.getAngularVelocity=function(){var e=null;return null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&(e=this._abstractMesh.physicsImpostor.getAngularVelocity()),e},i.prototype.setAngularVelocity=function(e){null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=e&&this._abstractMesh.physicsImpostor.setAngularVelocity(e)},i.prototype.setGravity=function(t){null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody&&this._abstractMesh.physicsImpostor.physicsBody.setGravity&&null!=t&&(null==e.RigidbodyPhysics.TempAmmoVector&&(e.RigidbodyPhysics.TempAmmoVector=new Ammo.btVector3(0,0,0)),e.RigidbodyPhysics.TempAmmoVector.setValue(t.x,t.y,t.z),this._abstractMesh.physicsImpostor.physicsBody.setGravity(e.RigidbodyPhysics.TempAmmoVector))},i.prototype.getGravity=function(){var t=new e.Vector3(0,0,0);return this.getGravityToRef(t),t},i.prototype.getGravityToRef=function(e){if(null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody&&this._abstractMesh.physicsImpostor.physicsBody.getGravity){var t=this._abstractMesh.physicsImpostor.physicsBody.getGravity();e.set(t.x(),t.y(),t.z())}},i.prototype.clearForces=function(){null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody&&this._abstractMesh.physicsImpostor.physicsBody.clearForces&&this._abstractMesh.physicsImpostor.physicsBody.clearForces()},i.prototype.applyTorque=function(t){null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody&&this._abstractMesh.physicsImpostor.physicsBody.applyTorque&&null!=t&&(null==e.RigidbodyPhysics.TempAmmoVector&&(e.RigidbodyPhysics.TempAmmoVector=new Ammo.btVector3(0,0,0)),e.RigidbodyPhysics.TempAmmoVector.setValue(t.x,t.y,t.z),this._abstractMesh.physicsImpostor.physicsBody.applyTorque(e.RigidbodyPhysics.TempAmmoVector))},i.prototype.applyLocalTorque=function(t){null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody&&this._abstractMesh.physicsImpostor.physicsBody.applyLocalTorque&&null!=t&&(null==e.RigidbodyPhysics.TempAmmoVector&&(e.RigidbodyPhysics.TempAmmoVector=new Ammo.btVector3(0,0,0)),e.RigidbodyPhysics.TempAmmoVector.setValue(t.x,t.y,t.z),this._abstractMesh.physicsImpostor.physicsBody.applyLocalTorque(e.RigidbodyPhysics.TempAmmoVector))},i.prototype.applyImpulse=function(t,r){null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody&&this._abstractMesh.physicsImpostor.physicsBody.applyImpulse&&null!=t&&(null==e.RigidbodyPhysics.TempAmmoVector&&(e.RigidbodyPhysics.TempAmmoVector=new Ammo.btVector3(0,0,0)),null==e.RigidbodyPhysics.TempAmmoVectorAux&&(e.RigidbodyPhysics.TempAmmoVectorAux=new Ammo.btVector3(0,0,0)),e.RigidbodyPhysics.TempAmmoVector.setValue(t.x,t.y,t.z),e.RigidbodyPhysics.TempAmmoVectorAux.setValue(r.x,r.y,r.z),this._abstractMesh.physicsImpostor.physicsBody.applyImpulse(e.RigidbodyPhysics.TempAmmoVector,e.RigidbodyPhysics.TempAmmoVectorAux))},i.prototype.applyCentralImpulse=function(t){null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody&&this._abstractMesh.physicsImpostor.physicsBody.applyCentralImpulse&&null!=t&&(null==e.RigidbodyPhysics.TempAmmoVector&&(e.RigidbodyPhysics.TempAmmoVector=new Ammo.btVector3(0,0,0)),e.RigidbodyPhysics.TempAmmoVector.setValue(t.x,t.y,t.z),this._abstractMesh.physicsImpostor.physicsBody.applyCentralImpulse(e.RigidbodyPhysics.TempAmmoVector))},i.prototype.applyTorqueImpulse=function(t){null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody&&this._abstractMesh.physicsImpostor.physicsBody.applyTorqueImpulse&&null!=t&&(null==e.RigidbodyPhysics.TempAmmoVector&&(e.RigidbodyPhysics.TempAmmoVector=new Ammo.btVector3(0,0,0)),e.RigidbodyPhysics.TempAmmoVector.setValue(t.x,t.y,t.z),this._abstractMesh.physicsImpostor.physicsBody.applyTorqueImpulse(e.RigidbodyPhysics.TempAmmoVector))},i.prototype.applyForce=function(t,r){null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody&&this._abstractMesh.physicsImpostor.physicsBody.applyForce&&null!=t&&(null==e.RigidbodyPhysics.TempAmmoVector&&(e.RigidbodyPhysics.TempAmmoVector=new Ammo.btVector3(0,0,0)),null==e.RigidbodyPhysics.TempAmmoVectorAux&&(e.RigidbodyPhysics.TempAmmoVectorAux=new Ammo.btVector3(0,0,0)),e.RigidbodyPhysics.TempAmmoVector.setValue(t.x,t.y,t.z),e.RigidbodyPhysics.TempAmmoVectorAux.setValue(r.x,r.y,r.z),this._abstractMesh.physicsImpostor.physicsBody.applyForce(e.RigidbodyPhysics.TempAmmoVector,e.RigidbodyPhysics.TempAmmoVectorAux))},i.prototype.applyCentralForce=function(t){null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody&&this._abstractMesh.physicsImpostor.physicsBody.applyCentralForce&&null!=t&&(null==e.RigidbodyPhysics.TempAmmoVector&&(e.RigidbodyPhysics.TempAmmoVector=new Ammo.btVector3(0,0,0)),e.RigidbodyPhysics.TempAmmoVector.setValue(t.x,t.y,t.z),this._abstractMesh.physicsImpostor.physicsBody.applyCentralForce(e.RigidbodyPhysics.TempAmmoVector))},i.prototype.applyCentralLocalForce=function(t){null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody&&this._abstractMesh.physicsImpostor.physicsBody.applyCentralLocalForce&&null!=t&&(null==e.RigidbodyPhysics.TempAmmoVector&&(e.RigidbodyPhysics.TempAmmoVector=new Ammo.btVector3(0,0,0)),e.RigidbodyPhysics.TempAmmoVector.setValue(t.x,t.y,t.z),
this._abstractMesh.physicsImpostor.physicsBody.applyCentralLocalForce(e.RigidbodyPhysics.TempAmmoVector))},i.prototype.getCenterMass=function(){return this._centerOfMass},i.prototype.getLinearFactor=function(){var e=0;return null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody&&this._abstractMesh.physicsImpostor.physicsBody.getLinearFactor&&(e=this._abstractMesh.physicsImpostor.physicsBody.getLinearFactor()),e},i.prototype.setLinearFactor=function(e){null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody&&this._abstractMesh.physicsImpostor.physicsBody.setLinearFactor&&this._abstractMesh.physicsImpostor.physicsBody.setLinearFactor(e)},i.prototype.getAngularFactor=function(){var e=0;return null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody&&this._abstractMesh.physicsImpostor.physicsBody.getAngularFactor&&(e=this._abstractMesh.physicsImpostor.physicsBody.getAngularFactor()),e},i.prototype.setAngularFactor=function(e){null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody&&this._abstractMesh.physicsImpostor.physicsBody.setAngularFactor&&this._abstractMesh.physicsImpostor.physicsBody.setAngularFactor(e)},i.prototype.getAngularDamping=function(){var e=0;return null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody&&this._abstractMesh.physicsImpostor.physicsBody.getAngularDamping&&(e=this._abstractMesh.physicsImpostor.physicsBody.getAngularDamping()),e},i.prototype.getLinearDamping=function(){var e=0;return null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody&&this._abstractMesh.physicsImpostor.physicsBody.getLinearDamping&&(e=this._abstractMesh.physicsImpostor.physicsBody.getLinearDamping()),e},i.prototype.setDamping=function(e,t){null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody&&this._abstractMesh.physicsImpostor.physicsBody.setDamping&&this._abstractMesh.physicsImpostor.physicsBody.setDamping(e,t)},i.prototype.setSleepingThresholds=function(e,t){null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody&&this._abstractMesh.physicsImpostor.physicsBody.setSleepingThresholds&&this._abstractMesh.physicsImpostor.physicsBody.setSleepingThresholds(e,t)},i.prototype.setMaxNotifications=function(e){this._maxCollisions=e,this._tmpCollisionContacts=[];for(var r=0;r<this._maxCollisions;r++)this._tmpCollisionContacts.push(new t)},i.prototype.setActivationState=function(e){if(null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody){var t=Ammo.castObject(this._abstractMesh.physicsImpostor.physicsBody,Ammo.btCollisionObject);null!=t&&t.setActivationState&&t.setActivationState(e)}},i.prototype.getCollisionFilterGroup=function(){var e=-1;return null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody&&this._abstractMesh.physicsImpostor.physicsBody.getBroadphaseProxy&&(e=this._abstractMesh.physicsImpostor.physicsBody.getBroadphaseProxy().get_m_collisionFilterGroup()),e},i.prototype.setCollisionFilterGroup=function(e){null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody&&this._abstractMesh.physicsImpostor.physicsBody.getBroadphaseProxy&&this._abstractMesh.physicsImpostor.physicsBody.getBroadphaseProxy().set_m_collisionFilterGroup(e)},i.prototype.getCollisionFilterMask=function(){var e=-1;return null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody&&this._abstractMesh.physicsImpostor.physicsBody.getBroadphaseProxy&&(e=this._abstractMesh.physicsImpostor.physicsBody.getBroadphaseProxy().get_m_collisionFilterMask()),e},i.prototype.setCollisionFilterMask=function(e){null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody&&this._abstractMesh.physicsImpostor.physicsBody.getBroadphaseProxy&&this._abstractMesh.physicsImpostor.physicsBody.getBroadphaseProxy().set_m_collisionFilterMask(e)},i.prototype.getCollisionShapeType=function(){var e=-1;if(null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody){var t=Ammo.castObject(this._abstractMesh.physicsImpostor.physicsBody,Ammo.btCollisionObject);if(null!=t){var r=t.getCollisionShape();null!=r&&r.getShapeType&&(e=r.getShapeType())}}return e},i.prototype.getCollisionShapeMargin=function(){var e=-1;if(null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody){var t=Ammo.castObject(this._abstractMesh.physicsImpostor.physicsBody,Ammo.btCollisionObject);if(null!=t){var r=t.getCollisionShape();null!=r&&r.getMargin&&(e=r.getMargin())}}return e},i.prototype.setCollisionShapeMargin=function(e){if(null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody){var t=Ammo.castObject(this._abstractMesh.physicsImpostor.physicsBody,Ammo.btCollisionObject);if(null!=t){var r=t.getCollisionShape();null!=r&&r.setMargin&&r.setMargin(e)}}},i.prototype.getContactProcessingThreshold=function(){var e=-1;if(null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody){var t=Ammo.castObject(this._abstractMesh.physicsImpostor.physicsBody,Ammo.btCollisionObject);null!=t&&t.getContactProcessingThreshold&&(e=t.getContactProcessingThreshold())}return e},i.prototype.setContactProcessingThreshold=function(e){if(null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody){var t=Ammo.castObject(this._abstractMesh.physicsImpostor.physicsBody,Ammo.btCollisionObject);null!=t&&t.setContactProcessingThreshold&&t.setContactProcessingThreshold(e)}},i.prototype.getNativeWorldTransform=function(){var e=null;if(null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody){var t=Ammo.castObject(this._abstractMesh.physicsImpostor.physicsBody,Ammo.btCollisionObject);null!=t&&t.getWorldTransform&&(e=t.getWorldTransform())}return e},i.prototype.getTransformPositionToRef=function(e){if(null!=e&&null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody){var t=Ammo.castObject(this._abstractMesh.physicsImpostor.physicsBody,Ammo.btCollisionObject);if(null!=t&&t.getWorldTransform){var r=t.getWorldTransform();if(null!=r){var i=r.getOrigin();e.set(i.x(),i.y(),i.z())}}}},i.prototype.getTransformRotationToRef=function(e){if(null!=e&&null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody){var t=Ammo.castObject(this._abstractMesh.physicsImpostor.physicsBody,Ammo.btCollisionObject);if(null!=t&&t.getWorldTransform){var r=t.getWorldTransform();if(null!=r){var i=r.getRotation();e.set(i.x(),i.y(),i.z(),i.w())}}}},i.prototype.hasRaycastVehicle=function(){return this._isPhysicsReady===!0&&null!=this._abstractMesh.metadata&&null!=this._abstractMesh.metadata.wheels},i.prototype.getRaycastVehicle=function(){return null==this._raycastVehicle&&(this.hasRaycastVehicle()?this._raycastVehicle=new e.RaycastVehicle(this._abstractMesh,this.m_physicsWorld,this.scene.useRightHandedSystem,this._centerOfMass):e.Tools.Warn("No wheel collider metadata info for: "+this.transform.name)),this._raycastVehicle},i.SetupPhysicsComponent=function(t,r){var i=null!=r.metadata&&null!=r.metadata.unity?r.metadata.unity:null;if(null!=i&&null!=i.physics){var s=null!=i.physics.mass?i.physics.mass:0,o=null!=i.physics.center?e.Utilities.ParseVector3(i.physics.center,e.Vector3.Zero()):e.Vector3.Zero();if("rigidbody"===i.physics.type)if(null!=i.collision&&null!=i.collision.type&&"MeshCollider"===i.collision.type){var n=null!=i.collision.convexmesh&&i.collision.convexmesh,a=null!=i.collision.dynamicfriction?i.collision.dynamicfriction:.6,l=(null!=i.collision.staticfriction?i.collision.staticfriction:.6,null!=i.collision.restitution?i.collision.restitution:0),h=null!=i.collision.trigger&&i.collision.trigger,c=n===!0?e.PhysicsImpostor.ConvexHullImpostor:e.PhysicsImpostor.MeshImpostor;e.SceneManager.CreatePhysicsImpostor(t,r,c,{mass:s,friction:a,restitution:l}),e.RigidbodyPhysics.ConfigRigidbodyPhysics(t,r,!1,h,i.physics)}else{var m=0,u=0,p=0,f=!1,_=0,y=null,d=r.getChildren(null,!0);null!=d&&d.length>0&&d.forEach(function(e){e.position.subtractInPlace(o)});var v=r.getChildren(null,!1);null!=v&&v.length>0&&v.forEach(function(s){if(null!=s.metadata&&null!=s.metadata.unity&&null!=s.metadata.unity.collision){var o=s.metadata.unity.collision,n=null!=o.wheelinformation?o.wheelinformation:null;if(null!=n)null==y&&(y=[]),y.push(n);else{s.parent!==r&&s.setParent(r);var a=null!=o.dynamicfriction?o.dynamicfriction:.6,l=null!=o.staticfriction?o.staticfriction:.6,h=null!=o.restitution?o.restitution:0,c=null!=o.trigger&&o.trigger,d=null!=o.type?o.type:"BoxCollider",v=e.PhysicsImpostor.BoxImpostor;"MeshCollider"===d?v=e.PhysicsImpostor.ConvexHullImpostor:"CapsuleCollider"===d?v=e.PhysicsImpostor.CapsuleImpostor:"SphereCollider"===d?v=e.PhysicsImpostor.SphereImpostor:"BoxCollider"===d&&(v=e.PhysicsImpostor.BoxImpostor),a>m&&(m=a),l>u&&(u=l),h>p&&(p=h),1==c&&(f=!0),e.SceneManager.CreatePhysicsImpostor(t,s,v,{mass:0,friction:0,restitution:0}),e.RigidbodyPhysics.ConfigRigidbodyPhysics(t,s,!0,!1,i.physics),_++}}}),_>0&&(e.SceneManager.CreatePhysicsImpostor(t,r,e.PhysicsImpostor.NoImpostor,{mass:s,friction:m,restitution:p}),e.RigidbodyPhysics.ConfigRigidbodyPhysics(t,r,!1,f,i.physics)),null!=y&&y.length>0&&(r.metadata.wheels=y),v=null}}},i.ConfigRigidbodyPhysics=function(t,r,i,s,o){null==e.RigidbodyPhysics.TempAmmoVector&&(e.RigidbodyPhysics.TempAmmoVector=new Ammo.btVector3(0,0,0)),null!=r&&(null!=r.physicsImpostor?r.physicsImpostor.executeNativeFunction(function(i,n){var a=Ammo.castObject(n,Ammo.btCollisionObject);a.entity=r;var l=e.SceneManager.GetPhysicsWorld(t);if(null!=l&&l.generateInternalEdgeInfo){var h=a.getCollisionShape();if(null!=h&&h.getShapeType){var c=h.getShapeType();if(21===c){var m=Ammo.castObject(h,Ammo.btBvhTriangleMeshShape);a.triangleMapInfo=new Ammo.btTriangleInfoMap,l.generateInternalEdgeInfo(m,a.triangleMapInfo)}}}var u=null==o||null==o.gravity||o.gravity;if(u===!1&&(n.setGravity?(e.RigidbodyPhysics.TempAmmoVector.setValue(0,0,0),n.setGravity(e.RigidbodyPhysics.TempAmmoVector)):e.Tools.Warn("Physics engine set gravity override not supported for: "+r.name)),n.setDamping){var p=null!=o&&null!=o.ldrag?o.ldrag:0,f=null!=o&&null!=o.adrag?o.adrag:.05;n.setDamping(p,f)}else e.Tools.Warn("Physics engine set drag damping not supported for: "+r.name);n.setCollisionFlags&&n.getCollisionFlags?s===!0?n.setCollisionFlags(n.getCollisionFlags()|e.CollisionFlags.CF_NO_CONTACT_RESPONSE|e.CollisionFlags.CF_CUSTOM_MATERIAL_CALLBACK):n.setCollisionFlags(n.getCollisionFlags()|e.CollisionFlags.CF_CUSTOM_MATERIAL_CALLBACK):e.Tools.Warn("Physics engine set collision flags not supported for: "+r.name);var _=null!=o&&null!=o.freeze?o.freeze:null;if(null!=_){if(n.setLinearFactor){var y=null!=_.positionx&&_.positionx===!0?0:1,d=null!=_.positiony&&_.positiony===!0?0:1,v=null!=_.positionz&&_.positionz===!0?0:1;e.RigidbodyPhysics.TempAmmoVector.setValue(y,d,v),n.setLinearFactor(e.RigidbodyPhysics.TempAmmoVector)}else e.Tools.Warn("Physics engine set linear factor not supported for: "+r.name);if(n.setAngularFactor){var g=null!=_.rotationx&&_.rotationx===!0?0:1,C=null!=_.rotationy&&_.rotationy===!0?0:1,b=null!=_.rotationz&&_.rotationz===!0?0:1;e.RigidbodyPhysics.TempAmmoVector.setValue(g,C,b),n.setAngularFactor(e.RigidbodyPhysics.TempAmmoVector)}else e.Tools.Warn("Physics engine set angular factor not supported for: "+r.name)}}):e.Tools.Warn("No valid physics impostor to setup for "+r.name))},i.TempAmmoVector=null,i.TempAmmoVectorAux=null,i}(e.ScriptComponent);e.RigidbodyPhysics=r}(BABYLON||(BABYLON={}));var __extends=this&&this.__extends||function(){var e=function(t,r){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(t,r)};return function(t,r){function i(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(i.prototype=r.prototype,new i)}}(),__decorate=this&&this.__decorate||function(e,t,r,i){var s,o=arguments.length,n=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)n=Reflect.decorate(e,t,r,i);else for(var a=e.length-1;a>=0;a--)(s=e[a])&&(n=(o<3?s(n):o>3?s(t,r,n):s(t,r))||n);return o>3&&n&&Object.defineProperty(t,r,n),n},BABYLON;!function(e){var t=function(){function e(){this._defines={},this._defines={}}return e.prototype.getDefines=function(){return this._defines},e.prototype.defineBoolean=function(e){this._defines[e]=!0},e.prototype.defineNumeric=function(e,t){this._defines[e]=t},e.ShaderIndexer=0,e}();e.UniversalShaderDefines=t;var r=function(e){function t(){var t=e.call(this)||this;return t.DIFFUSE=!1,t.CLIPPLANE=!1,t.CLIPPLANE2=!1,t.CLIPPLANE3=!1,t.CLIPPLANE4=!1,t.ALPHATEST=!1,t.DEPTHPREPASS=!1,t.POINTSIZE=!1,t.FOG=!1,t.NORMAL=!1,t.UV1=!1,t.UV2=!1,t.VERTEXCOLOR=!1,t.VERTEXALPHA=!1,t.NUM_BONE_INFLUENCERS=0,t.BonesPerMesh=0,t.INSTANCES=!1,t.rebuild(),t}return __extends(t,e),t}(e.MaterialDefines);e.UniversalMaterialDefines=r;var i=function(){function e(){}return e}();e.UniversalAlbedoChunks=i;var s=function(){function e(){}return e}();e.UniversalDiffuseChunks=s;var o=function(t){function r(r,i){var s=t.call(this,r,i)||this;return s.diffuseColor=new e.Color3(1,1,1),s._disableLighting=!1,s._maxSimultaneousLights=4,s.universalMaterial=!0,s.locals=null,s._defines=null,s._uniforms=[],s._samplers=[],s._textures={},s._vectors4={},s._floats={},s.locals=new e.UniversalShaderDefines,s._defines=null,s.customShaderNameResolve=s._buildCustomShader,s}return __extends(r,t),r.prototype.getClassName=function(){return"UniversalPushMaterial"},r.prototype.getShaderName=function(){return"simple"},r.prototype.getShaderDefines=function(){return this._defines},r.prototype.needAlphaBlending=function(){return this.alpha<1},r.prototype.needAlphaTesting=function(){return!1},r.prototype.getAlphaTestTexture=function(){return null},r.prototype.getTexture=function(e){return this._textures[e]},r.prototype.getVector4=function(e){return this._vectors4[e]},r.prototype.getFloat=function(e){return this._floats[e]},r.prototype.setTexture=function(e,t,r){return void 0===r&&(r=!1),r===!0&&this.checkSampler(e),this._textures[e]=t,this},r.prototype.setVector4=function(e,t,r){return void 0===r&&(r=!1),r===!0&&this.checkUniform(e),this._vectors4[e]=t,this},r.prototype.setFloat=function(e,t,r){return void 0===r&&(r=!1),r===!0&&this.checkUniform(e),this._floats[e]=t,this},r.prototype.checkUniform=function(e){this._uniforms.indexOf(e)===-1&&(this._uniforms.push(e),this.locals.defineBoolean(e.toUpperCase()))},r.prototype.checkSampler=function(e){this._samplers.indexOf(e)===-1&&(this._samplers.push(e),this.locals.defineBoolean(e.toUpperCase()),this.checkUniform(e+"Infos"),this.checkUniform(e+"Matrix"))},r.prototype.isReadyForSubMesh=function(t,r,i){if(this.isFrozen&&this._wasPreviouslyReady&&r.effect)return!0;r._materialDefines||(r._materialDefines=new e.UniversalMaterialDefines);var s=r._materialDefines,o=this.getScene();if(!this.checkReadyOnEveryCall&&r.effect&&this._renderId===o.getRenderId())return!0;var n=o.getEngine();if(s._areTexturesDirty&&(s._needUVs=!1,o.texturesEnabled&&this._diffuseTexture&&e.MaterialFlags.DiffuseTextureEnabled)){if(!this._diffuseTexture.isReady())return!1;s._needUVs=!0,s.DIFFUSE=!0}if(e.MaterialHelper.PrepareDefinesForMisc(t,o,!1,this.pointsCloud,this.fogEnabled,this._shouldTurnAlphaTestOn(t),s),s._needNormals=e.MaterialHelper.PrepareDefinesForLights(o,t,s,!1,this._maxSimultaneousLights,this._disableLighting),e.MaterialHelper.PrepareDefinesForFrameBoundValues(o,n,s,!!i),e.MaterialHelper.PrepareDefinesForAttributes(t,s,!0,!0),s.isDirty){s.markAsProcessed(),o.resetCachedMaterial();var a=new e.EffectFallbacks;s.FOG&&a.addFallback(1,"FOG"),e.MaterialHelper.HandleFallbacksForShadows(s,a,this.maxSimultaneousLights),s.NUM_BONE_INFLUENCERS>0&&a.addCPUSkinningFallback(0,t);var l=[e.VertexBuffer.PositionKind];s.NORMAL&&l.push(e.VertexBuffer.NormalKind),s.UV1&&l.push(e.VertexBuffer.UVKind),s.UV2&&l.push(e.VertexBuffer.UV2Kind),s.VERTEXCOLOR&&l.push(e.VertexBuffer.ColorKind),e.MaterialHelper.PrepareAttributesForBones(l,t,s,a),e.MaterialHelper.PrepareAttributesForInstances(l,s);var h=["world","view","viewProjection","vEyePosition","vLightsType","vDiffuseColor","vFogInfos","vFogColor","pointSize","vDiffuseInfos","mBones","vClipPlane","vClipPlane2","vClipPlane3","vClipPlane4","diffuseMatrix"],c=["diffuseSampler"],m=new Array;e.MaterialHelper.PrepareUniformsAndSamplersList({uniformsNames:h,uniformBuffersNames:m,samplers:c,defines:s,maxSimultaneousLights:this.maxSimultaneousLights});var u=this.getShaderName();this.customShaderNameResolve&&(u=this.customShaderNameResolve(u,h,m,c,s));var p=s.toString();r.setEffect(o.getEngine().createEffect(u,{attributes:l,uniformsNames:h,uniformBuffersNames:m,samplers:c,defines:p,fallbacks:a,onCompiled:this.onCompiled,onError:this.onError,indexParameters:{maxSimultaneousLights:this._maxSimultaneousLights-1}},n),s)}return!(!r.effect||!r.effect.isReady())&&(this._renderId=o.getRenderId(),this._wasPreviouslyReady=!0,!0)},r.prototype.bindForSubMesh=function(t,r,i){var s=this.getScene(),o=i._materialDefines;if(o){var n=i.effect;n&&(this._activeEffect=n,this.bindOnlyWorldMatrix(t),this._activeEffect.setMatrix("viewProjection",s.getTransformMatrix()),e.MaterialHelper.BindBonesParameters(r,this._activeEffect),this._mustRebind(s,n)&&(this._diffuseTexture&&e.MaterialFlags.DiffuseTextureEnabled&&(this._activeEffect.setTexture("diffuseSampler",this._diffuseTexture),this._activeEffect.setFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),this._activeEffect.setMatrix("diffuseMatrix",this._diffuseTexture.getTextureMatrix())),e.MaterialHelper.BindClipPlane(this._activeEffect,s),this.pointsCloud&&this._activeEffect.setFloat("pointSize",this.pointSize),e.MaterialHelper.BindEyePosition(n,s)),this._activeEffect.setColor4("vDiffuseColor",this.diffuseColor,this.alpha*r.visibility),s.lightsEnabled&&!this.disableLighting&&e.MaterialHelper.BindLights(s,r,this._activeEffect,o,this.maxSimultaneousLights),s.fogEnabled&&r.applyFog&&s.fogMode!==e.Scene.FOGMODE_NONE&&this._activeEffect.setMatrix("view",s.getViewMatrix()),e.MaterialHelper.BindFogParameters(s,r,this._activeEffect),this._afterBind(r,this._activeEffect),this._attachAfterBind(r,this._activeEffect))}},r.prototype.getAnimatables=function(){var e=[];this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&e.push(this._diffuseTexture);for(var t in this._textures){var r=this._textures[t];r&&r.animations&&r.animations.length>0&&e.push(r)}return e},r.prototype.getActiveTextures=function(){var e=t.prototype.getActiveTextures.call(this);this._diffuseTexture&&e.push(this._diffuseTexture);for(var r in this._textures){var i=this._textures[r];i&&e.push(i)}return e},r.prototype.hasTexture=function(e){if(t.prototype.hasTexture.call(this,e))return!0;if(this.diffuseTexture===e)return!0;var r=!1;for(var i in this._textures){var s=this._textures[i];if(s===s){r=!0;break}}return r},r.prototype.dispose=function(e){this._diffuseTexture&&this._diffuseTexture.dispose();for(var r in this._textures){var i=this._textures[r];i&&i.dispose(),this._textures[r]=null}this._textures={},t.prototype.dispose.call(this,e)},r.prototype.clone=function(t){var r,i=this,s=e.SerializationHelper.Clone(function(){return new e.UniversalPushMaterial(t,i.getScene())},this);s._textures={};for(r in this._textures){var o=this._textures[r];o&&s.setTexture(r,o.clone(),!0)}s._vectors4={};for(r in this._vectors4)s.setVector4(r,this._vectors4[r].clone(),!0);s._floats={};for(r in this._floats)s.setFloat(r,this._floats[r],!0);return s},r.prototype.serialize=function(){var t,r=e.SerializationHelper.Serialize(this);r.customType="BABYLON.UniversalPushMaterial",r.textures={};for(t in this._textures){var i=this._textures[t];i&&(r.textures[t]=i.serialize())}r.vectors4={};for(t in this._vectors4)r.vectors4[t]=this._vectors4[t].asArray();r.floats={};for(t in this._floats)r.floats[t]=this._floats[t];return r},r.Parse=function(t,r,i){var s,o=e.SerializationHelper.Parse(function(){return new e.UniversalPushMaterial(t.name,r)},t,r,i);for(s in t.textures){var n=t.textures[s];n&&o.setTexture(s,e.Texture.Parse(n,r,i),!0)}for(s in t.vectors4)o.setVector4(s,e.Vector4.FromArray(t.vectors4[s]),!0);for(s in t.floats)o.setFloat(s,t.floats[s],!0);return o},r.prototype._buildCustomShader=function(e,t,r,i,s){this._defines=s;var o=this.getShaderName();null!=o&&""!==o||(o=e),null!=o&&""!==o||(o="simple");var n=this.locals.getDefines();if(null!=n&&null!=this._defines){var a=Object.keys(n);if(null!=a&&a.length>0){for(var l=this._defines,h=0,c=a;h<c.length;h++){var m=c[h];l[m]=n[m]}this._defines.rebuild()}}var u=0;if(null!=this._uniforms&&this._uniforms.length>0)for(u=0;u<this._uniforms.length;u++){var p=this._uniforms[u];t.indexOf(p)===-1&&t.push(p)}if(u=0,null!=this._samplers&&this._samplers.length>0)for(u=0;u<this._samplers.length;u++){var f=this._samplers[u];i.indexOf(f)===-1&&i.push(f)}return o},r.prototype._attachAfterBind=function(e,t){var r,i=this.getScene();if(i.texturesEnabled)for(r in this._textures){var s=this._textures[r];null!=s&&(t.setTexture(r,s),t.setFloat2(r+"Infos",s.coordinatesIndex,s.level),t.setMatrix(r+"Matrix",s.getTextureMatrix()))}for(r in this._vectors4)t.setVector4(r,this._vectors4[r]);for(r in this._floats)t.setFloat(r,this._floats[r])},__decorate([e.serializeAsTexture("diffuseTexture")],r.prototype,"_diffuseTexture",void 0),__decorate([e.expandToProperty("_markAllSubMeshesAsTexturesDirty")],r.prototype,"diffuseTexture",void 0),__decorate([e.serializeAsColor3("diffuse")],r.prototype,"diffuseColor",void 0),__decorate([e.serialize("disableLighting")],r.prototype,"_disableLighting",void 0),__decorate([e.expandToProperty("_markAllSubMeshesAsLightsDirty")],r.prototype,"disableLighting",void 0),__decorate([e.serialize("maxSimultaneousLights")],r.prototype,"_maxSimultaneousLights",void 0),__decorate([e.expandToProperty("_markAllSubMeshesAsLightsDirty")],r.prototype,"maxSimultaneousLights",void 0),r}(e.PushMaterial);e.UniversalPushMaterial=o,e._TypeStore.RegisteredTypes.UniversalPushMaterial=o;var n=function(t){function r(r,i){var s=t.call(this,r,i)||this;return s.universalMaterial=!0,s.locals=null,s.terrainInfo=null,s._defines=null,s._uniforms=[],s._samplers=[],s._textures={},s._vectors4={},s._floats={},s.locals=new e.UniversalShaderDefines,s._defines=null,s._setupAttachAfterBind(),s.enableShaderChunks=!1,s.materialShaderChunks=new e.UniversalAlbedoChunks,s.customShaderNameResolve=s._buildCustomShader,s.customShaderChunkResolve(),s}return __extends(r,t),r.prototype.updateShaderChunks=function(){},r.prototype.getClassName=function(){return"UniversalAlbedoMaterial"},r.prototype.getShaderName=function(){return"pbr"},r.prototype.getShaderChunk=function(){return null},r.prototype.getShaderDefines=function(){return this._defines},r.prototype.getTexture=function(e){return this._textures[e]},r.prototype.getVector4=function(e){return this._vectors4[e]},r.prototype.getFloat=function(e){return this._floats[e]},r.prototype.setTexture=function(e,t,r){return void 0===r&&(r=!1),r===!0&&this.checkSampler(e),this._textures[e]=t,this},r.prototype.setVector4=function(e,t,r){return void 0===r&&(r=!1),r===!0&&this.checkUniform(e),this._vectors4[e]=t,this},r.prototype.setFloat=function(e,t,r){return void 0===r&&(r=!1),r===!0&&this.checkUniform(e),this._floats[e]=t,this},r.prototype.checkUniform=function(e){this._uniforms.indexOf(e)===-1&&(this._uniforms.push(e),this.locals.defineBoolean(e.toUpperCase()))},r.prototype.checkSampler=function(e){this._samplers.indexOf(e)===-1&&(this._samplers.push(e),this.locals.defineBoolean(e.toUpperCase()),this.checkUniform(e+"Infos"),this.checkUniform(e+"Matrix"))},r.prototype.getAnimatables=function(){var e=t.prototype.getAnimatables.call(this);for(var r in this._textures){var i=this._textures[r];i&&i.animations&&i.animations.length>0&&e.push(i)}return e},r.prototype.getActiveTextures=function(){var e=t.prototype.getActiveTextures.call(this);for(var r in this._textures){var i=this._textures[r];i&&e.push(i)}return e},r.prototype.hasTexture=function(e){if(t.prototype.hasTexture.call(this,e))return!0;var r=!1;for(var i in this._textures){var s=this._textures[i];if(s===s){r=!0;break}}return r},r.prototype.dispose=function(e,r){if(r)for(var i in this._textures){var s=this._textures[i];s&&s.dispose(),this._textures[i]=null}this._textures={},t.prototype.dispose.call(this,e,r)},r.prototype.clone=function(t){var r,i=this,s=e.SerializationHelper.Clone(function(){return new e.UniversalAlbedoMaterial(t,i.getScene())},this);s._textures={};for(r in this._textures){var o=this._textures[r];o&&s.setTexture(r,o.clone(),!0)}s._vectors4={};for(r in this._vectors4)s.setVector4(r,this._vectors4[r].clone(),!0);s._floats={};for(r in this._floats)s.setFloat(r,this._floats[r],!0);return s},r.prototype.serialize=function(){var t,r=e.SerializationHelper.Serialize(this);r.customType="BABYLON.UniversalAlbedoMaterial",r.textures={};for(t in this._textures){var i=this._textures[t];i&&(r.textures[t]=i.serialize())}r.vectors4={};for(t in this._vectors4)r.vectors4[t]=this._vectors4[t].asArray();r.floats={};for(t in this._floats)r.floats[t]=this._floats[t];return r},r.Parse=function(t,r,i){var s,o=e.SerializationHelper.Parse(function(){return new e.UniversalAlbedoMaterial(t.name,r)},t,r,i);for(s in t.textures){var n=t.textures[s];n&&o.setTexture(s,e.Texture.Parse(n,r,i),!0)}for(s in t.vectors4)o.setVector4(s,e.Vector4.FromArray(t.vectors4[s]),!0);for(s in t.floats)o.setFloat(s,t.floats[s],!0);return o},r.prototype.customShaderChunkResolve=function(){var t=this.getShaderChunk();if(null!=t&&""!==t){var r=t+"ShaderChunks";if(null!=e.Effect.ShadersStore[r]){var i=e.Effect.ShadersStore[r],s=e.Utilities.HasOwnProperty(i,"VertexBegin")?i.VertexBegin:null;null!=s&&""!==s&&(this.materialShaderChunks.Vertex_Begin=s);var o=e.Utilities.HasOwnProperty(i,"VertexDefinitions")?i.VertexDefinitions:null;null!=o&&""!==o&&(this.materialShaderChunks.Vertex_Definitions=o);var n=e.Utilities.HasOwnProperty(i,"VertexMainBegin")?i.VertexMainBegin:null;null!=n&&""!==n&&(this.materialShaderChunks.Vertex_MainBegin=n);var a=e.Utilities.HasOwnProperty(i,"VertexUpdatePosition")?i.VertexUpdatePosition:null;null!=a&&""!==a&&(this.materialShaderChunks.Vertex_Before_PositionUpdated=a.replace("result","positionUpdated"));var l=e.Utilities.HasOwnProperty(i,"VertexUpdateNormal")?i.VertexUpdateNormal:null;null!=l&&""!==l&&(this.materialShaderChunks.Vertex_Before_NormalUpdated=l.replace("result","normalUpdated"));var h=e.Utilities.HasOwnProperty(i,"VertexMainEnd")?i.VertexMainEnd:null;null!=h&&""!==h&&(this.materialShaderChunks.Vertex_MainEnd=h);var c=e.Utilities.HasOwnProperty(i,"FragmentBegin")?i.FragmentBegin:null;null!=c&&""!==c&&(this.materialShaderChunks.Fragment_Begin=c);var m=e.Utilities.HasOwnProperty(i,"FragmentDefinitions")?i.FragmentDefinitions:null;null!=m&&""!==m&&(this.materialShaderChunks.Fragment_Definitions=m);var u=e.Utilities.HasOwnProperty(i,"FragmentMainBegin")?i.FragmentMainBegin:null;null!=u&&""!==u&&(this.materialShaderChunks.Fragment_MainBegin=u);var p=e.Utilities.HasOwnProperty(i,"FragmentUpdateAlbedo")?i.FragmentUpdateAlbedo:null;null!=p&&""!==p&&(this.materialShaderChunks.Fragment_Custom_Albedo=p.replace("result","surfaceAlbedo"));var f=e.Utilities.HasOwnProperty(i,"FragmentUpdateAlpha")?i.FragmentUpdateAlpha:null;null!=f&&""!==f&&(this.materialShaderChunks.Fragment_Custom_Alpha=f.replace("result","alpha"));var _=e.Utilities.HasOwnProperty(i,"FragmentMetallicRoughness")?i.FragmentMetallicRoughness:null;null!=_&&""!==_&&(this.materialShaderChunks.Fragment_MetallicRoughness=_);var y=e.Utilities.HasOwnProperty(i,"FragmentMicroSurface")?i.FragmentMicroSurface:null;null!=y&&""!==y&&(this.materialShaderChunks.Fragment_MicroSurface=y);var d=e.Utilities.HasOwnProperty(i,"FragmentBeforeLights")?i.FragmentBeforeLights:null;null!=d&&""!==d&&(this.materialShaderChunks.Fragment_Before_Lights=d);var v=e.Utilities.HasOwnProperty(i,"FragmentBeforeFog")?i.FragmentBeforeFog:null;null!=v&&""!==v&&(this.materialShaderChunks.Fragment_Before_Fog=v);var g=e.Utilities.HasOwnProperty(i,"FragmentBeforeFragColor")?i.FragmentBeforeFragColor:null;null!=g&&""!==g&&(this.materialShaderChunks.Fragment_Before_FragColor=g.replace("result","color"))}else e.Tools.Warn("Failed To Locate Shader Chunk Base: "+r)}},r.prototype._buildCustomShader=function(e,t,r,i,s){this._defines=s;var o=this.getShaderName();null!=o&&""!==o||(o=e),null!=o&&""!==o||(o="pbr");var n=this.locals.getDefines();if(null!=n&&null!=this._defines){var a=Object.keys(n);if(null!=a&&a.length>0){for(var l=this._defines,h=0,c=a;h<c.length;h++){var m=c[h];l[m]=n[m]}this._defines.rebuild()}}var u=0;if(null!=this._uniforms&&this._uniforms.length>0)for(u=0;u<this._uniforms.length;u++){var p=this._uniforms[u];t.indexOf(p)===-1&&t.push(p)}if(u=0,null!=this._samplers&&this._samplers.length>0)for(u=0;u<this._samplers.length;u++){var f=this._samplers[u];i.indexOf(f)===-1&&i.push(f)}return this.enableShaderChunks===!0?this._createShaderChunks(o):o},r.prototype._createShaderChunks=function(t){if(this._isCreatedShader)return this._createdShaderName;this._isCreatedShader=!1;var r=this.getShaderChunk();null!=r&&""!==r||(r=t),e.UniversalShaderDefines.ShaderIndexer++;var i=(r+"Custom"+e.UniversalShaderDefines.ShaderIndexer).trim(),s=e.Effect.ShadersStore[t+"VertexShader"],o=e.Effect.ShadersStore[t+"PixelShader"];this.updateShaderChunks();var n=i+"VertexShader";e.Effect.ShadersStore[n]=s.replace("#define CUSTOM_VERTEX_BEGIN",this.materialShaderChunks.Vertex_Begin?this.materialShaderChunks.Vertex_Begin:"").replace("#define CUSTOM_VERTEX_DEFINITIONS",this.materialShaderChunks.Vertex_Definitions?this.materialShaderChunks.Vertex_Definitions:"").replace("#define CUSTOM_VERTEX_MAIN_BEGIN",this.materialShaderChunks.Vertex_MainBegin?this.materialShaderChunks.Vertex_MainBegin:"").replace("#define CUSTOM_VERTEX_UPDATE_POSITION",this.materialShaderChunks.Vertex_Before_PositionUpdated?this.materialShaderChunks.Vertex_Before_PositionUpdated:"").replace("#define CUSTOM_VERTEX_UPDATE_NORMAL",this.materialShaderChunks.Vertex_Before_NormalUpdated?this.materialShaderChunks.Vertex_Before_NormalUpdated:"").replace("#define CUSTOM_VERTEX_MAIN_END",this.materialShaderChunks.Vertex_MainEnd?this.materialShaderChunks.Vertex_MainEnd:"");var a=i+"PixelShader";return e.Effect.ShadersStore[a]=o.replace("#define CUSTOM_FRAGMENT_BEGIN",this.materialShaderChunks.Fragment_Begin?this.materialShaderChunks.Fragment_Begin:"").replace("#define CUSTOM_FRAGMENT_DEFINITIONS",this.materialShaderChunks.Fragment_Definitions?this.materialShaderChunks.Fragment_Definitions:"").replace("#define CUSTOM_FRAGMENT_MAIN_BEGIN",this.materialShaderChunks.Fragment_MainBegin?this.materialShaderChunks.Fragment_MainBegin:"").replace("#define CUSTOM_FRAGMENT_UPDATE_ALBEDO",this.materialShaderChunks.Fragment_Custom_Albedo?this.materialShaderChunks.Fragment_Custom_Albedo:"").replace("#define CUSTOM_FRAGMENT_UPDATE_ALPHA",this.materialShaderChunks.Fragment_Custom_Alpha?this.materialShaderChunks.Fragment_Custom_Alpha:"").replace("#define CUSTOM_FRAGMENT_UPDATE_METALLICROUGHNESS",this.materialShaderChunks.Fragment_MetallicRoughness?this.materialShaderChunks.Fragment_MetallicRoughness:"").replace("#define CUSTOM_FRAGMENT_UPDATE_MICROSURFACE",this.materialShaderChunks.Fragment_MicroSurface?this.materialShaderChunks.Fragment_MicroSurface:"").replace("#define CUSTOM_FRAGMENT_BEFORE_LIGHTS",this.materialShaderChunks.Fragment_Before_Lights?this.materialShaderChunks.Fragment_Before_Lights:"").replace("#define CUSTOM_FRAGMENT_BEFORE_FOG",this.materialShaderChunks.Fragment_Before_Fog?this.materialShaderChunks.Fragment_Before_Fog:"").replace("#define CUSTOM_FRAGMENT_BEFORE_FRAGCOLOR",this.materialShaderChunks.Fragment_Before_FragColor?this.materialShaderChunks.Fragment_Before_FragColor:""),
this._isCreatedShader=!0,this._createdShaderName=i,i},r.prototype._attachAfterBind=function(e,t){var r,i=this.getScene();if(i.texturesEnabled)for(r in this._textures){var s=this._textures[r];null!=s&&(t.setTexture(r,s),t.setFloat2(r+"Infos",s.coordinatesIndex,s.level),t.setMatrix(r+"Matrix",s.getTextureMatrix()))}for(r in this._vectors4)t.setVector4(r,this._vectors4[r]);for(r in this._floats)t.setFloat(r,this._floats[r])},r.prototype._setupAttachAfterBind=function(){var e=this,t=this._afterBind;this._afterBind=function(r,i){if(e._attachAfterBind(r,i),t)try{t(r,i)}catch(s){}}},r}(e.PBRMaterial);e.UniversalAlbedoMaterial=n,e._TypeStore.RegisteredTypes.UniversalAlbedoMaterial=n;var a=function(t){function r(r,i){var s=t.call(this,r,i)||this;return s.universalMaterial=!0,s.locals=null,s.terrainInfo=null,s._defines=null,s._uniforms=[],s._samplers=[],s._textures={},s._vectors4={},s._floats={},s.locals=new e.UniversalShaderDefines,s._defines=null,s._setupAttachAfterBind(),s.enableShaderChunks=!1,s.materialShaderChunks=new e.UniversalDiffuseChunks,s.customShaderNameResolve=s._buildCustomShader,s.customShaderChunkResolve(),s}return __extends(r,t),r.prototype.updateShaderChunks=function(){},r.prototype.getClassName=function(){return"UniversalDiffuseMaterial"},r.prototype.getShaderName=function(){return"default"},r.prototype.getShaderChunk=function(){return null},r.prototype.getShaderDefines=function(){return this._defines},r.prototype.getTexture=function(e){return this._textures[e]},r.prototype.getVector4=function(e){return this._vectors4[e]},r.prototype.getFloat=function(e){return this._floats[e]},r.prototype.setTexture=function(e,t,r){return void 0===r&&(r=!1),r===!0&&this.checkSampler(e),this._textures[e]=t,this},r.prototype.setVector4=function(e,t,r){return void 0===r&&(r=!1),r===!0&&this.checkUniform(e),this._vectors4[e]=t,this},r.prototype.setFloat=function(e,t,r){return void 0===r&&(r=!1),r===!0&&this.checkUniform(e),this._floats[e]=t,this},r.prototype.checkUniform=function(e){this._uniforms.indexOf(e)===-1&&(this._uniforms.push(e),this.locals.defineBoolean(e.toUpperCase()))},r.prototype.checkSampler=function(e){this._samplers.indexOf(e)===-1&&(this._samplers.push(e),this.locals.defineBoolean(e.toUpperCase()),this.checkUniform(e+"Infos"),this.checkUniform(e+"Matrix"))},r.prototype.getAnimatables=function(){var e=t.prototype.getAnimatables.call(this);for(var r in this._textures){var i=this._textures[r];i&&i.animations&&i.animations.length>0&&e.push(i)}return e},r.prototype.getActiveTextures=function(){var e=t.prototype.getActiveTextures.call(this);for(var r in this._textures){var i=this._textures[r];i&&e.push(i)}return e},r.prototype.hasTexture=function(e){if(t.prototype.hasTexture.call(this,e))return!0;var r=!1;for(var i in this._textures){var s=this._textures[i];if(s===s){r=!0;break}}return r},r.prototype.dispose=function(e,r){if(r)for(var i in this._textures){var s=this._textures[i];s&&s.dispose(),this._textures[i]=null}this._textures={},t.prototype.dispose.call(this,e,r)},r.prototype.clone=function(t){var r,i=this,s=e.SerializationHelper.Clone(function(){return new e.UniversalDiffuseMaterial(t,i.getScene())},this);s._textures={};for(r in this._textures){var o=this._textures[r];o&&s.setTexture(r,o.clone(),!0)}s._vectors4={};for(r in this._vectors4)s.setVector4(r,this._vectors4[r].clone(),!0);s._floats={};for(r in this._floats)s.setFloat(r,this._floats[r],!0);return s},r.prototype.serialize=function(){var t,r=e.SerializationHelper.Serialize(this);r.customType="BABYLON.UniversalDiffuseMaterial",r.textures={};for(t in this._textures){var i=this._textures[t];i&&(r.textures[t]=i.serialize())}r.vectors4={};for(t in this._vectors4)r.vectors4[t]=this._vectors4[t].asArray();r.floats={};for(t in this._floats)r.floats[t]=this._floats[t];return r},r.Parse=function(t,r,i){var s,o=e.SerializationHelper.Parse(function(){return new e.UniversalDiffuseMaterial(t.name,r)},t,r,i);for(s in t.textures){var n=t.textures[s];n&&o.setTexture(s,e.Texture.Parse(n,r,i),!0)}for(s in t.vectors4)o.setVector4(s,e.Vector4.FromArray(t.vectors4[s]),!0);for(s in t.floats)o.setFloat(s,t.floats[s],!0);return o},r.prototype.customShaderChunkResolve=function(){var t=this.getShaderChunk();if(null!=t&&""!==t){var r=t+"ShaderChunks";if(null!=e.Effect.ShadersStore[r]){var i=e.Effect.ShadersStore[r],s=e.Utilities.HasOwnProperty(i,"VertexBegin")?i.VertexBegin:null;null!=s&&""!==s&&(this.materialShaderChunks.Vertex_Begin=s);var o=e.Utilities.HasOwnProperty(i,"VertexDefinitions")?i.VertexDefinitions:null;null!=o&&""!==o&&(this.materialShaderChunks.Vertex_Definitions=o);var n=e.Utilities.HasOwnProperty(i,"VertexMainBegin")?i.VertexMainBegin:null;null!=n&&""!==n&&(this.materialShaderChunks.Vertex_MainBegin=n);var a=e.Utilities.HasOwnProperty(i,"VertexUpdatePosition")?i.VertexUpdatePosition:null;null!=a&&""!==a&&(this.materialShaderChunks.Vertex_Before_PositionUpdated=a.replace("result","positionUpdated"));var l=e.Utilities.HasOwnProperty(i,"VertexUpdateNormal")?i.VertexUpdateNormal:null;null!=l&&""!==l&&(this.materialShaderChunks.Vertex_Before_NormalUpdated=l.replace("result","normalUpdated"));var h=e.Utilities.HasOwnProperty(i,"VertexMainEnd")?i.VertexMainEnd:null;null!=h&&""!==h&&(this.materialShaderChunks.Vertex_MainEnd=h);var c=e.Utilities.HasOwnProperty(i,"FragmentBegin")?i.FragmentBegin:null;null!=c&&""!==c&&(this.materialShaderChunks.Fragment_Begin=c);var m=e.Utilities.HasOwnProperty(i,"FragmentDefinitions")?i.FragmentDefinitions:null;null!=m&&""!==m&&(this.materialShaderChunks.Fragment_Definitions=m);var u=e.Utilities.HasOwnProperty(i,"FragmentMainBegin")?i.FragmentMainBegin:null;null!=u&&""!==u&&(this.materialShaderChunks.Fragment_MainBegin=u);var p=e.Utilities.HasOwnProperty(i,"FragmentUpdateDiffuse")?i.FragmentUpdateDiffuse:null;null!=p&&""!==p&&(this.materialShaderChunks.Fragment_Custom_Diffuse=p.replace("result","diffuseColor"));var f=e.Utilities.HasOwnProperty(i,"FragmentUpdateAlpha")?i.FragmentUpdateAlpha:null;null!=f&&""!==f&&(this.materialShaderChunks.Fragment_Custom_Alpha=f.replace("result","alpha"));var _=e.Utilities.HasOwnProperty(i,"FragmentBeforeLights")?i.FragmentBeforeLights:null;null!=_&&""!==_&&(this.materialShaderChunks.Fragment_Before_Lights=_);var y=e.Utilities.HasOwnProperty(i,"FragmentBeforeFog")?i.FragmentBeforeFog:null;null!=y&&""!==y&&(this.materialShaderChunks.Fragment_Before_Fog=y);var d=e.Utilities.HasOwnProperty(i,"FragmentBeforeFragColor")?i.FragmentBeforeFragColor:null;null!=d&&""!==d&&(this.materialShaderChunks.Fragment_Before_FragColor=d.replace("result","color"))}else e.Tools.Warn("Failed To Locate Shader Chunk Base: "+r)}},r.prototype._buildCustomShader=function(e,t,r,i,s){this._defines=s;var o=this.getShaderName();null!=o&&""!==o||(o=e),null!=o&&""!==o||(o="default");var n=this.locals.getDefines();if(null!=n&&null!=this._defines){var a=Object.keys(n);if(null!=a&&a.length>0){for(var l=this._defines,h=0,c=a;h<c.length;h++){var m=c[h];l[m]=n[m]}this._defines.rebuild()}}var u=0;if(null!=this._uniforms&&this._uniforms.length>0)for(u=0;u<this._uniforms.length;u++){var p=this._uniforms[u];t.indexOf(p)===-1&&t.push(p)}if(u=0,null!=this._samplers&&this._samplers.length>0)for(u=0;u<this._samplers.length;u++){var f=this._samplers[u];i.indexOf(f)===-1&&i.push(f)}return this.enableShaderChunks===!0?this._createShaderChunks(o):o},r.prototype._createShaderChunks=function(t){if(this._isCreatedShader)return this._createdShaderName;this._isCreatedShader=!1;var r=this.getShaderChunk();null!=r&&""!==r||(r=t),e.UniversalShaderDefines.ShaderIndexer++;var i=(r+"Custom"+e.UniversalShaderDefines.ShaderIndexer).trim(),s=e.Effect.ShadersStore[t+"VertexShader"],o=e.Effect.ShadersStore[t+"PixelShader"];this.updateShaderChunks();var n=i+"VertexShader";e.Effect.ShadersStore[n]=s.replace("#define CUSTOM_VERTEX_BEGIN",this.materialShaderChunks.Vertex_Begin?this.materialShaderChunks.Vertex_Begin:"").replace("#define CUSTOM_VERTEX_DEFINITIONS",this.materialShaderChunks.Vertex_Definitions?this.materialShaderChunks.Vertex_Definitions:"").replace("#define CUSTOM_VERTEX_MAIN_BEGIN",this.materialShaderChunks.Vertex_MainBegin?this.materialShaderChunks.Vertex_MainBegin:"").replace("#define CUSTOM_VERTEX_UPDATE_POSITION",this.materialShaderChunks.Vertex_Before_PositionUpdated?this.materialShaderChunks.Vertex_Before_PositionUpdated:"").replace("#define CUSTOM_VERTEX_UPDATE_NORMAL",this.materialShaderChunks.Vertex_Before_NormalUpdated?this.materialShaderChunks.Vertex_Before_NormalUpdated:"").replace("#define CUSTOM_VERTEX_MAIN_END",this.materialShaderChunks.Vertex_MainEnd?this.materialShaderChunks.Vertex_MainEnd:"");var a=i+"PixelShader";return e.Effect.ShadersStore[a]=o.replace("#define CUSTOM_FRAGMENT_BEGIN",this.materialShaderChunks.Fragment_Begin?this.materialShaderChunks.Fragment_Begin:"").replace("#define CUSTOM_FRAGMENT_DEFINITIONS",this.materialShaderChunks.Fragment_Definitions?this.materialShaderChunks.Fragment_Definitions:"").replace("#define CUSTOM_FRAGMENT_MAIN_BEGIN",this.materialShaderChunks.Fragment_MainBegin?this.materialShaderChunks.Fragment_MainBegin:"").replace("#define CUSTOM_FRAGMENT_UPDATE_DIFFUSE",this.materialShaderChunks.Fragment_Custom_Diffuse?this.materialShaderChunks.Fragment_Custom_Diffuse:"").replace("#define CUSTOM_FRAGMENT_UPDATE_ALPHA",this.materialShaderChunks.Fragment_Custom_Alpha?this.materialShaderChunks.Fragment_Custom_Alpha:"").replace("#define CUSTOM_FRAGMENT_BEFORE_LIGHTS",this.materialShaderChunks.Fragment_Before_Lights?this.materialShaderChunks.Fragment_Before_Lights:"").replace("#define CUSTOM_FRAGMENT_BEFORE_FOG",this.materialShaderChunks.Fragment_Before_Fog?this.materialShaderChunks.Fragment_Before_Fog:"").replace("#define CUSTOM_FRAGMENT_BEFORE_FRAGCOLOR",this.materialShaderChunks.Fragment_Before_FragColor?this.materialShaderChunks.Fragment_Before_FragColor:""),this._isCreatedShader=!0,this._createdShaderName=i,i},r.prototype._attachAfterBind=function(e,t){var r,i=this.getScene();if(i.texturesEnabled)for(r in this._textures){var s=this._textures[r];null!=s&&(t.setTexture(r,s),t.setFloat2(r+"Infos",s.coordinatesIndex,s.level),t.setMatrix(r+"Matrix",s.getTextureMatrix()))}for(r in this._vectors4)t.setVector4(r,this._vectors4[r]);for(r in this._floats)t.setFloat(r,this._floats[r])},r.prototype._setupAttachAfterBind=function(){var e=this,t=this._afterBind;this._afterBind=function(r,i){if(e._attachAfterBind(r,i),t)try{t(r,i)}catch(s){}}},r}(e.StandardMaterial);e.UniversalDiffuseMaterial=a,e._TypeStore.RegisteredTypes.UniversalDiffuseMaterial=a;var l=function(t){function r(e,r){var i=t.call(this,e,r)||this;return i.enableShaderChunks=!0,i}return __extends(r,t),r.prototype.getClassName=function(){return"UniversalTerrainMaterial"},r.prototype.getShaderName=function(){return"pbr"},r.prototype.getShaderChunk=function(){return null},r.prototype.updateShaderChunks=function(){var t="surfaceAlbedo",r="splatmapSampler",i="detailsSampler",s="normalsSampler",o=e.System.GammaCorrection;null!=this.materialShaderChunks.Vertex_Definitions&&""!==this.materialShaderChunks.Vertex_Definitions?this.materialShaderChunks.Vertex_Definitions=this.formatTerrainVertexDefintions()+this.materialShaderChunks.Vertex_Definitions:this.materialShaderChunks.Vertex_Definitions=this.formatTerrainVertexDefintions(),null!=this.materialShaderChunks.Vertex_MainEnd&&""!==this.materialShaderChunks.Vertex_MainEnd?this.materialShaderChunks.Vertex_MainEnd=this.formatTerrainVertexMainEnd()+this.materialShaderChunks.Vertex_MainEnd:this.materialShaderChunks.Vertex_MainEnd=this.formatTerrainVertexMainEnd(),null!=this.materialShaderChunks.Fragment_Definitions&&""!==this.materialShaderChunks.Fragment_Definitions?this.materialShaderChunks.Fragment_Definitions=this.formatTerrainFragmentDefintions(r,i,s)+this.materialShaderChunks.Fragment_Definitions:this.materialShaderChunks.Fragment_Definitions=this.formatTerrainFragmentDefintions(r,i,s),null!=this.materialShaderChunks.Fragment_Custom_Albedo&&""!==this.materialShaderChunks.Fragment_Custom_Albedo?this.materialShaderChunks.Fragment_Custom_Albedo=this.formatTerrainFragmentUpdateColor(this.terrainInfo,t,r,i,s,o)+this.materialShaderChunks.Fragment_Custom_Albedo:this.materialShaderChunks.Fragment_Custom_Albedo=this.formatTerrainFragmentUpdateColor(this.terrainInfo,t,r,i,s,o)},r.prototype.formatTerrainVertexDefintions=function(){return"\r\n#define TERRAIN_VERTEX_DEFINITIONS\r\n\r\nvarying vec2 vSplatmapUV;\r\n\r\n"},r.prototype.formatTerrainVertexMainEnd=function(){return"\r\n#define TERRAIN_VERTEX_MAIN_END\r\n\r\n#ifdef UV1\r\nvSplatmapUV = uv;\r\n#endif\r\n\r\n"},r.prototype.formatTerrainFragmentDefintions=function(e,t,r){return"\r\n#define TERRAIN_FRAGMENT_DEFNITIONS\r\n\r\nvarying vec2 vSplatmapUV;\r\nuniform sampler2D "+e+";\r\nuniform sampler2D "+t+";\r\nuniform sampler2D "+r+";\r\n\r\nfloat calculateMipmapLevel(const in vec2 uvs, const in vec2 size)\r\n{\r\n    vec2 dx = dFdx(uvs * size.x);\r\n    vec2 dy = dFdy(uvs * size.y);\r\n    float d = max(dot(dx, dx), dot(dy, dy));\r\n    return 0.4 * log2(d);\r\n}\r\n\r\nvec4 sampleTextureAtlas2D(const in sampler2D atlas, const in float gamma, const in vec2 tile, const in vec4 rect, in vec2 uvs, in float lod)\r\n{\r\n    if (lod < 0.0) lod = clamp(calculateMipmapLevel(uvs, vec2(tile.x, tile.x)), 0.0, tile.y);   // Tile Info (tile.xy)\r\n    float size = pow(2.0, tile.y - lod);                                                        // Tile Bits (tile.y)\r\n    float sizex = size / rect.z;                                                                // Tile Width (rect.z)\r\n    float sizey = size / rect.w;                                                                // Tile Height (rect.w)\r\n    uvs = fract(uvs);                                                                           // Perfrom Tiling (fract)\r\n    uvs.x = uvs.x * ((sizex * rect.z - 1.0) / sizex) + 0.5 / sizex + rect.z * rect.x;           // Tile Position X (rect.x)\r\n    uvs.y = uvs.y * ((sizey * rect.w - 1.0) / sizey) + 0.5 / sizey + rect.w * rect.y;           // Tile Position Y (rect.y)\r\n    vec4 color = texture2DLodEXT(atlas, uvs, lod);\r\n    if (gamma != 1.0) {\r\n        color.r = pow(color.r, gamma);\r\n        color.g = pow(color.g, gamma);\r\n        color.b = pow(color.b, gamma);\r\n    }\r\n    return color;\r\n}\r\n\r\nvec4 sampleSplatmapAtlas2D(const in sampler2D atlas, const in vec2 tile, const in vec4 rect, in vec2 uvs)\r\n{\r\n    float size = pow(2.0, tile.y);                                                              // Tile Bits (tile.y)\r\n\t   float sizex = size / rect.z;                                                                // Tile Width (rect.z)\r\n\t   float sizey = size / rect.w;                                                                // Tile Height (rect.w)\r\n\t   uvs.x = uvs.x * ((sizex * rect.z - 1.0) / sizex) + 0.5 / sizex + rect.z * rect.x;           // Tile Position X (rect.x)\r\n\t   uvs.y = uvs.y * ((sizey * rect.w - 1.0) / sizey) + 0.5 / sizey + rect.w * rect.y;           // Tile Position Y (rect.y)\r\n    return texture2D(atlas, uvs);\r\n}\r\n\r\nvec3 blendSplatmapAtlasColors(const in vec4 splatmap, in vec4 color1, in vec4 color2, in vec4 color3, in vec4 color4, in vec3 mixbuffer)\r\n{\r\n    mixbuffer += (color1.rgb * splatmap.r);\r\n    mixbuffer += (color2.rgb * splatmap.g);\r\n    mixbuffer += (color3.rgb * splatmap.b);\r\n    mixbuffer += (color4.rgb * splatmap.a);\r\n    return mixbuffer;\r\n}\r\n\r\nvec3 perturbNormalSamplerColor(mat3 cotangentFrame, vec3 samplerColor, float scale)\r\n{\r\n    vec3 map = samplerColor.xyz;\r\n    map = map * 2.00787402 - 1.00787402;\r\n    #ifdef NORMALXYSCALE\r\n        map = normalize(map * vec3(scale, scale, 1.0));\r\n    #endif\r\n    return normalize(cotangentFrame * map);\r\n}\r\n\r\n\r\n"},r.prototype.formatTerrainFragmentUpdateColor=function(e,t,r,i,s,o){void 0===o&&(o=1);var n="";if(null!=e&&null!=e.textureAtlas&&null!=e.splatmapAtlas&&e.splatmapCount>1){n="\r\n#define TERRAIN_FRAGMENT_UPDATE_COLOR\r\n\r\nvec3 normalsColor = vec3(0.5, 0.5, 1.0);\r\nvec3 normalsBuffer = vec3(0.0, 0.0, 0.0);\r\nvec3 splatmapBuffer = vec3(0.0, 0.0, 0.0);\r\nfloat autoMipMapLevel = -1.0;\r\nfloat normalCorrection = 1.0;\r\nfloat detailCorrection = "+o.toFixed(4)+";\r\n\r\n#if defined(ALBEDO) && defined("+r.toUpperCase()+") && defined("+i.toUpperCase()+")\r\n\r\n// Reset Normal Values\r\n#if defined(BUMP) || defined(PARALLAX) || defined(ANISOTROPIC)\r\n    uvOffset = vec2(0.0, 0.0);\r\n    #ifdef NORMAL\r\n        normalW = normalize(vNormalW);\r\n    #else\r\n        normalW = normalize(cross(dFdx(vPositionW), dFdy(vPositionW))) * vEyePosition.w;\r\n    #endif\r\n    #ifdef CLEARCOAT\r\n        clearCoatNormalW = normalW;\r\n    #endif\r\n    #if defined(BUMP) || defined(PARALLAX)\r\n        #if defined(TANGENT) && defined(NORMAL)\r\n            TBN = vTBN;\r\n        #else\r\n            TBN = cotangent_frame(normalW, vPositionW, vSplatmapUV);\r\n        #endif\r\n    #elif defined(ANISOTROPIC)\r\n        #if defined(TANGENT) && defined(NORMAL)\r\n            TBN = vTBN;\r\n        #else\r\n            TBN = cotangent_frame(normalW, vPositionW, vSplatmapUV, vec2(1.0, 1.0));\r\n        #endif\r\n    #endif\r\n    #ifdef PARALLAX\r\n        invTBN = transposeMat3(TBN);\r\n    #endif\r\n    normalW = perturbNormalSamplerColor(TBN, normalsColor, 1.0);\r\n#endif\r\n\r\n// Global Atlas Values\r\nfloat splatTileSize = "+e.splatmapAtlas[2].toFixed(4)+";\r\nfloat splatTileBits = "+e.splatmapAtlas[3].toFixed(4)+";\r\nfloat detailTileSize = "+e.textureAtlas[2].toFixed(4)+";\r\nfloat detailTileBits = "+e.textureAtlas[3].toFixed(4)+";\r\n\r\n// Sample splatmap textures\r\n";for(var a=0,l=0;l<e.splatmapCount;l++){a=4*l;var h=e["splatmapRect"+l];if(n+="vec4 splatmapRect"+l+" = vec4("+h[0].toFixed(4)+", "+h[1].toFixed(4)+", "+h[2].toFixed(4)+", "+h[3].toFixed(4)+");\r\n",n+="vec4 splatmapAlbedo"+l+" = sampleSplatmapAtlas2D("+r+", vec2(splatTileSize, splatTileBits), splatmapRect"+l+", (vSplatmapUV + uvOffset));\r\n",n+="vec4 textureAlbedo"+(a+0)+" = vec4(0.0, 0.0, 0.0, 1.0);\r\n",n+="vec4 textureAlbedo"+(a+1)+" = vec4(0.0, 0.0, 0.0, 1.0);\r\n",n+="vec4 textureAlbedo"+(a+2)+" = vec4(0.0, 0.0, 0.0, 1.0);\r\n",n+="vec4 textureAlbedo"+(a+3)+" = vec4(0.0, 0.0, 0.0, 1.0);\r\n",e["textureRect"+(a+0)]){var c=e["textureRect"+(a+0)],m=e["textureInfo"+(a+0)];n+="vec4 textureRect"+(a+0)+" = vec4("+c[0].toFixed(4)+", "+c[1].toFixed(4)+", "+c[2].toFixed(4)+", "+c[3].toFixed(4)+");\r\n",n+="vec2 textureScale"+(a+0)+" = vec2("+m[0].toFixed(4)+", "+m[1].toFixed(4)+");\r\n",n+="vec2 textureOffset"+(a+0)+" = vec2("+m[2].toFixed(4)+", "+m[3].toFixed(4)+");\r\n",n+="vec2 textureTileUV"+(a+0)+" = ((vSplatmapUV + textureOffset"+(a+0)+") * textureScale"+(a+0)+");\r\n",n+="textureAlbedo"+(a+0)+" = sampleTextureAtlas2D("+i+", detailCorrection, vec2(detailTileSize, detailTileBits), textureRect"+(a+0)+", textureTileUV"+(a+0)+", autoMipMapLevel);\r\n"}if(e["textureRect"+(a+1)]){var c=e["textureRect"+(a+1)],m=e["textureInfo"+(a+1)];n+="vec4 textureRect"+(a+1)+" = vec4("+c[0].toFixed(4)+", "+c[1].toFixed(4)+", "+c[2].toFixed(4)+", "+c[3].toFixed(4)+");\r\n",n+="vec2 textureScale"+(a+1)+" = vec2("+m[0].toFixed(4)+", "+m[1].toFixed(4)+");\r\n",n+="vec2 textureOffset"+(a+1)+" = vec2("+m[2].toFixed(4)+", "+m[3].toFixed(4)+");\r\n",n+="vec2 textureTileUV"+(a+1)+" = ((vSplatmapUV + textureOffset"+(a+1)+") * textureScale"+(a+1)+");\r\n",n+="textureAlbedo"+(a+1)+" = sampleTextureAtlas2D("+i+", detailCorrection, vec2(detailTileSize, detailTileBits), textureRect"+(a+1)+", textureTileUV"+(a+1)+", autoMipMapLevel);\r\n"}if(e["textureRect"+(a+2)]){var c=e["textureRect"+(a+2)],m=e["textureInfo"+(a+2)];n+="vec4 textureRect"+(a+2)+" = vec4("+c[0].toFixed(4)+", "+c[1].toFixed(4)+", "+c[2].toFixed(4)+", "+c[3].toFixed(4)+");\r\n",n+="vec2 textureScale"+(a+2)+" = vec2("+m[0].toFixed(4)+", "+m[1].toFixed(4)+");\r\n",n+="vec2 textureOffset"+(a+2)+" = vec2("+m[2].toFixed(4)+", "+m[3].toFixed(4)+");\r\n",n+="vec2 textureTileUV"+(a+2)+" = ((vSplatmapUV + textureOffset"+(a+2)+") * textureScale"+(a+2)+");\r\n",n+="textureAlbedo"+(a+2)+" = sampleTextureAtlas2D("+i+", detailCorrection, vec2(detailTileSize, detailTileBits), textureRect"+(a+2)+", textureTileUV"+(a+2)+", autoMipMapLevel);\r\n"}if(e["textureRect"+(a+3)]){var c=e["textureRect"+(a+3)],m=e["textureInfo"+(a+3)];n+="vec4 textureRect"+(a+3)+" = vec4("+c[0].toFixed(4)+", "+c[1].toFixed(4)+", "+c[2].toFixed(4)+", "+c[3].toFixed(4)+");\r\n",n+="vec2 textureScale"+(a+3)+" = vec2("+m[0].toFixed(4)+", "+m[1].toFixed(4)+");\r\n",n+="vec2 textureOffset"+(a+3)+" = vec2("+m[2].toFixed(4)+", "+m[3].toFixed(4)+");\r\n",n+="vec2 textureTileUV"+(a+3)+" = ((vSplatmapUV + textureOffset"+(a+3)+") * textureScale"+(a+3)+");\r\n",n+="textureAlbedo"+(a+3)+" = sampleTextureAtlas2D("+i+", detailCorrection, vec2(detailTileSize, detailTileBits), textureRect"+(a+3)+", textureTileUV"+(a+3)+", autoMipMapLevel);\r\n"}if(n+="splatmapBuffer = blendSplatmapAtlasColors(splatmapAlbedo"+l+", textureAlbedo"+(a+0)+", textureAlbedo"+(a+1)+", textureAlbedo"+(a+2)+", textureAlbedo"+(a+3)+", splatmapBuffer);\r\n",n+="#if defined(BUMP) || defined(PARALLAX) || defined(ANISOTROPIC)\r\n",n+="    #if defined("+s.toUpperCase()+")\r\n",n+="        vec4 normalColor"+(a+0)+" = vec4(0.0, 0.0, 0.0, 1.0);\r\n",n+="        vec4 normalColor"+(a+1)+" = vec4(0.0, 0.0, 0.0, 1.0);\r\n",n+="        vec4 normalColor"+(a+2)+" = vec4(0.0, 0.0, 0.0, 1.0);\r\n",n+="        vec4 normalColor"+(a+3)+" = vec4(0.0, 0.0, 0.0, 1.0);\r\n",e["textureRect"+(a+0)]){var u=e["normalsScale"+(a+0)];n+="        float normalScale"+(a+0)+" = "+u.toFixed(4)+";\r\n",n+="        normalColor"+(a+0)+" = sampleTextureAtlas2D("+s+", normalCorrection, vec2(detailTileSize, detailTileBits), textureRect"+(a+0)+", textureTileUV"+(a+0)+", autoMipMapLevel);\r\n",n+="        normalColor"+(a+0)+".rgb = perturbNormalSamplerColor(TBN, normalColor"+(a+0)+".rgb, normalScale"+(a+0)+");\r\n"}if(e["textureRect"+(a+1)]){var u=e["normalsScale"+(a+1)];n+="        float normalScale"+(a+1)+" = "+u.toFixed(4)+";\r\n",n+="        normalColor"+(a+1)+" = sampleTextureAtlas2D("+s+", normalCorrection, vec2(detailTileSize, detailTileBits), textureRect"+(a+1)+", textureTileUV"+(a+1)+", autoMipMapLevel);\r\n",n+="        normalColor"+(a+1)+".rgb = perturbNormalSamplerColor(TBN, normalColor"+(a+1)+".rgb, normalScale"+(a+1)+");\r\n"}if(e["textureRect"+(a+2)]){var u=e["normalsScale"+(a+2)];n+="        float normalScale"+(a+2)+" = "+u.toFixed(4)+";\r\n",n+="        normalColor"+(a+2)+" = sampleTextureAtlas2D("+s+", normalCorrection, vec2(detailTileSize, detailTileBits), textureRect"+(a+2)+", textureTileUV"+(a+2)+", autoMipMapLevel);\r\n",n+="        normalColor"+(a+2)+".rgb = perturbNormalSamplerColor(TBN, normalColor"+(a+2)+".rgb, normalScale"+(a+2)+");\r\n"}if(e["textureRect"+(a+3)]){var u=e["normalsScale"+(a+3)];n+="        float normalScale"+(a+3)+" = "+u.toFixed(4)+";\r\n",n+="        normalColor"+(a+3)+" = sampleTextureAtlas2D("+s+", normalCorrection, vec2(detailTileSize, detailTileBits), textureRect"+(a+3)+", textureTileUV"+(a+3)+", autoMipMapLevel);\r\n",n+="        normalColor"+(a+3)+".rgb = perturbNormalSamplerColor(TBN, normalColor"+(a+3)+".rgb, normalScale"+(a+3)+");\r\n"}n+="        normalsBuffer = blendSplatmapAtlasColors(splatmapAlbedo"+l+", normalColor"+(a+0)+", normalColor"+(a+1)+", normalColor"+(a+2)+", normalColor"+(a+3)+", normalsBuffer);\r\n",n+="    #endif\r\n",n+="#endif\r\n",n+="\r\n"}n+="// Update Color Values\r\n"+t+".rgb = splatmapBuffer;\r\n#if defined(BUMP) || defined(PARALLAX) || defined(ANISOTROPIC)\r\n    #if defined("+s.toUpperCase()+")\r\n        normalW = normalsBuffer;\r\n    #endif\r\n    #if defined(FORCENORMALFORWARD) && defined(NORMAL)\r\n        vec3 faceNormal = normalize(cross(dFdx(vPositionW), dFdy(vPositionW))) * vEyePosition.w;\r\n        #if defined(TWOSIDEDLIGHTING)\r\n            faceNormal = gl_FrontFacing ? faceNormal : -faceNormal;\r\n        #endif\r\n        normalW *= sign(dot(normalW, faceNormal));\r\n    #endif\r\n    #if defined(TWOSIDEDLIGHTING) && defined(NORMAL)\r\n        normalW = gl_FrontFacing ? normalW : -normalW;\r\n    #endif\r\n#endif\r\n\r\n#endif\r\n\r\n"}return n},r}(e.UniversalAlbedoMaterial);e.UniversalTerrainMaterial=l,e._TypeStore.RegisteredTypes.UniversalTerrainMaterial=l}(BABYLON||(BABYLON={}));var __extends=this&&this.__extends||function(){var e=function(t,r){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(t,r)};return function(t,r){function i(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(i.prototype=r.prototype,new i)}}(),BABYLON;!function(e){var t=function(t){function r(e,r,i){return void 0===i&&(i={}),t.call(this,e,r,i)||this}return __extends(r,t),r.prototype.start=function(){},r.prototype.update=function(){},r.prototype.after=function(){},r.prototype.destroy=function(){},r.IsXboxLivePluginEnabled=function(){return!!window.isXboxLivePluginEnabled&&window.isXboxLivePluginEnabled()},r.IsXboxLiveUserSignedIn=function(t,r){if(void 0===t&&(t=null),void 0===r&&(r=e.PlayerNumber.One),e.WindowsPlatform.IsXboxLivePluginEnabled()){var i=null!=t?e.WindowsPlatform.GetXboxLiveSystemUser(t,r):e.WindowsPlatform.GetXboxLiveUser(r);return null!=i&&1==i.isSignedIn}return!1},r.XboxLiveUserSignIn=function(t,r,i,s){void 0===t&&(t=e.PlayerNumber.One),e.WindowsPlatform.IsXboxLivePluginEnabled()&&e.WindowsPlatform.XboxLiveUserSilentSignIn(t,function(o){o.status===Microsoft.Xbox.Services.System.SignInStatus.userInteractionRequired?e.WindowsPlatform.XboxLiveUserDialogSignIn(t,function(e){r&&r(e)},i,s):r&&r(o)},i,s)},r.XboxLiveUserSilentSignIn=function(t,r,i,s){return void 0===t&&(t=e.PlayerNumber.One),e.WindowsPlatform.IsXboxLivePluginEnabled()?e.WindowsPlatform.GetXboxLiveUser(t).signInSilentlyAsync(null).then(r,i,s):null},r.XboxLiveUserDialogSignIn=function(t,r,i,s){return void 0===t&&(t=e.PlayerNumber.One),e.WindowsPlatform.IsXboxLivePluginEnabled()?e.WindowsPlatform.GetXboxLiveUser(t).signInAsync(null).then(r,i,s):null},r.LoadXboxLiveUserProfile=function(t,r,i,s){return void 0===t&&(t=e.PlayerNumber.One),e.WindowsPlatform.IsXboxLivePluginEnabled()?e.WindowsPlatform.GetXboxLiveUserContext(t).profileService.getUserProfileAsync(e.WindowsPlatform.GetXboxLiveUser(t).xboxUserId).then(r,i,s):null},r.GetXboxLiveUser=function(t){void 0===t&&(t=e.PlayerNumber.One);var r=null;if(e.WindowsPlatform.IsXboxLivePluginEnabled())switch(t){case e.PlayerNumber.One:r=window.BabylonToolkit.XboxLive.Plugin.getXboxLiveUserOne();break;case e.PlayerNumber.Two:r=window.BabylonToolkit.XboxLive.Plugin.getXboxLiveUserTwo();break;case e.PlayerNumber.Three:r=window.BabylonToolkit.XboxLive.Plugin.getXboxLiveUserThree();break;case e.PlayerNumber.Four:r=window.BabylonToolkit.XboxLive.Plugin.getXboxLiveUserFour()}return r},r.GetXboxLiveSystemUser=function(t,r){void 0===r&&(r=e.PlayerNumber.One);var i=null;if(e.WindowsPlatform.IsXboxLivePluginEnabled())switch(r){case e.PlayerNumber.One:i=window.BabylonToolkit.XboxLive.Plugin.getXboxLiveSystemUserOne(t);break;case e.PlayerNumber.Two:i=window.BabylonToolkit.XboxLive.Plugin.getXboxLiveSystemUserTwo(t);break;case e.PlayerNumber.Three:i=window.BabylonToolkit.XboxLive.Plugin.getXboxLiveSystemUserThree(t);break;case e.PlayerNumber.Four:i=window.BabylonToolkit.XboxLive.Plugin.getXboxLiveSystemUserFour(t)}return i},r.GetXboxLiveUserContext=function(t){void 0===t&&(t=e.PlayerNumber.One);var r=null;if(e.WindowsPlatform.IsXboxLivePluginEnabled())switch(t){case e.PlayerNumber.One:r=window.BabylonToolkit.XboxLive.Plugin.getXboxLiveContextOne();break;case e.PlayerNumber.Two:r=window.BabylonToolkit.XboxLive.Plugin.getXboxLiveContextTwo();break;case e.PlayerNumber.Three:r=window.BabylonToolkit.XboxLive.Plugin.getXboxLiveContextThree();break;case e.PlayerNumber.Four:r=window.BabylonToolkit.XboxLive.Plugin.getXboxLiveContextFour()}return r},r.ResetXboxLiveUserContext=function(t){if(void 0===t&&(t=e.PlayerNumber.One),e.WindowsPlatform.IsXboxLivePluginEnabled()&&e.WindowsPlatform.IsXboxLivePluginEnabled())switch(t){case e.PlayerNumber.One:window.BabylonToolkit.XboxLive.Plugin.resetXboxLiveUserContextOne();break;case e.PlayerNumber.Two:window.BabylonToolkit.XboxLive.Plugin.resetXboxLiveUserContextTwo();break;case e.PlayerNumber.Three:window.BabylonToolkit.XboxLive.Plugin.resetXboxLiveUserContextThree();break;case e.PlayerNumber.Four:window.BabylonToolkit.XboxLive.Plugin.resetXboxLiveUserContextFour()}},r.GetXboxLiveContextProperty=function(t){return e.WindowsPlatform.IsXboxLivePluginEnabled()?window.BabylonToolkit.XboxLive.Plugin.getXboxLiveContextProperty(t):null},r.SetXboxLiveContextProperty=function(t,r){e.WindowsPlatform.IsXboxLivePluginEnabled()&&window.BabylonToolkit.XboxLive.Plugin.setXboxLiveContextProperty(t,r)},r.ResetXboxLivePropertyContexts=function(){e.WindowsPlatform.IsXboxLivePluginEnabled()&&window.BabylonToolkit.XboxLive.Plugin.resetXboxLivePropertyContexts()},r.SetXboxLiveSignOutHandler=function(t){void 0===t&&(t=null),e.WindowsPlatform.IsXboxLivePluginEnabled()&&(window.BabylonToolkit.XboxLive.Plugin.onusersignout=t)},r}(e.ScriptComponent);e.WindowsPlatform=t}(BABYLON||(BABYLON={})),BABYLON.SceneManager.IsXboxOne()&&navigator.gamepadInputEmulation&&(navigator.gamepadInputEmulation="gamepad"),BABYLON.SceneManager.IsWindows()&&"undefined"!=typeof Windows.UI.ViewManagement&&"undefined"!=typeof Windows.UI.ViewManagement.ApplicationViewBoundsMode&&"undefined"!=typeof Windows.UI.ViewManagement.ApplicationViewBoundsMode.useCoreWindow&&Windows.UI.ViewManagement.ApplicationView.getForCurrentView().setDesiredBoundsMode(Windows.UI.ViewManagement.ApplicationViewBoundsMode.useCoreWindow);

// worker.js
var versionStamp = '###VERSION###';
var installFiles = ['###INSTALL###'];
// ..
// Post Service Worker Version Message
// ..
self.addEventListener('message', function(evt) {
    if (evt.data != null && evt.data === 'version' && evt.ports != null && evt.ports.length > 0) {
        var port = evt.ports[0];
        if (port && port.postMessage) {
            // console.log('WORKER: Version check: ' + versionStamp);
            port.postMessage(versionStamp);
        }
    }
});
// ..
// Install Service Worker File System
// ..
self.addEventListener('install', function(evt) {
    evt.waitUntil(
        caches.open(versionStamp).then(function(cache) {
            // console.log('WORKER: Fetching cache: ' + versionStamp);
            var cachePromises = installFiles.map(function(urlToPrefetch) {
                var url = new URL(urlToPrefetch, location.href);
                url.search += (url.search ? '&' : '?') + 'time=' + new Date().getTime().toString();
                var request = new Request(url, { mode: 'no-cors' });
                return fetch(request, { cache: 'no-store' }).then(function(response) {
                    if (response.status >= 400) throw new Error('request for ' + urlToPrefetch + ' failed with status ' + response.statusText);
                    return cache.put(urlToPrefetch, response);
                }).catch(function(error) {
                    // console.warn('WORKER: Not caching ' + urlToPrefetch + ' due to ' + error);
                });
            });
            return Promise.all(cachePromises).then(function() {
                // console.log('WORKER: Cache updated: ' + versionStamp);
                return self.skipWaiting();
            });
        }).catch(function(error) {
            // console.warn('WORKER: Pre-Fetching Failed: ', error);
        })
    );
});
// ..
// Activate Service Worker File System
// ..
self.addEventListener('activate', function(evt) {
    evt.waitUntil(
        caches.keys().then(function(cacheNames) {
            return Promise.all(
                cacheNames.map(function(cache) {
                    if (cache !== versionStamp) {
                        // console.log('WORKER: Cleaning cache: ' + cache);
                        return caches.delete(cache);
                    }
                })
            );
        })
    );
    // console.log('WORKER: Activate cache: ' + versionStamp);
    return self.clients.claim();
});
// ..
// Fetch Service Worker Request Files
// ..
self.addEventListener('fetch', function(evt) {
    // Chrome Dev Tools Bug - Temporary Workaround
    // https://bugs.chromium.org/p/chromium/issues/detail?id=823392    
    if (evt.request.cache === 'only-if-cached' && evt.request.mode !== 'same-origin') {
        var oStrangeRequest = evt.request.clone();
        console.warn('Chrome Dev Tools. Request cache has only-if-cached, but not same-origin.', oStrangeRequest.cache, oStrangeRequest.mode, 'request redirect:', oStrangeRequest.redirect, oStrangeRequest.url, oStrangeRequest);
        return;
    }
    evt.respondWith(
        caches.match(evt.request).then(function(response) {
            return response || fetch(evt.request, { cache: 'no-store' });
        })
    );
});

// BabylonToolkit2019.js
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var PROJECT;
(function (PROJECT) {
    /**
     * Babylon Script Component
     * @class DebugInformation
     */
    var DebugInformation = /** @class */ (function (_super) {
        __extends(DebugInformation, _super);
        function DebugInformation(transform, scene, properties) {
            if (properties === void 0) { properties = {}; }
            var _this = _super.call(this, transform, scene, properties) || this;
            _this.keys = true;
            _this.show = true;
            _this.popup = false;
            _this.views = false;
            _this.xbox = false;
            _this.keys = _this.getEditorProperty("enableDebugKeys", _this.keys);
            _this.show = _this.getEditorProperty("showDebugLabels", _this.show);
            _this.popup = _this.getEditorProperty("popupDebugPanel", _this.popup);
            _this.views = _this.getEditorProperty("togglePlayerViews", _this.views);
            _this.xbox = _this.getEditorProperty("allowXboxLiveSignIn", _this.xbox);
            // ..
            if (BABYLON.SceneManager.IsWindows())
                _this.popup = false;
            BABYLON.Tools.Log("Debug information overlay loaded");
            return _this;
        }
        DebugInformation.prototype.start = function () {
            var _this = this;
            //this.screen = document.getElementById("screen");
            //this.toggle = document.getElementById("toggle");
            //this.signin = document.getElementById("signin");
            //this.reload = document.getElementById("reload");
            //this.mouse = document.getElementById("mouse");
            //this.debug = document.getElementById("debug");
            if (this.show === true) {
                /*
                if (this.keys === true) {
                    if (!BABYLON.SceneManager.IsXboxOne()) {
                        if (this.screen) this.screen.innerHTML = "F - Show Full Screen";
                    }
                    if (BABYLON.CameraSystem.IsMultiPlayerView() && this.views === true) {
                        if (this.toggle) {
                            if (BABYLON.SceneManager.IsXboxOne()) {
                                this.toggle.style.top = "29px";
                            }
                            this.toggle.innerHTML = "1 - 4 Toggle Player View";
                        }
                    }
                    if (BABYLON.SceneManager.IsXboxLivePluginEnabled() && this.xbox === true) {
                        if (this.signin) {
                            if (BABYLON.SceneManager.IsXboxOne()) {
                                this.signin.style.top = "49px";
                            }
                            this.signin.innerHTML = "X - Xbox Live Sign In";
                        }
                    }
                    if (this.mouse) this.mouse.innerHTML = (BABYLON.SceneManager.IsXboxOne()) ? "M - Mouse" : "";
                    if (this.reload) this.reload.innerHTML = "R - Reload";
                    if (this.debug) this.debug.innerHTML = "P - Debug";
                }
                */
            }
            if (this.keys === true) {
                if (this.views === true) {
                    console.log("Enable Multiplayer Keys");
                    BABYLON.SceneManager.OnKeyboardPress(BABYLON.UserInputKey.Num1, function () {
                        BABYLON.UniversalCameraSystem.SetMultiPlayerViewLayout(_this.scene, 1);
                        console.log("1 player pressed");
                    });
                    BABYLON.SceneManager.OnKeyboardPress(BABYLON.UserInputKey.Num2, function () {
                        BABYLON.UniversalCameraSystem.SetMultiPlayerViewLayout(_this.scene, 2);
                        console.log("2 players pressed");
                    });
                    BABYLON.SceneManager.OnKeyboardPress(BABYLON.UserInputKey.Num3, function () {
                        BABYLON.UniversalCameraSystem.SetMultiPlayerViewLayout(_this.scene, 3);
                        console.log("3 players pressed");
                    });
                    BABYLON.SceneManager.OnKeyboardPress(BABYLON.UserInputKey.Num4, function () {
                        BABYLON.UniversalCameraSystem.SetMultiPlayerViewLayout(_this.scene, 4);
                        console.log("4 players pressed");
                    });
                }
                BABYLON.SceneManager.OnKeyboardPress(BABYLON.UserInputKey.R, function () {
                    window.location.reload();
                });
                BABYLON.SceneManager.OnKeyboardPress(BABYLON.UserInputKey.I, function () {
                    if (_this.popup === true) {
                        BABYLON.SceneManager.PopupDebug(_this.scene);
                    }
                    else {
                        BABYLON.SceneManager.ToggleDebug(_this.scene, true, null);
                    }
                });
                if (BABYLON.SceneManager.IsXboxOne()) {
                    if (navigator.gamepadInputEmulation) {
                        BABYLON.SceneManager.OnKeyboardPress(BABYLON.UserInputKey.M, function () {
                            if (navigator.gamepadInputEmulation !== "mouse") {
                                navigator.gamepadInputEmulation = "mouse";
                            }
                            else {
                                navigator.gamepadInputEmulation = "gamepad";
                            }
                        });
                    }
                }
                else {
                    BABYLON.SceneManager.OnKeyboardPress(BABYLON.UserInputKey.F, function () {
                        //BABYLON.Tools.RequestFullscreen(document.documentElement);
                        _this.scene.getEngine().enterFullscreen(true);
                    });
                }
                if (BABYLON.WindowsPlatform.IsXboxLivePluginEnabled() && this.xbox === true) {
                    BABYLON.SceneManager.OnKeyboardPress(BABYLON.UserInputKey.X, function () {
                        var player = BABYLON.PlayerNumber.One;
                        if (!BABYLON.WindowsPlatform.IsXboxLiveUserSignedIn(null, player)) {
                            BABYLON.Tools.Log("===> Trying Xbox Live Sign In For Player: " + player.toString());
                            BABYLON.WindowsPlatform.XboxLiveUserSignIn(player, function (result) {
                                var user = BABYLON.WindowsPlatform.GetXboxLiveUser(player);
                                var msg = "(" + user.xboxUserId + ") - " + user.gamertag;
                                BABYLON.SceneManager.AlertMessage(msg, "Xbox Live User Signed In");
                            }, function (err) {
                                console.log(err);
                                var msg = "Encountered Sign Error";
                                BABYLON.Tools.Warn(msg);
                                BABYLON.SceneManager.AlertMessage(msg, "Xbox Live Warning");
                            });
                        }
                        else {
                            BABYLON.Tools.Warn("Xbox Live User Already Signed In");
                            BABYLON.SceneManager.AlertMessage("User Already Signed In", "Xbox Live Warning");
                        }
                    });
                }
            }
            // Default Print To Screen Text
            var printColor = (this.scene.getEngine().webGLVersion < 2) ? "red" : "#0c0";
            var graphicsVersion = BABYLON.SceneManager.GetWebGLVersionString(this.scene);
            BABYLON.Utilities.PrintToScreen(graphicsVersion, printColor);
        };
        DebugInformation.prototype.destroy = function () {
            //this.screen = null;
            //this.toggle = null;
            //this.signin = null;
            //this.reload = null;
            //this.mouse = null;
            //this.debug = null;
        };
        return DebugInformation;
    }(BABYLON.ScriptComponent));
    PROJECT.DebugInformation = DebugInformation;
})(PROJECT || (PROJECT = {}));
var PROJECT;
(function (PROJECT) {
    /**
     * Babylon Script Component
     * @class SoftbodyMesh
     */
    var SoftbodyMesh = /** @class */ (function (_super) {
        __extends(SoftbodyMesh, _super);
        function SoftbodyMesh(transform, scene, properties) {
            if (properties === void 0) { properties = {}; }
            var _this = _super.call(this, transform, scene, properties) || this;
            var type = _this.getEditorProperty("type", 0);
            var options = {
                mass: _this.getEditorProperty("mass", 1),
                friction: _this.getEditorProperty("friction", 0.3),
                restitution: _this.getEditorProperty("restitution", 0.3),
                pressure: _this.getEditorProperty("pressure", 200),
                velocityIterations: _this.getEditorProperty("velocityIterations", 20),
                positionIterations: _this.getEditorProperty("positionIterations", 20),
                stiffness: _this.getEditorProperty("stiffness", 1),
                margin: _this.getEditorProperty("margin", 0.0),
                damping: _this.getEditorProperty("damping", 0.01)
            };
            var mesh = _this.getTransformMesh();
            var forceSharedVertices = _this.getEditorProperty("forceSharedVertices", true);
            if (forceSharedVertices === true)
                mesh.forceSharedVertices();
            var increaseVertices = _this.getEditorProperty("increaseVertices", 4);
            if (increaseVertices > 0)
                mesh.increaseVertices(increaseVertices);
            var impostor = null;
            if (type === 0) { // Mesh
                impostor = new BABYLON.PhysicsImpostor(mesh, BABYLON.PhysicsImpostor.SoftbodyImpostor, options, _this.scene);
            }
            else if (type === 1) { // Cloth
                impostor = new BABYLON.PhysicsImpostor(mesh, BABYLON.PhysicsImpostor.ClothImpostor, options, _this.scene);
            }
            else if (type === 2) { // Rope
                impostor = new BABYLON.PhysicsImpostor(mesh, BABYLON.PhysicsImpostor.RopeImpostor, options, _this.scene);
            }
            if (impostor != null) {
                impostor.executeNativeFunction(function (word, body) {
                    // TODO: Setup Native Softbody Physics Options
                });
            }
            return _this;
        }
        SoftbodyMesh.prototype.start = function () {
            // Start render loop function
        };
        SoftbodyMesh.prototype.update = function () {
            // Update render loop function
        };
        SoftbodyMesh.prototype.after = function () {
            // After render loop function
        };
        SoftbodyMesh.prototype.destroy = function () {
            // Destroy component function
        };
        return SoftbodyMesh;
    }(BABYLON.ScriptComponent));
    PROJECT.SoftbodyMesh = SoftbodyMesh;
})(PROJECT || (PROJECT = {}));
var PROJECT;
(function (PROJECT) {
    /**
     * Babylon Script Component
     * @class FirstPersonController
     */
    var FirstPersonController = /** @class */ (function (_super) {
        __extends(FirstPersonController, _super);
        function FirstPersonController(transform, scene, properties) {
            if (properties === void 0) { properties = {}; }
            var _this = _super.call(this, transform, scene, properties) || this;
            _this.deltaFactor = 2.0;
            _this.attachCamera = true;
            _this.cameraPivot = null;
            _this.cameraRigger = null;
            _this.movementSpeed = 1.0;
            _this.jumpingVelocity = 10.0;
            _this.playerMovement = BABYLON.Vector3.Zero();
            _this.playerTurnRate = 0.0;
            _this.cameraPitchRate = 0.0;
            _this.horzSensitivity = 1.0;
            _this.vertSensitivity = 1.0;
            _this.mouseSensitivity = 1.0;
            _this.minimumPitchAngle = -60.0;
            _this.maximumPitchAngle = 60.0;
            _this.isCharacterGrounded = false;
            _this.isCharacterJumpFrame = false;
            _this.cameraEulerAngles = BABYLON.Vector3.Zero();
            _this.characterController = null;
            _this.buttonJump = BABYLON.Xbox360Button.A;
            _this.keyboardJump = BABYLON.UserInputKey.SpaceBar;
            _this.playerNumber = BABYLON.PlayerNumber.One;
            _this.playerDeltaX = 0.0;
            _this.playerDeltaZ = 0.0;
            _this.playerMouseX = 0.0;
            _this.playerMouseY = 0.0;
            _this.playerEyeLevel = 0.5;
            _this.attachCamera = _this.getEditorProperty("attachCamera", _this.attachCamera);
            _this.playerNumber = _this.getEditorProperty("playerNumber", _this.playerNumber);
            _this.playerEyeLevel = _this.getEditorProperty("playerEyeLevel", _this.playerEyeLevel);
            _this.movementSpeed = _this.getEditorProperty("movementSpeed", _this.movementSpeed);
            _this.mouseSensitivity = _this.getEditorProperty("mouseSensitivity", _this.mouseSensitivity);
            _this.minimumPitchAngle = _this.getEditorProperty("minimumPitchAngle", _this.minimumPitchAngle);
            _this.maximumPitchAngle = _this.getEditorProperty("maximumPitchAngle", _this.maximumPitchAngle);
            _this.vertSensitivity = _this.getEditorProperty("verticalSensitivity", _this.vertSensitivity);
            _this.horzSensitivity = _this.getEditorProperty("horizontalSensitivity", _this.horzSensitivity);
            _this.jumpingVelocity = _this.getEditorProperty("impulseJumpVelocity", _this.jumpingVelocity);
            // Scale Mouse Pointer Sensitivity
            if (_this.playerNumber == BABYLON.PlayerNumber.One) {
                BABYLON.UserInputOptions.PointerAngularSensibility = (BABYLON.UserInputOptions.PointerAngularSensibility * _this.mouseSensitivity);
            }
            return _this;
        }
        FirstPersonController.prototype.isCharacterJumping = function () { return false; /* TODO: Determine If Character Is Jumping - ??? */ };
        FirstPersonController.prototype.isCharacterFalling = function () { return false; /* TODO: Determine If Character Is Falling - ??? */ };
        FirstPersonController.prototype.getCharacterController = function () { return this.characterController; };
        FirstPersonController.prototype.start = function () { this.setupFirstPersonController(); };
        FirstPersonController.prototype.update = function () { this.updateFirstPersonController(); };
        FirstPersonController.prototype.destroy = function () { this.destroyFirstPersonController(); };
        FirstPersonController.prototype.setupFirstPersonController = function () {
            // Setup Camera Aattachments
            this.cameraPivot = this.getChildTransform("Pivot");
            if (this.cameraPivot == null) {
                this.cameraPivot = new BABYLON.TransformNode("Pivot", this.scene);
                this.cameraPivot.setParent(this.transform);
                this.cameraPivot.position = new BABYLON.Vector3(0.0, this.playerEyeLevel, 0.0); // NOTE: POSITION CAMERA EYE LEVEL (TO SEE ARMS)
            }
            BABYLON.Utilities.ValidateTransformQuaternion(this.cameraPivot);
            //console.log("Attach Camera For: " + this.transform.name + " --> " + this.attachCamera.toString());
            //console.log(this.transform.metadata);
            if (this.attachCamera === true) {
                // TODO: Create Multi Player Camera (No Attach Camera)
                this.cameraRigger = BABYLON.SceneManager.GetTransformNode(this.scene, "Main Camera");
                if (this.cameraRigger != null && this.cameraPivot != null) {
                    this.cameraPivot.position = new BABYLON.Vector3(0.0, this.playerEyeLevel, 0.0); // NOTE: POSITION CAMERA EYE LEVEL (TO SEE ARMS)
                    this.cameraRigger.setParent(this.cameraPivot);
                    this.cameraRigger.position = new BABYLON.Vector3(0.0, 0.0, 0.0);
                    this.cameraRigger.rotationQuaternion = BABYLON.Quaternion.Identity();
                    console.log("FPC: Attached main camera to player controller: " + this.transform.name);
                }
                else {
                    BABYLON.Tools.Warn("Failed to locate camera or local pivot for: " + this.transform.name);
                }
            }
            // Setup Character Controller
            this.characterController = this.getComponent("BABYLON.CharacterController");
            if (this.characterController == null)
                BABYLON.Tools.Warn("Failed to locate character controller for: " + this.transform.name);
            // Character Collision Contact (TEST)
            if (this.characterController != null) {
                // Test Static Only Collisions
                // this.characterController.setCollisionFilterMask(BABYLON.CollisionFilters.StaticFilter);
                this.characterController.registerOnCollisionEnter(function (mesh) {
                    var tag = BABYLON.SceneManager.GetTransformTag(mesh);
                    //console.log("PLAYER: ===> Got Collision Enter Event: " + mesh.name + " --> " + tag);
                });
                this.characterController.registerOnCollisionStay(function (mesh) {
                    var tag = BABYLON.SceneManager.GetTransformTag(mesh);
                    //console.log("PLAYER: ===> Got Collision Stay Event: " + mesh.name + " --> " + tag);
                });
                this.characterController.registerOnCollisionExit(function (mesh) {
                    var tag = BABYLON.SceneManager.GetTransformTag(mesh);
                    //console.warn("PLAYER ===> DESTROY: Collision Exit Event: " + mesh.name + " --> " + tag);
                });
            }
        };
        FirstPersonController.prototype.updateFirstPersonController = function () {
            var deltaTime = this.getDeltaSeconds();
            this.playerDeltaX = BABYLON.SceneManager.GetUserInput(BABYLON.UserInputAxis.Horizontal, this.playerNumber);
            this.playerDeltaZ = BABYLON.SceneManager.GetUserInput(BABYLON.UserInputAxis.Vertical, this.playerNumber);
            this.playerMouseX = BABYLON.SceneManager.GetUserInput(BABYLON.UserInputAxis.MouseX, this.playerNumber);
            this.playerMouseY = BABYLON.SceneManager.GetUserInput(BABYLON.UserInputAxis.MouseY, this.playerNumber);
            // Update Dead Input Values
            if (Math.abs(this.playerDeltaX) <= BABYLON.UserInputOptions.GamepadDeadStickValue)
                this.playerDeltaX = 0;
            if (Math.abs(this.playerDeltaZ) <= BABYLON.UserInputOptions.GamepadDeadStickValue)
                this.playerDeltaZ = 0;
            if (Math.abs(this.playerMouseX) <= BABYLON.UserInputOptions.GamepadDeadStickValue)
                this.playerMouseX = 0;
            if (Math.abs(this.playerMouseY) <= BABYLON.UserInputOptions.GamepadDeadStickValue)
                this.playerMouseY = 0;
            // Update Character Movement
            if (this.characterController != null) {
                this.isCharacterGrounded = this.characterController.isGrounded();
                this.isCharacterJumpFrame = false;
                // Rotate Player Left And Right With Mouse-X
                this.playerTurnRate = (this.playerMouseX * (this.horzSensitivity * this.deltaFactor));
                this.characterController.turn(this.playerTurnRate);
                /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                // FPC: Pitch Camera Pivot Up And Down With Mouse-Y
                /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                this.cameraPitchRate = (this.playerMouseY * (this.vertSensitivity * this.deltaFactor));
                this.cameraPivot.rotate(BABYLON.Axis.X, -(this.cameraPitchRate * BABYLON.System.Deg2Rad), BABYLON.Space.LOCAL);
                BABYLON.Utilities.ToEulerToRef(this.cameraPivot.rotationQuaternion, this.cameraEulerAngles);
                this.cameraEulerAngles.x = BABYLON.Scalar.Clamp(this.cameraEulerAngles.x, this.minimumPitchAngle, this.maximumPitchAngle);
                BABYLON.Utilities.FromEulerToRef(this.cameraEulerAngles.x, this.cameraEulerAngles.y, this.cameraEulerAngles.z, this.cameraPivot.rotationQuaternion);
                /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                // Update Player Input With Delta-X And Delta-Z
                if (this.isCharacterGrounded === true) {
                    this.playerMovement.x = this.playerDeltaX;
                    this.playerMovement.y = 0.0;
                    this.playerMovement.z = this.playerDeltaZ;
                    this.isCharacterJumpFrame = (BABYLON.SceneManager.GetKeyboardInput(this.keyboardJump) || BABYLON.SceneManager.GetGamepadButtonInput(this.buttonJump));
                    // Transform Movement Direction And Scale Speed
                    BABYLON.Utilities.TransformDirectionToRef(this.transform, this.playerMovement, this.playerMovement);
                    BABYLON.Vector3.NormalizeToRef(this.playerMovement, this.playerMovement);
                    this.playerMovement.scaleInPlace((BABYLON.System.WalkingVelocity * this.movementSpeed) * deltaTime);
                    // Move Player Using Physics Character Controller
                    this.characterController.move(this.playerMovement);
                    // Jump Player Using Physics Character Controller
                    if (this.isCharacterJumpFrame === true) {
                        this.characterController.jump(this.jumpingVelocity);
                    }
                }
            }
        };
        FirstPersonController.prototype.destroyFirstPersonController = function () {
            this.cameraPivot = null;
            this.cameraRigger = null;
            this.characterController = null;
        };
        return FirstPersonController;
    }(BABYLON.ScriptComponent));
    PROJECT.FirstPersonController = FirstPersonController;
})(PROJECT || (PROJECT = {}));
var PROJECT;
(function (PROJECT) {
    /**
     * Babylon Script Component
     * @class ThirdPersonController
     */
    var ThirdPersonController = /** @class */ (function (_super) {
        __extends(ThirdPersonController, _super);
        function ThirdPersonController(transform, scene, properties) {
            if (properties === void 0) { properties = {}; }
            var _this = _super.call(this, transform, scene, properties) || this;
            _this.deltaFactor = 2.0;
            _this.attachCamera = true;
            _this.cameraPivot = null;
            _this.cameraRigger = null;
            _this.movementSpeed = 1.0;
            _this.jumpingVelocity = 10.0;
            _this.playerMovement = BABYLON.Vector3.Zero();
            _this.playerTurnRate = 0.0;
            _this.cameraPitchRate = 0.0;
            _this.horzSensitivity = 1.0;
            _this.vertSensitivity = 1.0;
            _this.mouseSensitivity = 1.0;
            _this.minimumPitchAngle = -60.0;
            _this.maximumPitchAngle = 60.0;
            _this.isCharacterGrounded = false;
            _this.isCharacterJumpFrame = false;
            _this.characterController = null;
            _this.buttonJump = BABYLON.Xbox360Button.A;
            _this.keyboardJump = BABYLON.UserInputKey.SpaceBar;
            _this.playerNumber = BABYLON.PlayerNumber.One;
            _this.playerDeltaX = 0.0;
            _this.playerDeltaZ = 0.0;
            _this.playerMouseX = 0.0;
            _this.playerMouseY = 0.0;
            _this.attachCamera = _this.getEditorProperty("attachCamera", _this.attachCamera);
            _this.playerNumber = _this.getEditorProperty("playerNumber", _this.playerNumber);
            _this.movementSpeed = _this.getEditorProperty("movementSpeed", _this.movementSpeed);
            _this.mouseSensitivity = _this.getEditorProperty("mouseSensitivity", _this.mouseSensitivity);
            _this.minimumPitchAngle = _this.getEditorProperty("minimumPitchAngle", _this.minimumPitchAngle);
            _this.maximumPitchAngle = _this.getEditorProperty("maximumPitchAngle", _this.maximumPitchAngle);
            _this.vertSensitivity = _this.getEditorProperty("verticalSensitivity", _this.vertSensitivity);
            _this.horzSensitivity = _this.getEditorProperty("horizontalSensitivity", _this.horzSensitivity);
            _this.jumpingVelocity = _this.getEditorProperty("impulseJumpVelocity", _this.jumpingVelocity);
            // Scale Mouse Pointer Sensitivity
            if (_this.playerNumber == BABYLON.PlayerNumber.One) {
                BABYLON.UserInputOptions.PointerAngularSensibility = (BABYLON.UserInputOptions.PointerAngularSensibility * _this.mouseSensitivity);
            }
            return _this;
        }
        ThirdPersonController.prototype.getCharacterController = function () { return this.characterController; };
        ThirdPersonController.prototype.start = function () { this.setupThirdPersonController(); };
        ThirdPersonController.prototype.update = function () { this.updateThirdPersonController(); };
        ThirdPersonController.prototype.destroy = function () { this.destroyThirdPersonController(); };
        ThirdPersonController.prototype.setupThirdPersonController = function () {
            // Setup Camera Attachments
            this.cameraPivot = this.getChildTransform("Pivot");
            if (this.cameraPivot == null) {
                this.cameraPivot = new BABYLON.TransformNode("Pivot", this.scene);
                this.cameraPivot.setParent(this.transform);
                this.cameraPivot.position = new BABYLON.Vector3(0.0, 1.85, 0.0);
            }
            BABYLON.Utilities.ValidateTransformQuaternion(this.cameraPivot);
            if (this.attachCamera === true) {
                // TODO: Create Multi Player Camera (No Attach Camera)
                this.cameraRigger = BABYLON.SceneManager.GetTransformNode(this.scene, "Main Camera");
                if (this.cameraRigger != null && this.cameraPivot != null) {
                    this.cameraRigger.setParent(this.cameraPivot);
                    this.cameraRigger.position = new BABYLON.Vector3(0.0, 0.0, -4.5);
                    this.cameraRigger.rotationQuaternion = BABYLON.Quaternion.Identity();
                    console.log("TPC: Attached main camera to player controller: " + this.transform.name);
                }
                else {
                    BABYLON.Tools.Warn("Failed to locate camera or local pivot for: " + this.transform.name);
                }
            }
            // Setup Character Controller
            this.characterController = this.getComponent("BABYLON.CharacterController");
            if (this.characterController == null)
                BABYLON.Tools.Warn("Failed to locate character controller for: " + this.transform.name);
        };
        ThirdPersonController.prototype.updateThirdPersonController = function () {
            this.playerDeltaX = BABYLON.SceneManager.GetUserInput(BABYLON.UserInputAxis.Horizontal, this.playerNumber);
            this.playerDeltaZ = BABYLON.SceneManager.GetUserInput(BABYLON.UserInputAxis.Vertical, this.playerNumber);
            this.playerMouseX = BABYLON.SceneManager.GetUserInput(BABYLON.UserInputAxis.MouseX, this.playerNumber);
            this.playerMouseY = BABYLON.SceneManager.GetUserInput(BABYLON.UserInputAxis.MouseY, this.playerNumber);
            // Update Dead Input Values
            if (Math.abs(this.playerDeltaX) <= BABYLON.UserInputOptions.GamepadDeadStickValue)
                this.playerDeltaX = 0;
            if (Math.abs(this.playerDeltaZ) <= BABYLON.UserInputOptions.GamepadDeadStickValue)
                this.playerDeltaZ = 0;
            if (Math.abs(this.playerMouseX) <= BABYLON.UserInputOptions.GamepadDeadStickValue)
                this.playerMouseX = 0;
            if (Math.abs(this.playerMouseY) <= BABYLON.UserInputOptions.GamepadDeadStickValue)
                this.playerMouseY = 0;
            // Update Character Movement
            if (this.characterController != null) {
            }
        };
        ThirdPersonController.prototype.destroyThirdPersonController = function () {
            this.cameraPivot = null;
            this.cameraRigger = null;
            this.characterController = null;
        };
        return ThirdPersonController;
    }(BABYLON.ScriptComponent));
    PROJECT.ThirdPersonController = ThirdPersonController;
})(PROJECT || (PROJECT = {}));
var PROJECT;
(function (PROJECT) {
    /**
     * Babylon Script Component
     * @class BoundingBoxSkins
     */
    var BoundingBoxSkins = /** @class */ (function (_super) {
        __extends(BoundingBoxSkins, _super);
        function BoundingBoxSkins(transform, scene, properties) {
            if (properties === void 0) { properties = {}; }
            var _this = _super.call(this, transform, scene, properties) || this;
            _this.skins = null;
            _this.syncBoundingInfo = true;
            _this.updateEveryFrame = false;
            _this.positionThreashold = 0.1;
            _this.lastPosition = BABYLON.Vector3.Zero();
            // ..
            // Validate Skin Bounding Box Info
            // ..
            _this.syncBoundingInfo = _this.getEditorProperty("syncBoundingInfo", _this.syncBoundingInfo);
            _this.updateEveryFrame = _this.getEditorProperty("updateEveryFrame", _this.updateEveryFrame);
            _this.positionThreashold = _this.getEditorProperty("positionThreashold", _this.positionThreashold);
            if (_this.syncBoundingInfo === true) {
                var skinned_1 = false;
                var metadata = _this.getMetadata();
                if (metadata != null && metadata.skin === true) {
                    skinned_1 = true;
                }
                _this.skins = _this.transform.getChildMeshes(false, function (node) {
                    var data = BABYLON.SceneManager.FindSceneMetadata(node);
                    return ((data != null && data.skin === true) || (skinned_1 === true && node.name.indexOf("_primitive") >= 0)); // TODO: Remove Primitives
                });
                if (skinned_1 === true && _this.transform instanceof BABYLON.AbstractMesh) {
                    if (_this.skins == null)
                        _this.skins = [];
                    _this.skins.unshift(_this.transform);
                }
            }
            return _this;
        }
        BoundingBoxSkins.prototype.start = function () {
            this.checkSkins();
        };
        BoundingBoxSkins.prototype.update = function () {
            if (this.updateEveryFrame === true) {
                this.checkSkins();
            }
        };
        BoundingBoxSkins.prototype.after = function () {
        };
        BoundingBoxSkins.prototype.destroy = function () {
            this.skins = null;
        };
        BoundingBoxSkins.prototype.checkSkins = function () {
            // Start render loop function
            if (this.skins != null && this.skins.length > 0) {
                if (this.transform.position.x !== this.lastPosition.x || this.transform.position.y !== this.lastPosition.y || this.transform.position.z !== this.lastPosition.z) {
                    if (Math.abs(this.transform.position.x - this.lastPosition.x) >= this.positionThreashold || Math.abs(this.transform.position.y - this.lastPosition.y) >= this.positionThreashold || Math.abs(this.transform.position.z - this.lastPosition.z) >= this.positionThreashold) {
                        this.skins.forEach(function (skin) { skin.refreshBoundingInfo(true); });
                        //console.log("===> Position Change Update: " + this.transform.name);
                        //console.log(this.transform.position.toString());
                        this.lastPosition.x = this.transform.position.x;
                        this.lastPosition.y = this.transform.position.y;
                        this.lastPosition.z = this.transform.position.z;
                    }
                }
            }
        };
        return BoundingBoxSkins;
    }(BABYLON.ScriptComponent));
})(PROJECT || (PROJECT = {}));
var PROJECT;
(function (PROJECT) {
    /**
     * Babylon skidmark section class (Native Bullet Physics 2.82)
     * @class SkidmarkSection
     */
    var SkidmarkSection = /** @class */ (function () {
        function SkidmarkSection() {
            this.Pos = BABYLON.Vector3.Zero();
            this.Normal = BABYLON.Vector3.Zero();
            this.Tangent = BABYLON.Vector4.Zero();
            this.Posl = BABYLON.Vector3.Zero();
            this.Posr = BABYLON.Vector3.Zero();
            this.Intensity = 0.0;
            this.LastIndex = -1;
        }
        return SkidmarkSection;
    }());
    PROJECT.SkidmarkSection = SkidmarkSection;
    /**
     * Babylon Script Component
     * @class SkidmarkManager
     */
    var SkidmarkManager = /** @class */ (function (_super) {
        __extends(SkidmarkManager, _super);
        function SkidmarkManager(transform, scene, properties) {
            if (properties === void 0) { properties = {}; }
            var _this = _super.call(this, transform, scene, properties) || this;
            SkidmarkManager.MAX_MARKS = _this.getEditorProperty("maxSections", SkidmarkManager.MAX_MARKS);
            SkidmarkManager.MARK_COLOR = BABYLON.Utilities.ParseColor3(_this.getEditorProperty("textureColor", SkidmarkManager.MARK_COLOR));
            SkidmarkManager.MARK_WIDTH = _this.getEditorProperty("textureWidth", SkidmarkManager.MARK_WIDTH);
            SkidmarkManager.GROUND_OFFSET = _this.getEditorProperty("groundOffset", SkidmarkManager.GROUND_OFFSET);
            SkidmarkManager.VELOCITY_SCALE = _this.getEditorProperty("velocityScale", SkidmarkManager.VELOCITY_SCALE);
            SkidmarkManager.GPU_TRIANGLES = _this.getEditorProperty("gpuQuadIndices", SkidmarkManager.GPU_TRIANGLES);
            SkidmarkManager.TEXTURE_MARKS = _this.getEditorProperty("textureMarks", SkidmarkManager.TEXTURE_MARKS);
            SkidmarkManager.MIN_DISTANCE = _this.getEditorProperty("textureDistance", SkidmarkManager.MIN_DISTANCE);
            SkidmarkManager.MIN_SQR_DISTANCE = (SkidmarkManager.MIN_DISTANCE * SkidmarkManager.MIN_DISTANCE);
            return _this;
        }
        SkidmarkManager.prototype.start = function () { SkidmarkManager.CreateSkidmarkManager(this.scene); };
        SkidmarkManager.prototype.update = function () { SkidmarkManager.UpdateSkidmarkManager(); };
        SkidmarkManager.GetVelocityScale = function () { return SkidmarkManager.VELOCITY_SCALE; };
        SkidmarkManager.AddSkidmarkSegment = function (pos, normal, intensity, lastIndex) {
            if (SkidmarkManager.SkidmarkMesh == null)
                return null;
            SkidmarkManager.TempVector3_POS.set(0, 0, 0);
            SkidmarkManager.TempVector3_DIR.set(0, 0, 0);
            SkidmarkManager.TempVector3_XDIR.set(0, 0, 0);
            SkidmarkManager.TempVector3_SDIR.set(0, 0, 0);
            // ..
            if (intensity > 1.0)
                intensity = 1.0;
            else if (intensity < 0.0)
                return -1.0;
            // ..
            if (lastIndex > 0) {
                pos.subtractToRef(SkidmarkManager.SkidmarkSections[lastIndex].Pos, SkidmarkManager.TempVector3_POS);
                var sqrDistance = SkidmarkManager.TempVector3_POS.lengthSquared();
                if (sqrDistance < SkidmarkManager.MIN_SQR_DISTANCE)
                    return lastIndex;
            }
            // ..
            var curSection = SkidmarkManager.SkidmarkSections[SkidmarkManager.SkidmarkIndex];
            normal.scaleToRef(SkidmarkManager.GROUND_OFFSET, SkidmarkManager.TempVector3_POS);
            pos.addToRef(SkidmarkManager.TempVector3_POS, curSection.Pos);
            curSection.Normal.copyFrom(normal);
            curSection.Intensity = intensity;
            curSection.LastIndex = lastIndex;
            // ..
            if (lastIndex != -1) {
                var lastSection = SkidmarkManager.SkidmarkSections[lastIndex];
                curSection.Pos.subtractToRef(lastSection.Pos, SkidmarkManager.TempVector3_DIR);
                BABYLON.Vector3.CrossToRef(SkidmarkManager.TempVector3_DIR, normal, SkidmarkManager.TempVector3_XDIR);
                SkidmarkManager.TempVector3_XDIR.normalizeToRef(SkidmarkManager.TempVector3_XDIR);
                // ..
                SkidmarkManager.TempVector3_XDIR.scaleToRef(SkidmarkManager.MARK_WIDTH * 0.5, SkidmarkManager.TempVector3_SDIR);
                curSection.Pos.addToRef(SkidmarkManager.TempVector3_SDIR, curSection.Posl);
                curSection.Pos.subtractToRef(SkidmarkManager.TempVector3_SDIR, curSection.Posr);
                curSection.Tangent.set(SkidmarkManager.TempVector3_XDIR.x, SkidmarkManager.TempVector3_XDIR.y, SkidmarkManager.TempVector3_XDIR.z, 1);
                // ..
                if (lastSection.LastIndex === -1) {
                    curSection.Pos.addToRef(SkidmarkManager.TempVector3_SDIR, lastSection.Posl);
                    curSection.Pos.subtractToRef(SkidmarkManager.TempVector3_SDIR, lastSection.Posr);
                    lastSection.Tangent.copyFrom(curSection.Tangent);
                }
            }
            // ..
            SkidmarkManager.AddSkidmarkVertexData();
            var curIndex = SkidmarkManager.SkidmarkIndex;
            SkidmarkManager.SkidmarkIndex = ++SkidmarkManager.SkidmarkIndex % SkidmarkManager.MAX_MARKS;
            return curIndex;
        };
        SkidmarkManager.CreateSkidmarkManager = function (scene) {
            if (SkidmarkManager.SkidmarkMesh == null) {
                var skidmarkMaterial = new BABYLON.StandardMaterial("SkidmarkMaterial", scene);
                skidmarkMaterial.backFaceCulling = false;
                skidmarkMaterial.disableLighting = true;
                skidmarkMaterial.emissiveColor = SkidmarkManager.MARK_COLOR;
                skidmarkMaterial.diffuseColor = SkidmarkManager.MARK_COLOR;
                skidmarkMaterial.diffuseTexture = BABYLON.Utilities.ParseTexture(SkidmarkManager.TEXTURE_MARKS, scene);
                if (skidmarkMaterial.diffuseTexture != null) {
                    skidmarkMaterial.diffuseTexture.hasAlpha = true;
                    skidmarkMaterial.useAlphaFromDiffuseTexture = true;
                }
                skidmarkMaterial.freeze();
                SkidmarkManager.SkidmarkMesh = new BABYLON.Mesh("SkidmarkMesh", scene);
                SkidmarkManager.SkidmarkMesh.material = skidmarkMaterial;
                SkidmarkManager.SkidmarkMesh.alwaysSelectAsActiveMesh = true;
                SkidmarkManager.SkidmarkMesh.doNotSyncBoundingInfo = true;
                SkidmarkManager.SkidmarkMesh.receiveShadows = false;
                SkidmarkManager.SkidmarkMesh.checkCollisions = false;
                SkidmarkManager.SkidmarkMesh.useVertexColors = true;
                SkidmarkManager.SkidmarkMesh.hasVertexAlpha = true;
                SkidmarkManager.SkidmarkMesh.isPickable = false;
                // ..
                // Setup Skidmark Section Properties
                // ..
                SkidmarkManager.SkidmarkSections = new Array(SkidmarkManager.MAX_MARKS);
                for (var i = 0; i < SkidmarkManager.SkidmarkSections.length; i++) {
                    SkidmarkManager.SkidmarkSections[i] = new SkidmarkSection();
                }
                // ..
                // Setup Raw Mesh Vertex Buffer Data
                // ..
                SkidmarkManager.SkidBufferPositions = new Float32Array(SkidmarkManager.MAX_MARKS * 4 * 3);
                SkidmarkManager.SkidBufferNormals = new Float32Array(SkidmarkManager.MAX_MARKS * 4 * 3);
                SkidmarkManager.SkidBufferTangents = new Float32Array(SkidmarkManager.MAX_MARKS * 4 * 4);
                SkidmarkManager.SkidBufferColors = new Float32Array(SkidmarkManager.MAX_MARKS * 4 * 4);
                SkidmarkManager.SkidBufferUvs = new Float32Array(SkidmarkManager.MAX_MARKS * 4 * 2);
                SkidmarkManager.SkidBufferIndices = new Int32Array(SkidmarkManager.MAX_MARKS * 6);
                // ..
                // Apply Raw Vertex Buffer Data To Mesh
                // ..
                var vertexData = new BABYLON.VertexData();
                vertexData.positions = SkidmarkManager.SkidBufferPositions;
                vertexData.normals = SkidmarkManager.SkidBufferNormals;
                vertexData.tangents = SkidmarkManager.SkidBufferTangents;
                vertexData.colors = SkidmarkManager.SkidBufferColors;
                vertexData.uvs = SkidmarkManager.SkidBufferUvs;
                vertexData.indices = SkidmarkManager.SkidBufferIndices;
                vertexData.applyToMesh(SkidmarkManager.SkidmarkMesh, true);
                SkidmarkManager.SkidmarkMesh.freezeWorldMatrix();
            }
        };
        SkidmarkManager.AddSkidmarkVertexData = function () {
            var curr = SkidmarkManager.SkidmarkSections[SkidmarkManager.SkidmarkIndex];
            if (curr.LastIndex === -1)
                return;
            var last = SkidmarkManager.SkidmarkSections[curr.LastIndex];
            SkidmarkManager.SkidmarkUpdated = true;
            // ..
            // Update Position Buffers Directly
            // ..
            var index = SkidmarkManager.SkidmarkIndex * 4 + 0;
            SkidmarkManager.SkidBufferPositions[index * 3] = last.Posl.x;
            SkidmarkManager.SkidBufferPositions[(index * 3) + 1] = last.Posl.y;
            SkidmarkManager.SkidBufferPositions[(index * 3) + 2] = last.Posl.z;
            index = SkidmarkManager.SkidmarkIndex * 4 + 1;
            SkidmarkManager.SkidBufferPositions[index * 3] = last.Posr.x;
            SkidmarkManager.SkidBufferPositions[(index * 3) + 1] = last.Posr.y;
            SkidmarkManager.SkidBufferPositions[(index * 3) + 2] = last.Posr.z;
            index = SkidmarkManager.SkidmarkIndex * 4 + 2;
            SkidmarkManager.SkidBufferPositions[index * 3] = curr.Posl.x;
            SkidmarkManager.SkidBufferPositions[(index * 3) + 1] = curr.Posl.y;
            SkidmarkManager.SkidBufferPositions[(index * 3) + 2] = curr.Posl.z;
            index = SkidmarkManager.SkidmarkIndex * 4 + 3;
            SkidmarkManager.SkidBufferPositions[index * 3] = curr.Posr.x;
            SkidmarkManager.SkidBufferPositions[(index * 3) + 1] = curr.Posr.y;
            SkidmarkManager.SkidBufferPositions[(index * 3) + 2] = curr.Posr.z;
            // ..
            // Update Normal Buffers Directly
            // ..
            index = SkidmarkManager.SkidmarkIndex * 4 + 0;
            SkidmarkManager.SkidBufferNormals[index * 3] = last.Normal.x;
            SkidmarkManager.SkidBufferNormals[(index * 3) + 1] = last.Normal.y;
            SkidmarkManager.SkidBufferNormals[(index * 3) + 2] = last.Normal.z;
            index = SkidmarkManager.SkidmarkIndex * 4 + 1;
            SkidmarkManager.SkidBufferNormals[index * 3] = last.Normal.x;
            SkidmarkManager.SkidBufferNormals[(index * 3) + 1] = last.Normal.y;
            SkidmarkManager.SkidBufferNormals[(index * 3) + 2] = last.Normal.z;
            index = SkidmarkManager.SkidmarkIndex * 4 + 2;
            SkidmarkManager.SkidBufferNormals[index * 3] = curr.Normal.x;
            SkidmarkManager.SkidBufferNormals[(index * 3) + 1] = curr.Normal.y;
            SkidmarkManager.SkidBufferNormals[(index * 3) + 2] = curr.Normal.z;
            index = SkidmarkManager.SkidmarkIndex * 4 + 3;
            SkidmarkManager.SkidBufferNormals[index * 3] = curr.Normal.x;
            SkidmarkManager.SkidBufferNormals[(index * 3) + 1] = curr.Normal.y;
            SkidmarkManager.SkidBufferNormals[(index * 3) + 2] = curr.Normal.z;
            // ..
            // Update Tangent Buffers Directly
            // ..
            index = SkidmarkManager.SkidmarkIndex * 4 + 0;
            SkidmarkManager.SkidBufferTangents[index * 4] = last.Tangent.x;
            SkidmarkManager.SkidBufferTangents[(index * 4) + 1] = last.Tangent.y;
            SkidmarkManager.SkidBufferTangents[(index * 4) + 2] = last.Tangent.z;
            SkidmarkManager.SkidBufferTangents[(index * 4) + 3] = last.Tangent.w;
            index = SkidmarkManager.SkidmarkIndex * 4 + 1;
            SkidmarkManager.SkidBufferTangents[index * 4] = last.Tangent.x;
            SkidmarkManager.SkidBufferTangents[(index * 4) + 1] = last.Tangent.y;
            SkidmarkManager.SkidBufferTangents[(index * 4) + 2] = last.Tangent.z;
            SkidmarkManager.SkidBufferTangents[(index * 4) + 3] = last.Tangent.w;
            index = SkidmarkManager.SkidmarkIndex * 4 + 2;
            SkidmarkManager.SkidBufferTangents[index * 4] = curr.Tangent.x;
            SkidmarkManager.SkidBufferTangents[(index * 4) + 1] = curr.Tangent.y;
            SkidmarkManager.SkidBufferTangents[(index * 4) + 2] = curr.Tangent.z;
            SkidmarkManager.SkidBufferTangents[(index * 4) + 3] = curr.Tangent.w;
            index = SkidmarkManager.SkidmarkIndex * 4 + 3;
            SkidmarkManager.SkidBufferTangents[index * 4] = curr.Tangent.x;
            SkidmarkManager.SkidBufferTangents[(index * 4) + 1] = curr.Tangent.y;
            SkidmarkManager.SkidBufferTangents[(index * 4) + 2] = curr.Tangent.z;
            SkidmarkManager.SkidBufferTangents[(index * 4) + 3] = curr.Tangent.w;
            // ..
            // Update Color Buffers Directly
            // ..
            index = SkidmarkManager.SkidmarkIndex * 4 + 0;
            SkidmarkManager.SkidBufferColors[index * 4] = 1.0;
            SkidmarkManager.SkidBufferColors[(index * 4) + 1] = 1.0;
            SkidmarkManager.SkidBufferColors[(index * 4) + 2] = 1.0;
            SkidmarkManager.SkidBufferColors[(index * 4) + 3] = last.Intensity;
            index = SkidmarkManager.SkidmarkIndex * 4 + 1;
            SkidmarkManager.SkidBufferColors[index * 4] = 1.0;
            SkidmarkManager.SkidBufferColors[(index * 4) + 1] = 1.0;
            SkidmarkManager.SkidBufferColors[(index * 4) + 2] = 1.0;
            SkidmarkManager.SkidBufferColors[(index * 4) + 3] = last.Intensity;
            index = SkidmarkManager.SkidmarkIndex * 4 + 2;
            SkidmarkManager.SkidBufferColors[index * 4] = 1.0;
            SkidmarkManager.SkidBufferColors[(index * 4) + 1] = 1.0;
            SkidmarkManager.SkidBufferColors[(index * 4) + 2] = 1.0;
            SkidmarkManager.SkidBufferColors[(index * 4) + 3] = curr.Intensity;
            index = SkidmarkManager.SkidmarkIndex * 4 + 3;
            SkidmarkManager.SkidBufferColors[index * 4] = 1.0;
            SkidmarkManager.SkidBufferColors[(index * 4) + 1] = 1.0;
            SkidmarkManager.SkidBufferColors[(index * 4) + 2] = 1.0;
            SkidmarkManager.SkidBufferColors[(index * 4) + 3] = curr.Intensity;
            // ..
            // Update Coord Buffers Directly
            // ..
            index = SkidmarkManager.SkidmarkIndex * 4 + 0;
            SkidmarkManager.SkidBufferUvs[index * 2] = 0;
            SkidmarkManager.SkidBufferUvs[(index * 2) + 1] = 0;
            index = SkidmarkManager.SkidmarkIndex * 4 + 1;
            SkidmarkManager.SkidBufferUvs[index * 2] = 1;
            SkidmarkManager.SkidBufferUvs[(index * 2) + 1] = 0;
            index = SkidmarkManager.SkidmarkIndex * 4 + 2;
            SkidmarkManager.SkidBufferUvs[index * 2] = 0;
            SkidmarkManager.SkidBufferUvs[(index * 2) + 1] = 1;
            index = SkidmarkManager.SkidmarkIndex * 4 + 3;
            SkidmarkManager.SkidBufferUvs[index * 2] = 1;
            SkidmarkManager.SkidBufferUvs[(index * 2) + 1] = 1;
            // ..
            // Update Triangle 1 Buffers Directly (QUAD)
            //..
            SkidmarkManager.SkidBufferIndices[SkidmarkManager.SkidmarkIndex * 6 + 0] = SkidmarkManager.SkidmarkIndex * 4 + 0;
            SkidmarkManager.SkidBufferIndices[SkidmarkManager.SkidmarkIndex * 6 + 2] = SkidmarkManager.SkidmarkIndex * 4 + 1;
            SkidmarkManager.SkidBufferIndices[SkidmarkManager.SkidmarkIndex * 6 + 1] = SkidmarkManager.SkidmarkIndex * 4 + 2;
            // ..
            // Update Triangle 2 Buffers Directly (QUAD)
            // ..
            SkidmarkManager.SkidBufferIndices[SkidmarkManager.SkidmarkIndex * 6 + 3] = SkidmarkManager.SkidmarkIndex * 4 + 2;
            SkidmarkManager.SkidBufferIndices[SkidmarkManager.SkidmarkIndex * 6 + 5] = SkidmarkManager.SkidmarkIndex * 4 + 1;
            SkidmarkManager.SkidBufferIndices[SkidmarkManager.SkidmarkIndex * 6 + 4] = SkidmarkManager.SkidmarkIndex * 4 + 3;
        };
        SkidmarkManager.UpdateSkidmarkManager = function () {
            if (SkidmarkManager.SkidmarkMesh != null && SkidmarkManager.SkidmarkUpdated === true) {
                SkidmarkManager.SkidmarkUpdated = false;
                if (SkidmarkManager.SkidmarkMesh.geometry != null) {
                    SkidmarkManager.SkidmarkMesh.geometry.updateVerticesDataDirectly(BABYLON.VertexBuffer.PositionKind, SkidmarkManager.SkidBufferPositions, 0, false);
                    SkidmarkManager.SkidmarkMesh.geometry.updateVerticesDataDirectly(BABYLON.VertexBuffer.NormalKind, SkidmarkManager.SkidBufferNormals, 0, false);
                    SkidmarkManager.SkidmarkMesh.geometry.updateVerticesDataDirectly(BABYLON.VertexBuffer.TangentKind, SkidmarkManager.SkidBufferTangents, 0, false);
                    SkidmarkManager.SkidmarkMesh.geometry.updateVerticesDataDirectly(BABYLON.VertexBuffer.ColorKind, SkidmarkManager.SkidBufferColors, 0, false);
                    SkidmarkManager.SkidmarkMesh.geometry.updateVerticesDataDirectly(BABYLON.VertexBuffer.UVKind, SkidmarkManager.SkidBufferUvs, 0, false);
                    SkidmarkManager.SkidmarkMesh.geometry.updateIndices(SkidmarkManager.SkidBufferIndices, 0, SkidmarkManager.GPU_TRIANGLES);
                }
            }
        };
        SkidmarkManager.MAX_MARKS = 4096; // Max number of marks total for everyone together
        SkidmarkManager.GROUND_OFFSET = 0.01; // Distance above surface in metres
        SkidmarkManager.VELOCITY_SCALE = 0.02; // Velocity offset scale factor
        SkidmarkManager.GPU_TRIANGLES = true; // GPU quad triangle indices only
        SkidmarkManager.MARK_COLOR = BABYLON.Color3.Black(); // Skidmark Color
        SkidmarkManager.MARK_WIDTH = 0.3; // Width of the Skidmarks. Should match the width of the wheels
        SkidmarkManager.MIN_DISTANCE = 0.1; // Distance between skid texture sections in metres. Bigger = better performance, less smooth
        SkidmarkManager.MIN_SQR_DISTANCE = (SkidmarkManager.MIN_DISTANCE * SkidmarkManager.MIN_DISTANCE);
        SkidmarkManager.TEXTURE_MARKS = null;
        SkidmarkManager.SkidBufferPositions = null;
        SkidmarkManager.SkidBufferNormals = null;
        SkidmarkManager.SkidBufferTangents = null;
        SkidmarkManager.SkidBufferColors = null;
        SkidmarkManager.SkidBufferUvs = null;
        SkidmarkManager.SkidBufferIndices = null;
        SkidmarkManager.SkidmarkSections = null;
        SkidmarkManager.SkidmarkIndex = 0;
        SkidmarkManager.SkidmarkMesh = null;
        SkidmarkManager.SkidmarkUpdated = false;
        SkidmarkManager.TempVector3_POS = new BABYLON.Vector3(0, 0, 0);
        SkidmarkManager.TempVector3_DIR = new BABYLON.Vector3(0, 0, 0);
        SkidmarkManager.TempVector3_XDIR = new BABYLON.Vector3(0, 0, 0);
        SkidmarkManager.TempVector3_SDIR = new BABYLON.Vector3(0, 0, 0);
        return SkidmarkManager;
    }(BABYLON.ScriptComponent));
    PROJECT.SkidmarkManager = SkidmarkManager;
})(PROJECT || (PROJECT = {}));
var PROJECT;
(function (PROJECT) {
    /**
     * Babylon standard rigidbody vehicle controller class (Native Bullet Physics 2.82)
     * @class StandardCarController
     */
    var StandardCarController = /** @class */ (function (_super) {
        __extends(StandardCarController, _super);
        function StandardCarController(transform, scene, properties) {
            if (properties === void 0) { properties = {}; }
            var _this = _super.call(this, transform, scene, properties) || this;
            _this._rigidbody = null;
            _this._engineAudioSource = null;
            _this._skidRLAudioSource = null;
            _this._skidRRAudioSource = null;
            _this.gearIndex = 1; // 0: Reverse, 1: Neutral, 2: 1st
            _this.shiftingGears = false;
            _this.vehicleSteer = 0;
            _this.engineForce = 0;
            _this.brakingForce = 0;
            _this.forwardSpeed = 0;
            _this.absoluteSpeed = 0;
            _this.americanSpeed = 0;
            _this.normalizedSpeed = 0;
            _this.raycastVehicle = null;
            _this.frontLeftWheelMesh = null;
            _this.frontRightWheelMesh = null;
            _this.backLeftWheelMesh = null;
            _this.backRightWheelMesh = null;
            _this.frontLeftWheelTrans = null;
            _this.frontRightWheelTrans = null;
            _this.backLeftWheelTrans = null;
            _this.backRightWheelTrans = null;
            _this.frontLeftWheelCollider = null;
            _this.frontRightWheelCollider = null;
            _this.backLeftWheelCollider = null;
            _this.backRightWheelCollider = null;
            _this.engineTorqueCurve = null;
            _this.wheelRadius = 0;
            _this.shiftDelay = 0;
            _this.clutchSlip = 0;
            _this.engineRPM = 0;
            _this.lerpedRPM = 0;
            _this.oldRPM = 0;
            _this.STEER_RADIUS = 0.5;
            _this.FRONT_LEFT = -1;
            _this.FRONT_RIGHT = -1;
            _this.BACK_LEFT = -1;
            _this.BACK_RIGHT = -1;
            _this.smokeTexture = null;
            _this.shadowTexture = null;
            _this.setEngineTorque = null;
            _this.topEngineSpeed = 120;
            _this.lowSpeedAngle = 0.25;
            _this.highSpeedAngle = 0.0125;
            _this.stabilizingForce = 3.0;
            _this.transmissionRatio = 0.7;
            _this.differentialRatio = 3.55;
            _this.maxBrakingForce = 100;
            _this.maxReverseSpeed = 0.66;
            _this.lerpEnginePitching = 5000;
            _this.handBrakingForce = 1000;
            _this.wheelLockFriction = 0.1;
            _this.driftingInfluence = 0;
            _this.lowSpeedIncrement = 0.0125;
            _this.highSpeedIncrement = 0.0125;
            _this.frictionSlipSpeed = 10;
            _this.wheelDriveType = 0;
            _this.gearBoxShiftDelay = 0.3;
            _this.gearBoxShiftNext = 3500;
            _this.gearBoxShiftDown = 2500;
            _this.gearBoxShiftRatios = [3.437, 0.00, 3.626, 2.2, 1.541, 1.213, 1.0, 0.767];
            _this.gearBoxShiftScales = [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0];
            _this.m_frontLeftWheel = null;
            _this.m_frontRightWheel = null;
            _this.m_backLeftWheel = null;
            _this.m_backRightWheel = null;
            _this.m_physicsWorld = null;
            _this.m_backLeftWheelSkid = -1;
            _this.m_backRightWheelSkid = -1;
            _this.m_velocityOffset = new BABYLON.Vector3(0, 0, 0);
            ////////////////////////////////////////////////////
            // Public Vehicle Controller Movement Functions   //
            ////////////////////////////////////////////////////
            _this.steeringIncrement = 0;
            _this.allowedTurningAngle = 0;
            _this.downwardForce = BABYLON.Vector3.Zero();
            _this.vehicleSteer = 0;
            _this.brakingForce = 0;
            _this.engineForce = 0;
            _this.m_physicsWorld = BABYLON.SceneManager.GetPhysicsWorld(_this.scene);
            _this.smokeTexture = _this.getEditorProperty("smokeTexture", _this.smokeTexture);
            _this.shadowTexture = _this.getEditorProperty("shadowTexture", _this.shadowTexture);
            _this.setEngineTorque = _this.getEditorProperty("setEngineTorque", _this.setEngineTorque);
            _this.topEngineSpeed = _this.getEditorProperty("topEngineSpeed", _this.topEngineSpeed);
            _this.stabilizingForce = _this.getEditorProperty("stabilizingForce", _this.stabilizingForce);
            _this.lowSpeedAngle = _this.getEditorProperty("lowSpeedAngle", _this.lowSpeedAngle);
            _this.highSpeedAngle = _this.getEditorProperty("highSpeedAngle", _this.highSpeedAngle);
            _this.wheelDriveType = _this.getEditorProperty("wheelDriveType", _this.wheelDriveType);
            _this.maxBrakingForce = _this.getEditorProperty("maxBrakingForce", _this.maxBrakingForce);
            _this.handBrakingForce = _this.getEditorProperty("handBrakingForce", _this.handBrakingForce);
            _this.driftingInfluence = _this.getEditorProperty("driftingInfluence", _this.driftingInfluence);
            _this.wheelLockFriction = _this.getEditorProperty("wheelLockFriction", _this.wheelLockFriction);
            _this.lowSpeedIncrement = _this.getEditorProperty("lowSpeedIncrement", _this.lowSpeedIncrement);
            _this.highSpeedIncrement = _this.getEditorProperty("highSpeedIncrement", _this.highSpeedIncrement);
            _this.frontLeftWheelTrans = _this.getEditorProperty("frontLeftWheelMesh", _this.frontLeftWheelTrans);
            _this.frontRightWheelTrans = _this.getEditorProperty("frontRightWheelMesh", _this.frontRightWheelTrans);
            _this.backLeftWheelTrans = _this.getEditorProperty("rearLeftWheelMesh", _this.backLeftWheelTrans);
            _this.backRightWheelTrans = _this.getEditorProperty("rearRightWheelMesh", _this.backRightWheelTrans);
            _this.frontLeftWheelCollider = _this.getEditorProperty("frontLeftWheelCollider", _this.frontLeftWheelCollider);
            _this.frontRightWheelCollider = _this.getEditorProperty("frontRightWheelCollider", _this.frontRightWheelCollider);
            _this.backLeftWheelCollider = _this.getEditorProperty("rearLeftWheelCollider", _this.backLeftWheelCollider);
            _this.backRightWheelCollider = _this.getEditorProperty("rearRightWheelCollider", _this.backRightWheelCollider);
            _this.frictionSlipSpeed = _this.getEditorProperty("frictionSlipSpeed", _this.frictionSlipSpeed);
            _this.lerpEnginePitching = _this.getEditorProperty("lerpEnginePitching", _this.lerpEnginePitching);
            _this.differentialRatio = _this.getEditorProperty("gearBoxDifferential", _this.differentialRatio);
            _this.transmissionRatio = _this.getEditorProperty("gearBoxOverdrive", _this.transmissionRatio);
            _this.gearBoxShiftNext = _this.getEditorProperty("gearBoxShiftNext", _this.gearBoxShiftNext);
            _this.gearBoxShiftDown = _this.getEditorProperty("gearBoxShiftDown", _this.gearBoxShiftDown);
            _this.gearBoxShiftDelay = _this.getEditorProperty("gearBoxShiftDelay", _this.gearBoxShiftDelay);
            _this.gearBoxShiftRatios = _this.getEditorProperty("gearBoxShiftRatios", _this.gearBoxShiftRatios);
            _this.gearBoxShiftScales = _this.getEditorProperty("gearBoxShiftScales", _this.gearBoxShiftScales);
            if (_this.lowSpeedAngle <= 0)
                _this.lowSpeedAngle = 0.3;
            if (_this.highSpeedAngle <= 0)
                _this.highSpeedAngle = 0.0125;
            if (_this.lowSpeedIncrement <= 0)
                _this.lowSpeedIncrement = 0.0125;
            if (_this.highSpeedIncrement <= 0)
                _this.highSpeedIncrement = 0.0125;
            if (_this.lerpEnginePitching <= 0)
                _this.lerpEnginePitching = 5000;
            if (_this.gearBoxShiftNext <= 0)
                _this.gearBoxShiftNext = 3500;
            if (_this.gearBoxShiftDown <= 0)
                _this.gearBoxShiftNext = 2500;
            if (_this.gearBoxShiftDelay <= 0)
                _this.gearBoxShiftDelay = 0.3;
            if (_this.transmissionRatio <= 0)
                _this.transmissionRatio = 1;
            if (_this.differentialRatio <= 0)
                _this.differentialRatio = 1;
            if (_this.driftingInfluence <= 0)
                _this.driftingInfluence = 1;
            if (_this.frictionSlipSpeed <= 0)
                _this.frictionSlipSpeed = 1;
            if (_this.setEngineTorque != null) {
                // TODO: USE ENGINE TORQUE CURVES
                console.warn("Setup Engine Torque Animation");
                console.log(_this.setEngineTorque);
                //this.engineTorqueCurve = null;
            }
            return _this;
        }
        StandardCarController.prototype.getRigidbodyPhysics = function () { return this._rigidbody; };
        StandardCarController.prototype.getRaycastVehicle = function () { return this.raycastVehicle; };
        StandardCarController.prototype.getAbsoluteSpeed = function () { return this.absoluteSpeed; };
        StandardCarController.prototype.getNormalizedSpeed = function () { return this.normalizedSpeed; };
        StandardCarController.prototype.getCurrentGearIndex = function () { return this.gearIndex; };
        StandardCarController.prototype.getCurrentEngineRPM = function () { return this.engineRPM; };
        StandardCarController.prototype.getCurrentEnginePitch = function () { return BABYLON.Scalar.Clamp((this.lerpedRPM / this.lerpEnginePitching) + 0.1); };
        StandardCarController.prototype.getGearShiftRatioCount = function () { return (this.gearBoxShiftRatios != null) ? this.gearBoxShiftRatios.length : 0; };
        StandardCarController.prototype.start = function () { this.initVehicleState(); };
        StandardCarController.prototype.update = function () { this.updateVehicleState(); };
        StandardCarController.prototype.destroy = function () { this.destroyVehicleState(); };
        //////////////////////////////////////////////////
        // Protected Vehicle Movement State Functions //
        //////////////////////////////////////////////////
        StandardCarController.prototype.initVehicleState = function () {
            BABYLON.Utilities.ValidateTransformQuaternion(this.transform);
            // Setup Engine Audio
            this._engineAudioSource = this.getComponent("BABYLON.AudioSource");
            if (this._engineAudioSource == null)
                BABYLON.Tools.Warn("No engine audio source manager found for: " + this.transform.name);
            // Setup Raycast Vehicle
            this._rigidbody = this.getComponent("BABYLON.RigidbodyPhysics");
            if (this._rigidbody != null) {
                // Reset Linear Drag Damping
                this._rigidbody.setDamping(0, this._rigidbody.getAngularDamping());
                if (this._rigidbody.hasRaycastVehicle()) {
                    this.raycastVehicle = this._rigidbody.getRaycastVehicle();
                    if (this.raycastVehicle != null) {
                        var frontLeftWheelName = (this.frontLeftWheelTrans.name != null && this.frontLeftWheelTrans.name !== "") ? this.frontLeftWheelTrans.name : null;
                        var frontRightWheelName = (this.frontRightWheelTrans.name != null && this.frontRightWheelTrans.name !== "") ? this.frontRightWheelTrans.name : null;
                        var backLeftWheelName = (this.backLeftWheelTrans.name != null && this.backLeftWheelTrans.name !== "") ? this.backLeftWheelTrans.name : null;
                        var backRightWheelName = (this.backRightWheelTrans.name != null && this.backRightWheelTrans.name !== "") ? this.backRightWheelTrans.name : null;
                        var frontLeftWheelLabel = (this.frontLeftWheelCollider.name != null && this.frontLeftWheelCollider.name !== "") ? this.frontLeftWheelCollider.name : null;
                        var frontRightWheelLabel = (this.frontRightWheelCollider.name != null && this.frontRightWheelCollider.name !== "") ? this.frontRightWheelCollider.name : null;
                        var backLeftWheelLabel = (this.backLeftWheelCollider.name != null && this.backLeftWheelCollider.name !== "") ? this.backLeftWheelCollider.name : null;
                        var backRightWheelLabel = (this.backRightWheelCollider.name != null && this.backRightWheelCollider.name !== "") ? this.backRightWheelCollider.name : null;
                        // Get Wheel Indexs from Wheel Names
                        if (frontLeftWheelLabel != null)
                            this.FRONT_LEFT = this.raycastVehicle.getWheelIndexByName(frontLeftWheelLabel);
                        if (frontRightWheelLabel != null)
                            this.FRONT_RIGHT = this.raycastVehicle.getWheelIndexByName(frontRightWheelLabel);
                        if (backLeftWheelLabel != null)
                            this.BACK_LEFT = this.raycastVehicle.getWheelIndexByName(backLeftWheelLabel);
                        if (backRightWheelLabel != null)
                            this.BACK_RIGHT = this.raycastVehicle.getWheelIndexByName(backRightWheelLabel);
                        // Setup Wheel Info And Transform Meshes
                        if (this.raycastVehicle.getNumWheels() >= 4) {
                            if (this.FRONT_LEFT >= 0 && frontLeftWheelName != null) {
                                this.m_frontLeftWheel = this.raycastVehicle.getWheelInfo(this.FRONT_LEFT);
                                this.frontLeftWheelMesh = this.getChildTransform(frontLeftWheelName, BABYLON.SearchType.StartsWith, false);
                                if (this.frontLeftWheelMesh != null) {
                                    this.raycastVehicle.setWheelTransformMesh(this.FRONT_LEFT, this.frontLeftWheelMesh);
                                }
                            }
                            if (this.FRONT_RIGHT >= 0 && frontRightWheelName != null) {
                                this.m_frontRightWheel = this.raycastVehicle.getWheelInfo(this.FRONT_RIGHT);
                                this.frontRightWheelMesh = this.getChildTransform(frontRightWheelName, BABYLON.SearchType.StartsWith, false);
                                if (this.frontRightWheelMesh != null) {
                                    this.raycastVehicle.setWheelTransformMesh(this.FRONT_RIGHT, this.frontRightWheelMesh);
                                }
                            }
                            if (this.BACK_LEFT >= 0 && backLeftWheelName != null) {
                                this.m_backLeftWheel = this.raycastVehicle.getWheelInfo(this.BACK_LEFT);
                                if (this.wheelRadius <= 0 && this.m_backLeftWheel != null) {
                                    this.wheelRadius = this.m_backLeftWheel.get_m_wheelsRadius();
                                }
                                this.backLeftWheelMesh = this.getChildTransform(backLeftWheelName, BABYLON.SearchType.StartsWith, false);
                                if (this.backLeftWheelMesh != null) {
                                    this.raycastVehicle.setWheelTransformMesh(this.BACK_LEFT, this.backLeftWheelMesh);
                                    this._skidRLAudioSource = BABYLON.SceneManager.FindScriptComponent(this.backLeftWheelMesh, "BABYLON.AudioSource");
                                    if (this._skidRLAudioSource == null)
                                        BABYLON.Tools.Warn("No rear left skid audio source manager found for: " + this.transform.name);
                                }
                            }
                            if (this.BACK_RIGHT >= 0 && backRightWheelName != null) {
                                this.m_backRightWheel = this.raycastVehicle.getWheelInfo(this.BACK_RIGHT);
                                if (this.wheelRadius <= 0 && this.m_backRightWheel != null) {
                                    this.wheelRadius = this.m_backRightWheel.get_m_wheelsRadius();
                                }
                                this.backRightWheelMesh = this.getChildTransform(backRightWheelName, BABYLON.SearchType.StartsWith, false);
                                if (this.backRightWheelMesh != null) {
                                    this.raycastVehicle.setWheelTransformMesh(this.BACK_RIGHT, this.backRightWheelMesh);
                                    this._skidRRAudioSource = BABYLON.SceneManager.FindScriptComponent(this.backRightWheelMesh, "BABYLON.AudioSource");
                                    if (this._skidRRAudioSource == null)
                                        BABYLON.Tools.Warn("No rear right skid audio source manager found for: " + this.transform.name);
                                }
                            }
                        }
                        else {
                            BABYLON.Tools.Warn("Invalid vehicle controller wheel count info for: " + this.transform.name);
                        }
                    }
                    else {
                        BABYLON.Tools.Warn("Failed to create vehicle controller for: " + this.transform.name);
                    }
                }
                else {
                    BABYLON.Tools.Warn("No wheel collider information found for: " + this.transform.name);
                }
            }
            else {
                BABYLON.Tools.Warn("Failed to get rigidbody component: " + this.transform.name);
            }
        };
        StandardCarController.prototype.updateVehicleState = function () {
            var deltaTime = this.getDeltaSeconds();
            if (this.shiftDelay > 0) {
                this.shiftDelay -= deltaTime;
            }
            if (this.shiftDelay <= 0) {
                this.shiftDelay = 0;
                this.shiftingGears = false;
            }
            if (this._rigidbody != null && this.raycastVehicle != null) {
                this.forwardSpeed = this.raycastVehicle.getRawCurrentSpeedKph();
                if (this.forwardSpeed < 0.2)
                    this.forwardSpeed = 0;
                this.absoluteSpeed = this.raycastVehicle.getAbsCurrentSpeedKph();
                if (this.absoluteSpeed < 0.2)
                    this.absoluteSpeed = 0;
                this.americanSpeed = (this.absoluteSpeed * BABYLON.System.Kph2Mph);
                this.normalizedSpeed = BABYLON.Scalar.Clamp((this.absoluteSpeed / this.topEngineSpeed));
                if (this.gearBoxShiftRatios != null && this.gearIndex >= 0 && this.gearIndex < this.getGearShiftRatioCount()) {
                    var minimumDelta = Math.min(Math.max(deltaTime, 1 / 200), 1);
                    var wheelDiameter = (this.wheelRadius * 2 * BABYLON.System.Meter2Inch);
                    var finalGearRatio = (this.gearBoxShiftRatios[this.gearIndex] * this.differentialRatio * this.transmissionRatio);
                    this.engineRPM = (this.americanSpeed * finalGearRatio * 336) / wheelDiameter + 1000;
                    this.clutchSlip = BABYLON.Utilities.LerpClamp(this.clutchSlip, 0, 1 - Math.pow(0.01, minimumDelta));
                    this.lerpedRPM = BABYLON.Utilities.LerpClamp(this.oldRPM, this.engineRPM, (1 - this.clutchSlip));
                    if (this.engineRPM > this.gearBoxShiftNext && this.gearIndex > 1 && this.clutchSlip < 0.05) {
                        if (this.gearIndex < (this.getGearShiftRatioCount() - 1)) {
                            this.gearIndex++; // Gear Shift Up
                            this.clutchSlip = 1.0;
                            this.oldRPM = this.engineRPM;
                            this.shiftDelay = this.gearBoxShiftDelay;
                            this.shiftingGears = true;
                        }
                    }
                    else if (this.engineRPM < this.gearBoxShiftDown && this.gearIndex > 2 && this.clutchSlip < 0.05) {
                        this.gearIndex--; // Gear Shift Down
                        this.clutchSlip = 1.0;
                        this.oldRPM = this.engineRPM;
                        //this.shiftDelay = (this.gearBoxShiftDelay * 0.5);
                        //this.shiftingGears = true;
                    }
                }
            }
            // Account for further movement since the last wheel update
            var velocityScale = PROJECT.SkidmarkManager.GetVelocityScale();
            if (velocityScale > 0.0 && this._rigidbody != null) {
                this.m_velocityOffset.copyFrom(this._rigidbody.getLinearVelocity());
                this.m_velocityOffset.scaleInPlace(velocityScale);
            }
            // Update Wheel Skidding Info
            var skid_RL = 0, skid_RR = 0;
            var skidThreashold = 0.65;
            if (this.m_backLeftWheel != null) {
                skid_RL = BABYLON.Scalar.Clamp((1 - this.m_backLeftWheel.get_m_skidInfo()));
                if (skid_RL < skidThreashold)
                    skid_RL = 0;
                if (skid_RL > 0) {
                    var contactPointRL = this.m_backLeftWheel.get_m_raycastInfo().get_m_contactPointWS();
                    var contactNormalRL = this.m_backLeftWheel.get_m_raycastInfo().get_m_contactNormalWS();
                    var skidPosRL = new BABYLON.Vector3(contactPointRL.x(), contactPointRL.y(), contactPointRL.z());
                    var skidNormRL = new BABYLON.Vector3(contactNormalRL.x(), contactNormalRL.y(), contactNormalRL.z());
                    var skidScaleRL = BABYLON.Scalar.Normalize(skid_RL, skidThreashold, 1.0);
                    if (velocityScale > 0.0)
                        skidPosRL.addInPlace(this.m_velocityOffset);
                    this.m_backLeftWheelSkid = PROJECT.SkidmarkManager.AddSkidmarkSegment(skidPosRL, skidNormRL, skidScaleRL, this.m_backLeftWheelSkid);
                }
                else {
                    this.m_backLeftWheelSkid = -1;
                }
            }
            if (this.m_backRightWheel != null) {
                skid_RR = BABYLON.Scalar.Clamp((1 - this.m_backRightWheel.get_m_skidInfo()));
                if (skid_RR < skidThreashold)
                    skid_RR = 0;
                if (skid_RR > 0) {
                    var contactPointRR = this.m_backRightWheel.get_m_raycastInfo().get_m_contactPointWS();
                    var contactNormalRR = this.m_backRightWheel.get_m_raycastInfo().get_m_contactNormalWS();
                    var skidPosRR = new BABYLON.Vector3(contactPointRR.x(), contactPointRR.y(), contactPointRR.z());
                    var skidNormRR = new BABYLON.Vector3(contactNormalRR.x(), contactNormalRR.y(), contactNormalRR.z());
                    var skidScaleRR = BABYLON.Scalar.Normalize(skid_RR, skidThreashold, 1.0);
                    if (velocityScale > 0.0)
                        skidPosRR.addInPlace(this.m_velocityOffset);
                    this.m_backRightWheelSkid = PROJECT.SkidmarkManager.AddSkidmarkSegment(skidPosRR, skidNormRR, skidScaleRR, this.m_backRightWheelSkid);
                }
                else {
                    this.m_backRightWheelSkid = -1;
                }
            }
            // Update Engine And Wheel Pitch
            if (this._engineAudioSource != null) {
                var engineSoundClip = this._engineAudioSource.getSoundClip();
                if (engineSoundClip != null)
                    engineSoundClip.setPlaybackRate(this.getCurrentEnginePitch() * 0.75);
            }
            if (this._skidRLAudioSource != null) {
                var skidRLSoundClip = this._skidRLAudioSource.getSoundClip();
                if (skidRLSoundClip != null)
                    skidRLSoundClip.setPlaybackRate(skid_RL);
            }
            if (this._skidRRAudioSource != null) {
                var skidRRSoundClip = this._skidRRAudioSource.getSoundClip();
                if (skidRRSoundClip != null)
                    skidRRSoundClip.setPlaybackRate(skid_RR);
            }
            //const msg:string = ("MPH: " + this.americanSpeed.toFixed(1) + " - RL: " + skid_RL.toFixed(2) + " - RR: " + skid_RR.toFixed(2));
            //BABYLON.Utilities.PrintToScreen(msg, "#008000");
        };
        StandardCarController.prototype.destroyVehicleState = function () {
            this._rigidbody = null;
            this._engineAudioSource = null;
            this._skidRLAudioSource = null;
            this._skidRRAudioSource = null;
            if (this.m_frontLeftWheel != null) {
                Ammo.destroy(this.m_frontLeftWheel); // ???
                this.m_frontLeftWheel = null;
            }
            if (this.m_frontRightWheel != null) {
                Ammo.destroy(this.m_frontRightWheel); // ???
                this.m_frontRightWheel = null;
            }
            if (this.m_backLeftWheel != null) {
                Ammo.destroy(this.m_backLeftWheel); // ???
                this.m_backLeftWheel = null;
            }
            if (this.m_backRightWheel != null) {
                Ammo.destroy(this.m_backRightWheel); // ???
                this.m_backRightWheel = null;
            }
            this.m_physicsWorld = null;
            this.raycastVehicle = null;
            this.frontLeftWheelMesh = null;
            this.frontRightWheelMesh = null;
            this.backLeftWheelMesh = null;
            this.backRightWheelMesh = null;
            this.frontLeftWheelTrans = null;
            this.frontRightWheelTrans = null;
            this.backLeftWheelTrans = null;
            this.backRightWheelTrans = null;
            this.frontLeftWheelCollider = null;
            this.frontRightWheelCollider = null;
            this.backLeftWheelCollider = null;
            this.backRightWheelCollider = null;
        };
        /** Drives the raycast vehicle with the specfied movement and hand braking properties. */
        StandardCarController.prototype.drive = function (forward, turn, braking) {
            if (braking === void 0) { braking = false; }
            if (this._rigidbody == null || this.raycastVehicle == null)
                return;
            if (this.FRONT_LEFT >= 0 && this.FRONT_RIGHT >= 0 && this.BACK_LEFT >= 0 && this.BACK_RIGHT >= 0) {
                var deltaTime = this.getDeltaSeconds();
                this.brakingForce = 0;
                this.engineForce = 0;
                // ..
                // Update Gearing Box (TODO: Fix Start Gear Engine Sound)
                // ..
                var throttleAmount = 0;
                var brakingAmount = 0;
                if (forward > 0.1) { // Forward
                    brakingAmount = 0;
                    throttleAmount = Math.abs(forward);
                }
                else if (forward < 0.1) { // Reverse
                    throttleAmount = 0;
                    brakingAmount = Math.abs(forward);
                }
                if (this.absoluteSpeed >= 0.2) {
                    if (this.gearIndex > 0) {
                        // TODO: Get Engine Curve Power
                    }
                    else {
                        // TODO: Get Engine Curve Power
                    }
                }
                else {
                    if (throttleAmount > 0.1) {
                        this.gearIndex = 2; // Set First Gear
                    }
                    else if (brakingAmount > 0.1) {
                        this.gearIndex = 0; // Set Reverse Gear
                    }
                    else {
                        this.gearIndex = 1; // Set Neutral Gear
                    }
                }
                // ..
                // Update Engine Forces
                // ..
                var gearShiftScale = (this.gearBoxShiftScales != null && this.gearBoxShiftScales.length > this.gearIndex) ? this.gearBoxShiftScales[this.gearIndex] : 1.0;
                var gearShiftRatio = (this.gearBoxShiftRatios != null && this.gearBoxShiftRatios.length > this.gearIndex) ? this.gearBoxShiftRatios[this.gearIndex] : 1.0;
                var finalGearRatio = (gearShiftRatio * this.differentialRatio * this.transmissionRatio);
                var engineMotorTorque = this.getVehicleEngineTorque(this.engineRPM) * Math.abs(forward) * gearShiftScale;
                var allowedEnginePower = (engineMotorTorque * finalGearRatio);
                if (forward > 0.1) { // Forward
                    if (this.forwardSpeed < -1)
                        this.brakingForce = this.maxBrakingForce;
                    else
                        this.engineForce = allowedEnginePower;
                }
                else if (forward < -0.1) { // Reverse
                    if (this.forwardSpeed > 1)
                        this.brakingForce = this.maxBrakingForce;
                    else
                        this.engineForce = -(allowedEnginePower * this.maxReverseSpeed);
                }
                else {
                    this.engineForce = 0;
                    this.brakingForce = 10; // Static
                }
                if (this.shiftingGears === true || this.americanSpeed > this.topEngineSpeed)
                    this.engineForce = 0;
                // ..
                // Update Turning Angle
                // ..
                this.steeringIncrement = BABYLON.Scalar.Lerp(this.lowSpeedIncrement, this.highSpeedIncrement, this.normalizedSpeed);
                this.allowedTurningAngle = BABYLON.Scalar.Lerp(this.lowSpeedAngle, this.highSpeedAngle, this.normalizedSpeed);
                if (turn > 0) { // Right
                    if (this.vehicleSteer < this.allowedTurningAngle) {
                        this.vehicleSteer += (this.steeringIncrement);
                    }
                }
                else if (turn < 0) { // Left
                    if (this.vehicleSteer > -this.allowedTurningAngle) {
                        this.vehicleSteer -= (this.steeringIncrement);
                    }
                }
                else {
                    if (this.vehicleSteer < -this.steeringIncrement) {
                        this.vehicleSteer += this.steeringIncrement;
                    }
                    else {
                        if (this.vehicleSteer > this.steeringIncrement) {
                            this.vehicleSteer -= this.steeringIncrement;
                        }
                        else {
                            this.vehicleSteer = 0;
                        }
                    }
                }
                // ..
                // Update Vehicle Controls
                // ..
                if (braking === true && this.handBrakingForce > 0) {
                    if (this.americanSpeed > 20) {
                        var frontLockFriction = (this.wheelLockFriction > 0.01) ? (this.wheelLockFriction - 0.01) : this.wheelLockFriction;
                        if (this.m_frontLeftWheel != null && this.m_frontLeftWheel.defaultFriction != null) {
                            this.m_frontLeftWheel.set_m_frictionSlip(this.m_frontLeftWheel.defaultFriction * frontLockFriction);
                        }
                        if (this.m_frontRightWheel != null && this.m_frontRightWheel.defaultFriction != null) {
                            this.m_frontRightWheel.set_m_frictionSlip(this.m_frontLeftWheel.defaultFriction * frontLockFriction);
                        }
                        if (this.m_backLeftWheel != null && this.m_backLeftWheel.defaultFriction != null) {
                            this.m_backLeftWheel.set_m_frictionSlip(this.m_frontLeftWheel.defaultFriction * this.wheelLockFriction);
                        }
                        if (this.m_backRightWheel != null && this.m_backRightWheel.defaultFriction != null) {
                            this.m_backRightWheel.set_m_frictionSlip(this.m_frontLeftWheel.defaultFriction * this.wheelLockFriction);
                        }
                    }
                    this.updateCurrentFrictionSlip(deltaTime * this.frictionSlipSpeed);
                    if (this.raycastVehicle.lockedWheelIndexes == null)
                        this.raycastVehicle.lockedWheelIndexes = [this.BACK_LEFT, this.BACK_RIGHT];
                    this.raycastVehicle.setSteeringAngle(this.vehicleSteer, this.FRONT_LEFT);
                    this.raycastVehicle.setSteeringAngle(this.vehicleSteer, this.FRONT_RIGHT);
                    this.raycastVehicle.setEngineForce(0, this.FRONT_LEFT);
                    this.raycastVehicle.setEngineForce(0, this.FRONT_RIGHT);
                    this.raycastVehicle.setEngineForce(0, this.BACK_LEFT);
                    this.raycastVehicle.setEngineForce(0, this.BACK_RIGHT);
                    this.raycastVehicle.setBrakingForce(0, this.FRONT_LEFT);
                    this.raycastVehicle.setBrakingForce(0, this.FRONT_RIGHT);
                    this.raycastVehicle.setBrakingForce(this.handBrakingForce, this.BACK_LEFT);
                    this.raycastVehicle.setBrakingForce(this.handBrakingForce, this.BACK_RIGHT);
                    // ..
                    // TODO: Support Angular Rotation Boost - ???
                    // ..
                    // let angularBoostFactor:number = 0; 
                    // if (angularBoostFactor !== 0) {
                    //    const angularVelocity:BABYLON.Vector3 = this._rigidbody.getAngularVelocity();
                    //    angularVelocity.y += (angularBoostFactor * this.driftingInfluence);
                    //    this._rigidbody.setAngularVelocity(angularVelocity);
                    // }
                }
                else {
                    //this.m_frontLeftWheel.set_m_frictionSlip(0);
                    //this.m_frontRightWheel.set_m_frictionSlip(0);
                    //this.m_backLeftWheel.set_m_frictionSlip(0.0);
                    //this.m_backRightWheel.set_m_frictionSlip(0.0);
                    this.updateCurrentFrictionSlip(deltaTime);
                    if (this.raycastVehicle.lockedWheelIndexes != null)
                        this.raycastVehicle.lockedWheelIndexes = null;
                    this.raycastVehicle.setSteeringAngle(this.vehicleSteer, this.FRONT_LEFT);
                    this.raycastVehicle.setSteeringAngle(this.vehicleSteer, this.FRONT_RIGHT);
                    if (this.wheelDriveType === 1 || this.wheelDriveType === 2) { // FRONT OR ALL WHEEL DRIVE
                        this.raycastVehicle.setEngineForce(this.engineForce, this.FRONT_LEFT);
                        this.raycastVehicle.setEngineForce(this.engineForce, this.FRONT_RIGHT);
                    }
                    if (this.wheelDriveType === 0 || this.wheelDriveType === 2) { // REAR OR ALL WHEEL DRIVE
                        this.raycastVehicle.setEngineForce(this.engineForce, this.BACK_LEFT);
                        this.raycastVehicle.setEngineForce(this.engineForce, this.BACK_RIGHT);
                    }
                    this.raycastVehicle.setBrakingForce(this.brakingForce * 0.5, this.FRONT_LEFT);
                    this.raycastVehicle.setBrakingForce(this.brakingForce * 0.5, this.FRONT_RIGHT);
                    this.raycastVehicle.setBrakingForce(this.brakingForce, this.BACK_LEFT);
                    this.raycastVehicle.setBrakingForce(this.brakingForce, this.BACK_RIGHT);
                }
                // Apply Downward Stablizing Force
                if (this.stabilizingForce > 0) {
                    var slength = this._rigidbody.getLinearVelocity().length();
                    if (slength < 1.0)
                        slength = 1.0;
                    var force = this.stabilizingForce * slength;
                    this.transform.up.scaleToRef(-force, this.downwardForce);
                    this._rigidbody.applyCentralForce(this.downwardForce);
                    // Trace Downward Force
                    // const msg:string = "Downward Force: " + this.downwardForce.x.toFixed(2) + " x " + this.downwardForce.y.toFixed(2) + " x " + this.downwardForce.z.toFixed(2);
                    // BABYLON.Utilities.PrintToScreen(msg, "#008000");
                }
                // Trace Current Speed
                // const msg:string = ("Speed: " + this.americanSpeed.toFixed(1) + " --> Turn Angle: " + this.allowedTurningAngle.toFixed(4) + " --> Turn Increment: " + this.steeringIncrement.toFixed(4));
                // const msg:string = ("MPH: " + this.americanSpeed.toFixed(1) + " --> Gear Index: " + this.gearIndex.toFixed(0) + " --> Engine RPM: " + this.engineRPM.toFixed(0) + " ---> Engine Pitch: " + this.getCurrentEnginePitch().toFixed(2) + " ---> Clutch Slip: " + this.clutchSlip.toFixed(4) + " ---> Raw KPH: " + this.absoluteSpeed.toFixed(1));
                // const msg:string = ("Car Speed: " + this.americanSpeed.toFixed(1) + " --> Gear Index: " + this.gearIndex.toFixed(0) + " --> Engine RPM: " + this.engineRPM.toFixed(0) + " ---> Engine Toruqe: " + engineMotorTorque.toFixed(2)+ " ---> Engine Power: " + allowedEnginePower.toFixed(2));
                // BABYLON.Utilities.PrintToScreen(msg, "#008000");
            }
        };
        StandardCarController.prototype.getVehicleEngineTorque = function (rpm) {
            var result = 2000;
            //if (this.engineTorqueCurve != null) {
            //    result = 1000; // TODO: Sample Animation Curve
            //}
            //if (result <= 0) {
            //    result = 100;
            //}
            return result;
        };
        StandardCarController.prototype.updateCurrentFrictionSlip = function (deltaTime) {
            if (this.m_frontLeftWheel != null && this.m_frontLeftWheel.defaultFriction != null) {
                var frontLeftFriction = this.m_frontLeftWheel.get_m_frictionSlip();
                if (frontLeftFriction !== this.m_frontLeftWheel.defaultFriction) {
                    frontLeftFriction = BABYLON.Scalar.Lerp(frontLeftFriction, this.m_frontLeftWheel.defaultFriction, deltaTime);
                    this.m_frontLeftWheel.set_m_frictionSlip(frontLeftFriction);
                }
            }
            if (this.m_frontRightWheel != null && this.m_frontRightWheel.defaultFriction != null) {
                var frontRightFriction = this.m_frontRightWheel.get_m_frictionSlip();
                if (frontRightFriction !== this.m_frontRightWheel.defaultFriction) {
                    frontRightFriction = BABYLON.Scalar.Lerp(frontRightFriction, this.m_frontRightWheel.defaultFriction, deltaTime);
                    this.m_frontRightWheel.set_m_frictionSlip(frontRightFriction);
                }
            }
            if (this.m_backLeftWheel != null && this.m_backLeftWheel.defaultFriction != null) {
                var backLeftFriction = this.m_backLeftWheel.get_m_frictionSlip();
                if (backLeftFriction !== this.m_backLeftWheel.defaultFriction) {
                    backLeftFriction = BABYLON.Scalar.Lerp(backLeftFriction, this.m_backLeftWheel.defaultFriction, deltaTime);
                    this.m_backLeftWheel.set_m_frictionSlip(backLeftFriction);
                }
            }
            if (this.m_backRightWheel != null && this.m_backRightWheel.defaultFriction != null) {
                var backRightFriction = this.m_backRightWheel.get_m_frictionSlip();
                if (backRightFriction !== this.m_backRightWheel.defaultFriction) {
                    backRightFriction = BABYLON.Scalar.Lerp(backRightFriction, this.m_backRightWheel.defaultFriction, deltaTime);
                    this.m_backRightWheel.set_m_frictionSlip(backRightFriction);
                }
            }
        };
        return StandardCarController;
    }(BABYLON.ScriptComponent));
    PROJECT.StandardCarController = StandardCarController;
})(PROJECT || (PROJECT = {}));
var PROJECT;
(function (PROJECT) {
    /**
     * Babylon Script Component
     * @class VehicleInputController
     */
    var VehicleInputController = /** @class */ (function (_super) {
        __extends(VehicleInputController, _super);
        function VehicleInputController(transform, scene, properties) {
            if (properties === void 0) { properties = {}; }
            var _this = _super.call(this, transform, scene, properties) || this;
            _this.playerDeltaX = 0;
            _this.playerDeltaY = 0;
            _this.playerMouseX = 0;
            _this.playerMouseY = 0;
            _this.usedDistance = 0;
            _this.wantedRotationAngle = 0;
            _this.wantedHeight = 0;
            _this.currentRotationAngle = 0;
            _this.currentHeight = 0;
            _this.wantedPosition = BABYLON.Vector3.Zero();
            _this.targetPosition = BABYLON.Vector3.Zero();
            _this.targetRotation = BABYLON.Quaternion.Zero();
            _this.targetAngles = BABYLON.Vector3.Zero();
            _this.cameraAngles = BABYLON.Vector3.Zero();
            _this.rotationQuat = BABYLON.Quaternion.Zero();
            _this.rotationVec = BABYLON.Vector3.Zero();
            _this.distanceVec = BABYLON.Vector3.Zero();
            _this.yVelocity = BABYLON.Vector2.Zero();
            _this.zVelocity = BABYLON.Vector2.Zero();
            _this.lookAtPosition = BABYLON.Vector3.Zero();
            _this.lookAtVector = BABYLON.Vector3.Zero();
            _this.enableInput = false;
            _this.attachCamera = false;
            _this.followBehind = true;
            _this.followDistance = 6.0;
            _this.followHeight = 2.0;
            _this.lookAtHeight = 2.0;
            _this.heightDamping = 2.0;
            _this.rotationSnapTime = 0.3;
            _this.distanceSnapTime = 0.3;
            _this.distanceMultiplier = 0.033;
            _this.playerNumber = BABYLON.PlayerNumber.One;
            _this.triggerForward = BABYLON.Xbox360Trigger.Right;
            _this.keyboardForawrd = BABYLON.UserInputKey.W;
            _this.auxKeyboardForawrd = BABYLON.UserInputKey.UpArrow;
            _this.triggerBackwards = BABYLON.Xbox360Trigger.Left;
            _this.keyboardBackwards = BABYLON.UserInputKey.S;
            _this.auxKeyboardBackwards = BABYLON.UserInputKey.DownArrow;
            _this.buttonHandbrake = BABYLON.Xbox360Button.X;
            _this.keyboardHandbrake = BABYLON.UserInputKey.SpaceBar;
            _this.m_cameraTransform = null;
            _this.m_rigidbodyPhysics = null;
            _this.m_standardCarController = null;
            _this.enableInput = _this.getEditorProperty("enableInput", _this.enableInput);
            _this.playerNumber = _this.getEditorProperty("playerNumber", _this.playerNumber);
            _this.attachCamera = _this.getEditorProperty("attachCamera", _this.attachCamera);
            _this.followBehind = _this.getEditorProperty("followBehind", _this.followBehind);
            _this.followDistance = _this.getEditorProperty("followDistance", _this.followDistance);
            _this.followHeight = _this.getEditorProperty("followHeight", _this.followHeight);
            _this.lookAtHeight = _this.getEditorProperty("lookAtHeight", _this.lookAtHeight);
            _this.heightDamping = _this.getEditorProperty("heightDamping", _this.heightDamping);
            _this.rotationSnapTime = _this.getEditorProperty("rotationSnapTime", _this.rotationSnapTime);
            _this.distanceSnapTime = _this.getEditorProperty("distanceSnapTime", _this.distanceSnapTime);
            _this.distanceMultiplier = _this.getEditorProperty("distanceMultiplier", _this.distanceMultiplier);
            return _this;
        }
        VehicleInputController.prototype.getPlayerDeltaX = function () { return this.playerDeltaX; };
        ;
        VehicleInputController.prototype.getPlayerDeltaY = function () { return this.playerDeltaY; };
        ;
        VehicleInputController.prototype.getPlayerMouseX = function () { return this.playerMouseX; };
        ;
        VehicleInputController.prototype.getPlayerMouseY = function () { return this.playerMouseY; };
        ;
        VehicleInputController.prototype.start = function () { this.initVehicleController(); };
        VehicleInputController.prototype.update = function () { this.updateVehicleController(); };
        VehicleInputController.prototype.destroy = function () { this.destroyVehicleController(); };
        //////////////////////////////////////////////////
        // Protected Character Movement State Functions //
        //////////////////////////////////////////////////
        VehicleInputController.prototype.initVehicleController = function () {
            var _this = this;
            // Get Rigidbody Physics
            this.m_rigidbodyPhysics = this.getComponent("BABYLON.RigidbodyPhysics");
            if (this.m_rigidbodyPhysics == null)
                BABYLON.Tools.Warn("Null rigidbody physics for: " + this.transform.name);
            // Get Standard Car Controller
            this.m_standardCarController = this.getComponent("PROJECT.StandardCarController");
            if (this.m_standardCarController == null)
                BABYLON.Tools.Warn("Null standard car controller for: " + this.transform.name);
            // TODO: Get Player Camera Transform
            if (this.attachCamera === true) {
                this.m_cameraTransform = BABYLON.SceneManager.GetTransformNode(this.scene, "Main Camera");
                if (this.m_cameraTransform != null)
                    BABYLON.Utilities.ValidateTransformQuaternion(this.m_cameraTransform);
            }
            //const cameraBoom:BABYLON.Mesh = BABYLON.Mesh.CreateBox("Camera Boom", 0.5, this.scene);
            //cameraBoom.parent = this.transform;
            //cameraBoom.position.set(0, 1.5, 0);
            //cameraBoom.rotationQuaternion = BABYLON.Utilities.FromEuler(0,0,0);
            // Sync Vehicle Physics With Camera
            var abstractMesh = this.getAbstractMesh();
            if (abstractMesh != null)
                abstractMesh.physicsImpostor.registerAfterPhysicsStep(function (impostor) { _this.syncVehicleController(_this.followBehind, true); });
        };
        VehicleInputController.prototype.updateVehicleController = function () {
            if (this.enableInput === true) {
                // Get User Input
                this.playerDeltaX = BABYLON.SceneManager.GetUserInput(BABYLON.UserInputAxis.Horizontal, this.playerNumber);
                this.playerDeltaY = BABYLON.SceneManager.GetUserInput(BABYLON.UserInputAxis.Vertical, this.playerNumber);
                this.playerMouseX = BABYLON.SceneManager.GetUserInput(BABYLON.UserInputAxis.MouseX, this.playerNumber);
                this.playerMouseY = BABYLON.SceneManager.GetUserInput(BABYLON.UserInputAxis.MouseY, this.playerNumber);
                // Check Dead Stick
                if (Math.abs(this.playerDeltaX) <= BABYLON.UserInputOptions.GamepadDeadStickValue)
                    this.playerDeltaX = 0;
                if (Math.abs(this.playerDeltaY) <= BABYLON.UserInputOptions.GamepadDeadStickValue)
                    this.playerDeltaY = 0;
                if (Math.abs(this.playerMouseX) <= BABYLON.UserInputOptions.GamepadDeadStickValue)
                    this.playerMouseX = 0;
                if (Math.abs(this.playerMouseY) <= BABYLON.UserInputOptions.GamepadDeadStickValue)
                    this.playerMouseY = 0;
                // Get Button Triggers
                var auxForwardKeyboard = BABYLON.SceneManager.GetKeyboardInput(this.auxKeyboardForawrd); // Player One Only
                var forwardKeyboard = BABYLON.SceneManager.GetKeyboardInput(this.keyboardForawrd); // Player One Only
                var forwardTrigger = BABYLON.SceneManager.GetGamepadTriggerInput(this.triggerForward, this.playerNumber);
                var auxBackwardKeyboard = BABYLON.SceneManager.GetKeyboardInput(this.auxKeyboardBackwards); // Player One Only
                var backwardKeyboard = BABYLON.SceneManager.GetKeyboardInput(this.keyboardBackwards); // Player One Only
                var backwardTrigger = BABYLON.SceneManager.GetGamepadTriggerInput(this.triggerBackwards, this.playerNumber);
                var handbrakeKeyboard = BABYLON.SceneManager.GetKeyboardInput(this.keyboardHandbrake); // Player One Only
                var handbrakeButton = BABYLON.SceneManager.GetGamepadButtonInput(this.buttonHandbrake, this.playerNumber);
                // Reset Player Movement
                var playerMovement = 0;
                var playerSteering = 0;
                var playerHandbrake = false;
                // Primary Accelerattion
                if (forwardTrigger > 0.2)
                    playerMovement = forwardTrigger;
                else if (this.playerNumber === BABYLON.PlayerNumber.One && (forwardKeyboard === true || auxForwardKeyboard === true))
                    playerMovement = 1;
                // Braking Takes Precedence
                if (backwardTrigger > 0.2)
                    playerMovement = -backwardTrigger;
                else if (this.playerNumber === BABYLON.PlayerNumber.One && (backwardKeyboard === true || auxBackwardKeyboard === true))
                    playerMovement = -1;
                // Includes AD And Arrow Keys
                playerSteering = this.playerDeltaX;
                // Pull Hard Hand Brake Lever
                playerHandbrake = (handbrakeKeyboard === true || handbrakeButton === true);
                // Drive Standard Car Controller
                if (this.m_standardCarController != null)
                    this.m_standardCarController.drive(playerMovement, playerSteering, playerHandbrake);
            }
        };
        VehicleInputController.prototype.syncVehicleController = function (follow, look) {
            if (this.attachCamera === true && this.m_cameraTransform != null && this.m_rigidbodyPhysics != null) {
                // Update Info
                var deltaTime = this.getDeltaSeconds();
                this.m_rigidbodyPhysics.getTransformPositionToRef(this.targetPosition);
                this.m_rigidbodyPhysics.getTransformRotationToRef(this.targetRotation);
                // Smooth Height
                this.wantedHeight = this.targetPosition.y + this.followHeight;
                this.currentHeight = this.m_cameraTransform.position.y;
                this.currentHeight = BABYLON.Scalar.Lerp(this.currentHeight, this.wantedHeight, this.heightDamping * deltaTime);
                // Smooth Rotation
                BABYLON.Utilities.ToEulerToRef(this.targetRotation, this.targetAngles);
                BABYLON.Utilities.ToEulerToRef(this.m_cameraTransform.rotationQuaternion, this.cameraAngles);
                this.wantedRotationAngle = this.targetAngles.y;
                this.currentRotationAngle = this.cameraAngles.y;
                this.currentRotationAngle = BABYLON.Utilities.SmoothDampAngle(this.currentRotationAngle, this.wantedRotationAngle, this.rotationSnapTime, Number.MAX_VALUE, deltaTime, this.yVelocity);
                // Smooth Position
                this.wantedPosition.copyFrom(this.targetPosition);
                this.wantedPosition.y = this.currentHeight;
                this.usedDistance = BABYLON.Utilities.SmoothDampAngle(this.usedDistance, this.followDistance + (this.m_rigidbodyPhysics.getLinearVelocity().length() * this.distanceMultiplier), this.distanceSnapTime, Number.MAX_VALUE, deltaTime, this.zVelocity);
                // Set Wanted Position
                this.distanceVec.set(0, 0, -this.usedDistance);
                BABYLON.Utilities.FromEulerToRef(0, this.currentRotationAngle, 0, this.rotationQuat);
                BABYLON.Utilities.MultiplyQuaternionByVectorToRef(this.rotationQuat, this.distanceVec, this.rotationVec);
                this.wantedPosition.addInPlace(this.rotationVec);
                // Set Look At Position
                this.lookAtVector.set(0, this.lookAtHeight, 0);
                this.targetPosition.addToRef(this.lookAtVector, this.lookAtPosition);
                // Update Follow Camera
                if (follow === true)
                    this.m_cameraTransform.position.copyFrom(this.wantedPosition);
                if (look === true)
                    this.m_cameraTransform.lookAt(this.lookAtPosition);
            }
        };
        VehicleInputController.prototype.destroyVehicleController = function () {
            this.m_cameraTransform = null;
            this.m_rigidbodyPhysics = null;
            this.m_standardCarController = null;
        };
        return VehicleInputController;
    }(BABYLON.ScriptComponent));
    PROJECT.VehicleInputController = VehicleInputController;
})(PROJECT || (PROJECT = {}));
var PROJECT;
(function (PROJECT) {
    /**
     * Babylon Script Component
     * @class ItemRotator
     */
    var ItemRotator = /** @class */ (function (_super) {
        __extends(ItemRotator, _super);
        function ItemRotator(transform, scene, properties) {
            if (properties === void 0) { properties = {}; }
            var _this = _super.call(this, transform, scene, properties) || this;
            _this.rotateSpeed = 1.0;
            _this.rotateSpeed = _this.getEditorProperty("rotateSpeed", _this.rotateSpeed);
            return _this;
        }
        ItemRotator.prototype.start = function () {
            console.log("===> Starting item rotator for: " + this.transform.name);
        };
        ItemRotator.prototype.update = function () {
            var delta = this.getDeltaSeconds();
            this.transform.addRotation(0, (this.rotateSpeed * delta), 0);
        };
        ItemRotator.prototype.destroy = function () {
            console.log("===> Destroying item rotator for: " + this.transform.name);
        };
        return ItemRotator;
    }(BABYLON.ScriptComponent));
    PROJECT.ItemRotator = ItemRotator;
})(PROJECT || (PROJECT = {}));
var PROJECT;
(function (PROJECT) {
    /**
     * Babylon Script Component
     * @class TestAnimation
     */
    var TestAnimation = /** @class */ (function (_super) {
        __extends(TestAnimation, _super);
        function TestAnimation(transform, scene, properties) {
            if (properties === void 0) { properties = {}; }
            var _this = _super.call(this, transform, scene, properties) || this;
            //private animator:BABYLON.AnimationState = null;
            _this.animator = null;
            return _this;
        }
        TestAnimation.prototype.start = function () {
            console.log("===> Starting animation test for: " + this.transform.name);
            this.animator = this.getComponent("BABYLON.AnimationState");
            if (this.animator == null) {
                BABYLON.Tools.Warn("Failed to get animation state component: " + this.transform.name);
            }
        };
        TestAnimation.prototype.update = function () {
            // Update render loop function
        };
        TestAnimation.prototype.after = function () {
            // After render loop function
        };
        TestAnimation.prototype.destroy = function () {
            // Destroy component function
        };
        return TestAnimation;
    }(BABYLON.ScriptComponent));
    PROJECT.TestAnimation = TestAnimation;
})(PROJECT || (PROJECT = {}));
var PROJECT;
(function (PROJECT) {
    /**
     * Babylon Script Component
     * @class TestCollision
     */
    var TestCollision = /** @class */ (function (_super) {
        __extends(TestCollision, _super);
        function TestCollision(transform, scene, properties) {
            if (properties === void 0) { properties = {}; }
            var _this = _super.call(this, transform, scene, properties) || this;
            _this.rigidbody = null;
            return _this;
        }
        TestCollision.prototype.start = function () {
            var _this = this;
            // Start render loop function
            console.log("Test collision for: " + this.transform.name);
            this.rigidbody = this.getComponent("BABYLON.RigidbodyPhysics");
            if (this.rigidbody != null) {
                this.rigidbody.registerOnCollisionEnter(function (mesh) {
                    var tag = BABYLON.SceneManager.GetTransformTag(mesh);
                    console.log("###: " + _this.transform.name + ": Begin Contact With: " + mesh.name);
                });
                this.rigidbody.registerOnCollisionStay(function (mesh) {
                    var tag = BABYLON.SceneManager.GetTransformTag(mesh);
                    //console.log("###: " + this.transform.name + ": Update Contact With: " + mesh.name);
                });
                this.rigidbody.registerOnCollisionExit(function (mesh) {
                    var tag = BABYLON.SceneManager.GetTransformTag(mesh);
                    console.warn("###: " + _this.transform.name + ": End Contact With: " + mesh.name);
                });
            }
            else {
                console.warn("Failed to locate rigidbody component for: " + this.transform.name);
            }
        };
        TestCollision.prototype.update = function () {
            // Update render loop function
        };
        TestCollision.prototype.after = function () {
            // After render loop function
        };
        TestCollision.prototype.destroy = function () {
            // Destroy component function
        };
        return TestCollision;
    }(BABYLON.ScriptComponent));
    PROJECT.TestCollision = TestCollision;
})(PROJECT || (PROJECT = {}));
var PROJECT;
(function (PROJECT) {
    /**
     * Babylon Script Component
     * @class TestController
     */
    var TestController = /** @class */ (function (_super) {
        __extends(TestController, _super);
        function TestController(transform, scene, properties) {
            if (properties === void 0) { properties = {}; }
            var _this = _super.call(this, transform, scene, properties) || this;
            _this.testTexture = null;
            _this.m_physicsWorld = null;
            _this.m_physicsEngine = null;
            _this.ran = false;
            _this.testTexture = _this.getEditorProperty("testTexture", _this.testTexture);
            return _this;
        }
        TestController.prototype.start = function () {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    // Start render loop function
                    console.log("===> Starting test controller...");
                    this.m_physicsWorld = BABYLON.SceneManager.GetPhysicsWorld(this.scene);
                    this.m_physicsEngine = BABYLON.SceneManager.GetPhysicsEngine(this.scene);
                    return [2 /*return*/];
                });
            });
        };
        TestController.prototype.update = function () {
            // Update render loop function
            // const num_manifolds:number = this.m_physicsWorld.getBroadphase().getOverlappingPairCache().getNumOverlappingPairs();
            //const num_manifolds:number = this.m_physicsWorld.getDispatcher().getNumManifolds();
            //const msg = "Total Overlapping Paris: " + num_manifolds;
            //BABYLON.Utilities.PrintToScreen(msg);   
            // Test Running Loop
            //if (this.ran === false) {
            //    this.ran = true;
            //    
            //}
        };
        TestController.prototype.after = function () {
            // After render loop function
        };
        TestController.prototype.destroy = function () {
            // Destroy component function
        };
        return TestController;
    }(BABYLON.ScriptComponent));
    PROJECT.TestController = TestController;
})(PROJECT || (PROJECT = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQmFieWxvblRvb2xraXQyMDE5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vQXNzZXRzL0JhYnlsb24vW1Byb10vQ29udGVudC9EZWJ1Zy9EZWJ1Z0luZm9ybWF0aW9uLnRzIiwiLi4vQXNzZXRzL0JhYnlsb24vW1Byb10vQ29udGVudC9QaHlzaWNzL1NvZnRib2R5TWVzaC50cyIsIi4uL0Fzc2V0cy9CYWJ5bG9uL1tQcm9dL0NvbnRlbnQvUGxheWVycy9GaXJzdFBlcnNvbkNvbnRyb2xsZXIudHMiLCIuLi9Bc3NldHMvQmFieWxvbi9bUHJvXS9Db250ZW50L1BsYXllcnMvVGhpcmRQZXJzb25Db250cm9sbGVyLnRzIiwiLi4vQXNzZXRzL0JhYnlsb24vW1Byb10vQ29udGVudC9UZXN0aW5nL0JvdW5kaW5nQm94U2tpbnMudHMiLCIuLi9Bc3NldHMvQmFieWxvbi9bUHJvXS9Db250ZW50L1ZlaGljbGUvU2tpZG1hcmtNYW5hZ2VyLnRzIiwiLi4vQXNzZXRzL0JhYnlsb24vW1Byb10vQ29udGVudC9WZWhpY2xlL1N0YW5kYXJkQ2FyQ29udHJvbGxlci50cyIsIi4uL0Fzc2V0cy9CYWJ5bG9uL1tQcm9dL0NvbnRlbnQvVmVoaWNsZS9WZWhpY2xlSW5wdXRDb250cm9sbGVyLnRzIiwiLi4vQXNzZXRzL1NjcmlwdHMvSXRlbVJvdGF0b3IudHMiLCIuLi9Bc3NldHMvU2NyaXB0cy9UZXN0QW5pbWF0aW9uLnRzIiwiLi4vQXNzZXRzL1NjcmlwdHMvVGVzdENvbGxpc2lvbi50cyIsIi4uL0Fzc2V0cy9TY3JpcHRzL1Rlc3RDb250cm9sbGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLElBQU8sT0FBTyxDQTZJYjtBQTdJRCxXQUFPLE9BQU87SUFDVjs7O09BR0c7SUFDSDtRQUFzQyxvQ0FBdUI7UUFNekQsMEJBQW1CLFNBQWdDLEVBQUUsS0FBb0IsRUFB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QztZQUNuRSxLQUFLLEdBQUcsZUFBZSxDQUFDLGFBQWEsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQzlDLGVBQWUsQ0FBQyxtQkFBbUIsQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7WUFDN0QsZUFBZSxDQUFDLG1CQUFtQixDQUFDLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1lBQ25FLGVBQWUsQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztZQUNuRSxLQUFLLEdBQUcsZUFBZSxDQUFDLGFBQWEsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQzlDLGVBQWUsQ0FBQyxtQkFBbUIsQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7WUFDN0QsZUFBZSxDQUFDLG1CQUFtQixDQUFDLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1lBQ25FLGVBQWUsQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztZQUNuRSxLQUFLLEdBQUcsZUFBZSxDQUFDLGFBQWEsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQzlDLGVBQWUsQ0FBQyxtQkFBbUIsQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7WUFDN0QsZUFBZSxDQUFDLG1CQUFtQixDQUFDLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxH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LENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQzt3QkFDckosSUFBTSxrQkFBa0IsR0FBVSxDQUFDLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxJQUFJLEtBQUssRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQzt3QkFDekosSUFBTSxtQkFBbUIsR0FBVSxDQUFDLElBQUksQ0FBQyxzQkFBc0IsQ0FBQyxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksQ0FBQyxzQkFBc0IsQ0FBQyxJQUFJLEtBQUssRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxzQkFBc0IsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQzt3QkFDbkssSUFBTSxvQkFBb0IsR0FBVSxDQUFDLElBQUksQ0FBQyx1QkFBdUIsQ0FBQyxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksQ0FBQyx1QkFBdUIsQ0FBQyxJQUFJLEtBQUssRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyx1QkFBdUIsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQzt3QkFDdkssSUFBTSxrQkFBa0IsR0FBVSxDQUFDLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxJQUFJLEtBQUssRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQzt3QkFDL0osSUFBTSxtQkFBbUIsR0FBVSxDQUFDLElBQUksQ0FBQyxzQkFBc0IsQ0FBQyxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksQ0FBQyxzQkFBc0IsQ0FBQyxJQUFJLEtBQUssRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxzQkFBc0IsQ0FBQyxJQUFJ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VUFBVSxDQUFDLFNBRXRDO1lBTk8saUJBQVcsR0FBTyxJQUFJLENBQUM7WUFDdkIsb0JBQWMsR0FBTyxJQUFJLENBQUM7WUFDeEIscUJBQWUsR0FBMEIsSUFBSSxDQUFDO1lBOEdoRCxTQUFHLEdBQVcsS0FBSyxDQUFDO1lBM0d4QixLQUFJLENBQUMsV0FBVyxHQUFHLEtBQUksQ0FBQyxpQkFBaUIsQ0FBQyxhQUFhLEVBQUUsS0FBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDOztRQUMvRSxDQUFDO1FBRWUsOEJBQUssR0FBckI7OztvQkFDSSw2QkFBNkI7b0JBQzdCLE9BQU8sQ0FBQyxHQUFHLENBQUMsa0NBQWtDLENBQUMsQ0FBQztvQkFDaEQsSUFBSSxDQUFDLGNBQWMsR0FBRyxPQUFPLENBQUMsWUFBWSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7b0JBQ3ZFLElBQUksQ0FBQyxlQUFlLEdBQUcsT0FBTyxDQUFDLFlBQVksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7Ozs7U0FrRzVFO1FBR1MsK0JBQU0sR0FBaEI7WUFDSSw4QkFBOEI7WUFDOUIsdUhBQXVIO1lBQ3ZILHFGQUFxRjtZQUNyRiwwREFBMEQ7WUFDMUQsMENBQTBDO1lBQzFDLG9CQUFvQjtZQUNwQiwyQkFBMkI7WUFDM0Isc0JBQXNCO1lBQ3RCLE1BQU07WUFDTixHQUFHO1FBQ1AsQ0FBQztRQUVTLDhCQUFLLEdBQWY7WUFDSSw2QkFBNkI7UUFDakMsQ0FBQztRQUVTLGdDQUFPLEdBQWpCO1lBQ0ksNkJBQTZCO1FBQ2pDLENBQUM7UUFDTCxxQkFBQztJQUFELENBQUMsQUF0SUQsQ0FBb0MsT0FBTyxDQUFDLGVBQWUsR0FzSTFEO0lBdElZLHNCQUFjLGlCQXNJMUIsQ0FBQTtBQUNMLENBQUMsRUE1SU0sT0FBTyxLQUFQLE9BQU8sUUE0SWIiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUgUFJPSkVDVCB7XG4gICAgLyoqXG4gICAgICogQmFieWxvbiBTY3JpcHQgQ29tcG9uZW50XG4gICAgICogQGNsYXNzIERlYnVnSW5mb3JtYXRpb25cbiAgICAgKi9cbiAgICBleHBvcnQgY2xhc3MgRGVidWdJbmZvcm1hdGlvbiBleHRlbmRzIEJBQllMT04uU2NyaXB0Q29tcG9uZW50IHtcbiAgICAgICAgcHJpdmF0ZSBrZXlzOmJvb2xlYW4gPSB0cnVlO1xuICAgICAgICBwcml2YXRlIHNob3c6Ym9vbGVhbiA9IHRydWU7XG4gICAgICAgIHByaXZhdGUgcG9wdXA6Ym9vbGVhbiA9IGZhbHNlO1xuICAgICAgICBwcml2YXRlIHZpZXdzOmJvb2xlYW4gPSBmYWxzZTtcbiAgICAgICAgcHJpdmF0ZSB4Ym94OmJvb2xlYW4gPSBmYWxzZTtcbiAgICAgICAgcHVibGljIGNvbnN0cnVjdG9yKHRyYW5zZm9ybTogQkFCWUxPTi5UcmFuc2Zvcm1Ob2RlLCBzY2VuZTogQkFCWUxPTi5TY2VuZSwgcHJvcGVydGllczogYW55ID0ge30pIHtcbiAgICAgICAgICAgIHN1cGVyKHRyYW5zZm9ybSwgc2NlbmUsIHByb3BlcnRpZXMpO1xuICAgICAgICAgICAgdGhpcy5rZXlzID0gdGhpcy5nZXRFZGl0b3JQcm9wZXJ0eShcImVuYWJsZURlYnVnS2V5c1wiLCB0aGlzLmtleXMpO1xuICAgICAgICAgICAgdGhpcy5zaG93ID0gdGhpcy5nZXRFZGl0b3JQcm9wZXJ0eShcInNob3dEZWJ1Z0xhYmVsc1wiLCB0aGlzLnNob3cpO1xuICAgICAgICAgICAgdGhpcy5wb3B1cCA9IHRoaXMuZ2V0RWRpdG9yUHJvcGVydHkoXCJwb3B1cERlYnVnUGFuZWxcIiwgdGhpcy5wb3B1cCk7XG4gICAgICAgICAgICB0aGlzLnZpZXdzID0gdGhpcy5nZXRFZGl0b3JQcm9wZXJ0eShcInRvZ2dsZVBsYXllclZpZXdzXCIsIHRoaXMudmlld3MpO1xuICAgICAgICAgICAgdGhpcy54Ym94ID0gdGhpcy5nZXRFZGl0b3JQcm9wZXJ0eShcImFsbG93WGJveExpdmVTaWduSW5cIiwgdGhpcy54Ym94KTtcbiAgICAgICAgICAgIC8vIC4uXG4gICAgICAgICAgICBpZiAoQkFCWUxPTi5TY2VuZU1hbmFnZXIuSXNXaW5kb3dzKCkpIHRoaXMucG9wdXAgPSBmYWxzZTtcbiAgICAgICAgICAgIEJBQllMT04uVG9vbHMuTG9nKFwiRGVidWcgaW5mb3JtYXRpb24gb3ZlcmxheSBsb2FkZWRcIik7XG4gICAgICAgIH1cblxuICAgICAgICBwcm90ZWN0ZWQgc3RhcnQoKSA6dm9pZCB7XG4gICAgICAgICAgICAvL3RoaXMuc2NyZWVuID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzY3JlZW5cIik7XG4gICAgICAgICAgICAvL3RoaXMudG9nZ2xlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0b2dnbGVcIik7XG4gICAgICAgICAgICAvL3RoaXMuc2lnbmluID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzaWduaW5cIik7XG4gICAgICAgICAgICAvL3RoaXMucmVsb2FkID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJyZWxvYWRcIik7XG4gICAgICAgICAgICAvL3RoaXMubW91c2UgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1vdXNlXCIpO1xuICAgICAgICAgICAgLy90aGlzLmRlYnVnID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJkZWJ1Z1wiKTtcbiAgICAgICAgICAgIGlmICh0aGlzLnNob3cgPT09IHRydWUpIHtcbiAgICAgICAgICAgICAgICAvKlxuICAgICAgICAgICAgICAgIGlmICh0aGlzLmtleXMgPT09IHRydWUpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFCQUJZTE9OLlNjZW5lTWFuYWdlci5Jc1hib3hPbmUoKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuc2NyZWVuKSB0aGlzLnNjcmVlbi5pbm5lckhUTUwgPSBcIkYgLSBTaG93IEZ1bGwgU2NyZWVuXCI7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKEJBQllMT04uQ2FtZXJhU3lzdGVtLklzTXVsdGlQbGF5ZXJWaWV3KCkgJiYgdGhpcy52aWV3cyA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMudG9nZ2xlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKEJBQllMT04uU2NlbmVNYW5hZ2VyLklzWGJveE9uZSgpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMudG9nZ2xlLnN0eWxlLnRvcCA9IFwiMjlweFwiO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnRvZ2dsZS5pbm5lckhUTUwgPSBcIjEgLSA0IFRvZ2dsZSBQbGF5ZXIgVmlld1wiO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChCQUJZTE9OLlNjZW5lTWFuYWdlci5Jc1hib3hMaXZlUGx1Z2luRW5hYmxlZCgpICYmIHRoaXMueGJveCA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuc2lnbmluKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKEJBQllMT04uU2NlbmVNYW5hZ2VyLklzWGJveE9uZSgpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2lnbmluLnN0eWxlLnRvcCA9IFwiNDlweFwiO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNpZ25pbi5pbm5lckhUTUwgPSBcIlggLSBYYm94IExpdmUgU2lnbiBJblwiO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLm1vdXNlKSB0aGlzLm1vdXNlLmlubmVySFRNTCA9IChCQUJZTE9OLlNjZW5lTWFuYWdlci5Jc1hib3hPbmUoKSkgPyBcIk0gLSBNb3VzZVwiIDogXCJcIjtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMucmVsb2FkKSB0aGlzLnJlbG9hZC5pbm5lckhUTUwgPSBcIlIgLSBSZWxvYWRcIjtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuZGVidWcpIHRoaXMuZGVidWcuaW5uZXJIVE1MID0gXCJQIC0gRGVidWdcIjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0aGlzLmtleXMgPT09IHRydWUpIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy52aWV3cyA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIkVuYWJsZSBNdWx0aXBsYXllciBLZXlzXCIpO1xuICAgICAgICAgICAgICAgICAgICBCQUJZTE9OLlNjZW5lTWFuYWdlci5PbktleWJvYXJkUHJlc3MoQkFCWUxPTi5Vc2VySW5wdXRLZXkuTnVtMSwgKCk9PntcbiAgICAgICAgICAgICAgICAgICAgICAgIEJBQllMT04uVW5pdmVyc2FsQ2FtZXJhU3lzdGVtLlNldE11bHRpUGxheWVyVmlld0xheW91dCh0aGlzLnNjZW5lLCAxKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiMSBwbGF5ZXIgcHJlc3NlZFwiKTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIEJBQllMT04uU2NlbmVNYW5hZ2VyLk9uS2V5Ym9hcmRQcmVzcyhCQUJZTE9OLlVzZXJJbnB1dEtleS5OdW0yLCAoKT0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgQkFCWUxPTi5Vbml2ZXJzYWxDYW1lcmFTeXN0ZW0uU2V0TXVsdGlQbGF5ZXJWaWV3TGF5b3V0KHRoaXMuc2NlbmUsIDIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCIyIHBsYXllcnMgcHJlc3NlZFwiKTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIEJBQllMT04uU2NlbmVNYW5hZ2VyLk9uS2V5Ym9hcmRQcmVzcyhCQUJZTE9OLlVzZXJJbnB1dEtleS5OdW0zLCAoKT0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgQkFCWUxPTi5Vbml2ZXJzYWxDYW1lcmFTeXN0ZW0uU2V0TXVsdGlQbGF5ZXJWaWV3TGF5b3V0KHRoaXMuc2NlbmUsIDMpO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCIzIHBsYXllcnMgcHJlc3NlZFwiKTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIEJBQllMT04uU2NlbmVNYW5hZ2VyLk9uS2V5Ym9hcmRQcmVzcyhCQUJZTE9OLlVzZXJJbnB1dEtleS5OdW00LCAoKT0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgQkFCWUxPTi5Vbml2ZXJzYWxDYW1lcmFTeXN0ZW0uU2V0TXVsdGlQbGF5ZXJWaWV3TGF5b3V0KHRoaXMuc2NlbmUsIDQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCI0IHBsYXllcnMgcHJlc3NlZFwiKTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIEJBQllMT04uU2NlbmVNYW5hZ2VyLk9uS2V5Ym9hcmRQcmVzcyhCQUJZTE9OLlVzZXJJbnB1dEtleS5SLCAoKT0+e1xuICAgICAgICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgQkFCWUxPTi5TY2VuZU1hbmFnZXIuT25LZXlib2FyZFByZXNzKEJBQllMT04uVXNlcklucHV0S2V5LkksICgpPT57XG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLnBvcHVwID09PSB0cnVlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBCQUJZTE9OLlNjZW5lTWFuYWdlci5Qb3B1cERlYnVnKHRoaXMuc2NlbmUpO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgQkFCWUxPTi5TY2VuZU1hbmFnZXIuVG9nZ2xlRGVidWcodGhpcy5zY2VuZSwgdHJ1ZSwgbnVsbCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBpZiAoQkFCWUxPTi5TY2VuZU1hbmFnZXIuSXNYYm94T25lKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG5hdmlnYXRvci5nYW1lcGFkSW5wdXRFbXVsYXRpb24pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIEJBQllMT04uU2NlbmVNYW5hZ2VyLk9uS2V5Ym9hcmRQcmVzcyhCQUJZTE9OLlVzZXJJbnB1dEtleS5NLCAoKT0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChuYXZpZ2F0b3IuZ2FtZXBhZElucHV0RW11bGF0aW9uICE9PSBcIm1vdXNlXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmF2aWdhdG9yLmdhbWVwYWRJbnB1dEVtdWxhdGlvbiA9IFwibW91c2VcIjtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYXZpZ2F0b3IuZ2FtZXBhZElucHV0RW11bGF0aW9uID0gXCJnYW1lcGFkXCI7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBCQUJZTE9OLlNjZW5lTWFuYWdlci5PbktleWJvYXJkUHJlc3MoQkFCWUxPTi5Vc2VySW5wdXRLZXkuRiwgKCk9PntcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vQkFCWUxPTi5Ub29scy5SZXF1ZXN0RnVsbHNjcmVlbihkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zY2VuZS5nZXRFbmdpbmUoKS5lbnRlckZ1bGxzY3JlZW4odHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoQkFCWUxPTi5XaW5kb3dzUGxhdGZvcm0uSXNYYm94TGl2ZVBsdWdpbkVuYWJsZWQoKSAmJiB0aGlzLnhib3ggPT09IHRydWUpIHtcbiAgICAgICAgICAgICAgICAgICAgQkFCWUxPTi5TY2VuZU1hbmFnZXIuT25LZXlib2FyZFByZXNzKEJBQllMT04uVXNlcklucHV0S2V5LlgsICgpPT57XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgcGxheWVyOkJBQllMT04uUGxheWVyTnVtYmVyLk9uZSA9IEJBQllMT04uUGxheWVyTnVtYmVyLk9uZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghQkFCWUxPTi5XaW5kb3dzUGxhdGZvcm0uSXNYYm94TGl2ZVVzZXJTaWduZWRJbihudWxsLCBwbGF5ZXIpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQkFCWUxPTi5Ub29scy5Mb2coXCI9PT0+IFRyeWluZyBYYm94IExpdmUgU2lnbiBJbiBGb3IgUGxheWVyOiBcIiArIHBsYXllci50b1N0cmluZygpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBCQUJZTE9OLldpbmRvd3NQbGF0Zm9ybS5YYm94TGl2ZVVzZXJTaWduSW4ocGxheWVyLCAocmVzdWx0OiBNaWNyb3NvZnQuWGJveC5TZXJ2aWNlcy5TeXN0ZW0uU2lnbkluUmVzdWx0KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciB1c2VyID0gQkFCWUxPTi5XaW5kb3dzUGxhdGZvcm0uR2V0WGJveExpdmVVc2VyKHBsYXllcik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBtc2cgPSBcIihcIiArIHVzZXIueGJveFVzZXJJZCArIFwiKSAtIFwiICsgdXNlci5nYW1lcnRhZztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQkFCWUxPTi5TY2VuZU1hbmFnZXIuQWxlcnRNZXNzYWdlKG1zZywgXCJYYm94IExpdmUgVXNlciBTaWduZWQgSW5cIik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgKGVycik9PntcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG1zZzpzdHJpbmcgPSBcIkVuY291bnRlcmVkIFNpZ24gRXJyb3JcIjtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQkFCWUxPTi5Ub29scy5XYXJuKG1zZyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEJBQllMT04uU2NlbmVNYW5hZ2VyLkFsZXJ0TWVzc2FnZShtc2csIFwiWGJveCBMaXZlIFdhcm5pbmdcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIEJBQllMT04uVG9vbHMuV2FybihcIlhib3ggTGl2ZSBVc2VyIEFscmVhZHkgU2lnbmVkIEluXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIEJBQllMT04uU2NlbmVNYW5hZ2VyLkFsZXJ0TWVzc2FnZShcIlVzZXIgQWxyZWFkeSBTaWduZWQgSW5cIiwgXCJYYm94IExpdmUgV2FybmluZ1wiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIERlZmF1bHQgUHJpbnQgVG8gU2NyZWVuIFRleHRcbiAgICAgICAgICAgIHZhciBwcmludENvbG9yOnN0cmluZyA9ICh0aGlzLnNjZW5lLmdldEVuZ2luZSgpLndlYkdMVmVyc2lvbiA8IDIpID8gXCJyZWRcIiA6IFwiIzBjMFwiO1xuICAgICAgICAgICAgdmFyIGdyYXBoaWNzVmVyc2lvbjpzdHJpbmcgPSBCQUJZTE9OLlNjZW5lTWFuYWdlci5HZXRXZWJHTFZlcnNpb25TdHJpbmcodGhpcy5zY2VuZSk7XG4gICAgICAgICAgICBCQUJZTE9OLlV0aWxpdGllcy5QcmludFRvU2NyZWVuKGdyYXBoaWNzVmVyc2lvbiwgcHJpbnRDb2xvcik7XG4gICAgICAgIH1cblxuICAgICAgICBwcm90ZWN0ZWQgZGVzdHJveSgpIDp2b2lkIHtcbiAgICAgICAgICAgIC8vdGhpcy5zY3JlZW4gPSBudWxsO1xuICAgICAgICAgICAgLy90aGlzLnRvZ2dsZSA9IG51bGw7XG4gICAgICAgICAgICAvL3RoaXMuc2lnbmluID0gbnVsbDtcbiAgICAgICAgICAgIC8vdGhpcy5yZWxvYWQgPSBudWxsO1xuICAgICAgICAgICAgLy90aGlzLm1vdXNlID0gbnVsbDtcbiAgICAgICAgICAgIC8vdGhpcy5kZWJ1ZyA9IG51bGw7XG4gICAgICAgIH1cbiAgICB9XG59IiwibW9kdWxlIFBST0pFQ1Qge1xuICAgIC8qKlxuICAgICAqIEJhYnlsb24gU2NyaXB0IENvbXBvbmVudFxuICAgICAqIEBjbGFzcyBTb2Z0Ym9keU1lc2hcbiAgICAgKi9cbiAgICBleHBvcnQgY2xhc3MgU29mdGJvZHlNZXNoIGV4dGVuZHMgQkFCWUxPTi5TY3JpcHRDb21wb25lbnQge1xuICAgICAgICBwdWJsaWMgY29uc3RydWN0b3IodHJhbnNmb3JtOiBCQUJZTE9OLlRyYW5zZm9ybU5vZGUsIHNjZW5lOiBCQUJZTE9OLlNjZW5lLCBwcm9wZXJ0aWVzOiBhbnkgPSB7fSkge1xuICAgICAgICAgICAgc3VwZXIodHJhbnNmb3JtLCBzY2VuZSwgcHJvcGVydGllcyk7XG5cbiAgICAgICAgICAgIGNvbnN0IHR5cGU6bnVtYmVyID0gdGhpcy5nZXRFZGl0b3JQcm9wZXJ0eShcInR5cGVcIiwgMCk7XG4gICAgICAgICAgICBjb25zdCBvcHRpb25zID0ge1xuICAgICAgICAgICAgICAgIG1hc3M6IHRoaXMuZ2V0RWRpdG9yUHJvcGVydHkoXCJtYXNzXCIsIDEpLFxuICAgICAgICAgICAgICAgIGZyaWN0aW9uOiB0aGlzLmdldEVkaXRvclByb3BlcnR5KFwiZnJpY3Rpb25cIiwgMC4zKSxcbiAgICAgICAgICAgICAgICByZXN0aXR1dGlvbjogdGhpcy5nZXRFZGl0b3JQcm9wZXJ0eShcInJlc3RpdHV0aW9uXCIsIDAuMyksXG4gICAgICAgICAgICAgICAgcHJlc3N1cmU6IHRoaXMuZ2V0RWRpdG9yUHJvcGVydHkoXCJwcmVzc3VyZVwiLCAyMDApLFxuICAgICAgICAgICAgICAgIHZlbG9jaXR5SXRlcmF0aW9uczogdGhpcy5nZXRFZGl0b3JQcm9wZXJ0eShcInZlbG9jaXR5SXRlcmF0aW9uc1wiLCAyMCksIFxuICAgICAgICAgICAgICAgIHBvc2l0aW9uSXRlcmF0aW9uczogdGhpcy5nZXRFZGl0b3JQcm9wZXJ0eShcInBvc2l0aW9uSXRlcmF0aW9uc1wiLCAyMCksXG4gICAgICAgICAgICAgICAgc3RpZmZuZXNzOiB0aGlzLmdldEVkaXRvclByb3BlcnR5KFwic3RpZmZuZXNzXCIsIDEpLFxuICAgICAgICAgICAgICAgIG1hcmdpbjogdGhpcy5nZXRFZGl0b3JQcm9wZXJ0eShcIm1hcmdpblwiLCAwLjApLFxuICAgICAgICAgICAgICAgIGRhbXBpbmc6IHRoaXMuZ2V0RWRpdG9yUHJvcGVydHkoXCJkYW1waW5nXCIsIDAuMDEpXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGNvbnN0IG1lc2g6QkFCWUxPTi5NZXNoID0gdGhpcy5nZXRUcmFuc2Zvcm1NZXNoKCk7XG4gICAgICAgICAgICBjb25zdCBmb3JjZVNoYXJlZFZlcnRpY2VzOmJvb2xlYW4gPSB0aGlzLmdldEVkaXRvclByb3BlcnR5KFwiZm9yY2VTaGFyZWRWZXJ0aWNlc1wiLCB0cnVlKTtcbiAgICAgICAgICAgIGlmIChmb3JjZVNoYXJlZFZlcnRpY2VzID09PSB0cnVlKSBtZXNoLmZvcmNlU2hhcmVkVmVydGljZXMoKTtcblxuICAgICAgICAgICAgY29uc3QgaW5jcmVhc2VWZXJ0aWNlczpudW1iZXIgPSB0aGlzLmdldEVkaXRvclByb3BlcnR5KFwiaW5jcmVhc2VWZXJ0aWNlc1wiLCA0KTtcbiAgICAgICAgICAgIGlmIChpbmNyZWFzZVZlcnRpY2VzID4gMCkgbWVzaC5pbmNyZWFzZVZlcnRpY2VzKGluY3JlYXNlVmVydGljZXMpO1xuICAgICAgICBcbiAgICAgICAgICAgIGxldCBpbXBvc3RvcjpCQUJZTE9OLlBoeXNpY3NJbXBvc3RvciA9IG51bGw7XG4gICAgICAgICAgICBpZiAodHlwZSA9PT0gMCkgeyAvLyBNZXNoXG4gICAgICAgICAgICAgICAgaW1wb3N0b3IgPSBuZXcgQkFCWUxPTi5QaHlzaWNzSW1wb3N0b3IobWVzaCwgQkFCWUxPTi5QaHlzaWNzSW1wb3N0b3IuU29mdGJvZHlJbXBvc3Rvciwgb3B0aW9ucywgdGhpcy5zY2VuZSk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHR5cGUgPT09IDEpIHsgLy8gQ2xvdGhcbiAgICAgICAgICAgICAgICBpbXBvc3RvciA9IG5ldyBCQUJZTE9OLlBoeXNpY3NJbXBvc3RvcihtZXNoLCBCQUJZTE9OLlBoeXNpY3NJbXBvc3Rvci5DbG90aEltcG9zdG9yLCBvcHRpb25zLCB0aGlzLnNjZW5lKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAodHlwZSA9PT0gMikgIHsgLy8gUm9wZVxuICAgICAgICAgICAgICAgIGltcG9zdG9yID0gbmV3IEJBQllMT04uUGh5c2ljc0ltcG9zdG9yKG1lc2gsIEJBQllMT04uUGh5c2ljc0ltcG9zdG9yLlJvcGVJbXBvc3Rvciwgb3B0aW9ucywgdGhpcy5zY2VuZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoaW1wb3N0b3IgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIGltcG9zdG9yLmV4ZWN1dGVOYXRpdmVGdW5jdGlvbigod29yZDphbnksIGJvZHk6YW55KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIC8vIFRPRE86IFNldHVwIE5hdGl2ZSBTb2Z0Ym9keSBQaHlzaWNzIE9wdGlvbnNcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHByb3RlY3RlZCBzdGFydCgpOiB2b2lkIHtcbiAgICAgICAgICAgIC8vIFN0YXJ0IHJlbmRlciBsb29wIGZ1bmN0aW9uXG4gICAgICAgIH1cblxuICAgICAgICBwcm90ZWN0ZWQgdXBkYXRlKCk6IHZvaWQge1xuICAgICAgICAgICAgLy8gVXBkYXRlIHJlbmRlciBsb29wIGZ1bmN0aW9uXG4gICAgICAgIH1cblxuICAgICAgICBwcm90ZWN0ZWQgYWZ0ZXIoKTogdm9pZCB7XG4gICAgICAgICAgICAvLyBBZnRlciByZW5kZXIgbG9vcCBmdW5jdGlvblxuICAgICAgICB9XG5cbiAgICAgICAgcHJvdGVjdGVkIGRlc3Ryb3koKTogdm9pZCB7XG4gICAgICAgICAgICAvLyBEZXN0cm95IGNvbXBvbmVudCBmdW5jdGlvblxuICAgICAgICB9XG4gICAgfVxufSIsIm1vZHVsZSBQUk9KRUNUIHtcbiAgICAvKipcbiAgICAgKiBCYWJ5bG9uIFNjcmlwdCBDb21wb25lbnRcbiAgICAgKiBAY2xhc3MgRmlyc3RQZXJzb25Db250cm9sbGVyXG4gICAgICovXG4gICAgZXhwb3J0IGNsYXNzIEZpcnN0UGVyc29uQ29udHJvbGxlciBleHRlbmRzIEJBQllMT04uU2NyaXB0Q29tcG9uZW50IHtcbiAgICAgICAgcHJpdmF0ZSBkZWx0YUZhY3RvcjpudW1iZXIgPSAyLjA7XG4gICAgICAgIHByaXZhdGUgYXR0YWNoQ2FtZXJhOmJvb2xlYW4gPSB0cnVlO1xuICAgICAgICBwcml2YXRlIGNhbWVyYVBpdm90OkJBQllMT04uVHJhbnNmb3JtTm9kZSA9IG51bGw7XG4gICAgICAgIHByaXZhdGUgY2FtZXJhUmlnZ2VyOkJBQllMT04uVHJhbnNmb3JtTm9kZSA9IG51bGw7XG4gICAgICAgIHByaXZhdGUgbW92ZW1lbnRTcGVlZDpudW1iZXIgPSAxLjA7XG4gICAgICAgIHByaXZhdGUganVtcGluZ1ZlbG9jaXR5Om51bWJlciA9IDEwLjA7XG4gICAgICAgIHByaXZhdGUgcGxheWVyTW92ZW1lbnQ6QkFCWUxPTi5WZWN0b3IzID0gQkFCWUxPTi5WZWN0b3IzLlplcm8oKTtcbiAgICAgICAgcHJpdmF0ZSBwbGF5ZXJUdXJuUmF0ZTpudW1iZXIgPSAwLjA7XG4gICAgICAgIHByaXZhdGUgY2FtZXJhUGl0Y2hSYXRlOm51bWJlciA9IDAuMDtcbiAgICAgICAgcHJpdmF0ZSBob3J6U2Vuc2l0aXZpdHk6bnVtYmVyID0gMS4wO1xuICAgICAgICBwcml2YXRlIHZlcnRTZW5zaXRpdml0eTpudW1iZXIgPSAxLjA7XG4gICAgICAgIHByaXZhdGUgbW91c2VTZW5zaXRpdml0eTpudW1iZXIgPSAxLjA7XG4gICAgICAgIHByaXZhdGUgbWluaW11bVBpdGNoQW5nbGU6bnVtYmVyID0gLTYwLjA7XG4gICAgICAgIHByaXZhdGUgbWF4aW11bVBpdGNoQW5nbGU6bnVtYmVyID0gNjAuMDtcbiAgICAgICAgcHJpdmF0ZSBpc0NoYXJhY3Rlckdyb3VuZGVkOmJvb2xlYW4gPSBmYWxzZTtcbiAgICAgICAgcHJpdmF0ZSBpc0NoYXJhY3Rlckp1bXBGcmFtZTpib29sZWFuID0gZmFsc2U7XG4gICAgICAgIHByaXZhdGUgY2FtZXJhRXVsZXJBbmdsZXM6QkFCWUxPTi5WZWN0b3IzID0gQkFCWUxPTi5WZWN0b3IzLlplcm8oKTtcbiAgICAgICAgcHJpdmF0ZSBjaGFyYWN0ZXJDb250cm9sbGVyOkJBQllMT04uQ2hhcmFjdGVyQ29udHJvbGxlciA9IG51bGw7XG5cbiAgICAgICAgcHVibGljIGlzQ2hhcmFjdGVySnVtcGluZygpOmJvb2xlYW4geyByZXR1cm4gZmFsc2U7IC8qIFRPRE86IERldGVybWluZSBJZiBDaGFyYWN0ZXIgSXMgSnVtcGluZyAtID8/PyAqLyB9XG4gICAgICAgIHB1YmxpYyBpc0NoYXJhY3RlckZhbGxpbmcoKTpib29sZWFuIHsgcmV0dXJuIGZhbHNlOyAvKiBUT0RPOiBEZXRlcm1pbmUgSWYgQ2hhcmFjdGVyIElzIEZhbGxpbmcgLSA/Pz8gKi8gfVxuXG4gICAgICAgIHB1YmxpYyBidXR0b25KdW1wOm51bWJlciA9IEJBQllMT04uWGJveDM2MEJ1dHRvbi5BO1xuICAgICAgICBwdWJsaWMga2V5Ym9hcmRKdW1wOm51bWJlciA9IEJBQllMT04uVXNlcklucHV0S2V5LlNwYWNlQmFyO1xuICAgICAgICBwdWJsaWMgcGxheWVyTnVtYmVyOkJBQllMT04uUGxheWVyTnVtYmVyID0gQkFCWUxPTi5QbGF5ZXJOdW1iZXIuT25lO1xuICAgICAgICBwdWJsaWMgcGxheWVyRGVsdGFYOm51bWJlciA9IDAuMDtcbiAgICAgICAgcHVibGljIHBsYXllckRlbHRhWjpudW1iZXIgPSAwLjA7XG4gICAgICAgIHB1YmxpYyBwbGF5ZXJNb3VzZVg6bnVtYmVyID0gMC4wO1xuICAgICAgICBwdWJsaWMgcGxheWVyTW91c2VZOm51bWJlciA9IDAuMDtcbiAgICAgICAgcHVibGljIHBsYXllckV5ZUxldmVsOm51bWJlciA9IDAuNTtcbiAgICAgICAgcHVibGljIGdldENoYXJhY3RlckNvbnRyb2xsZXIoKTpCQUJZTE9OLkNoYXJhY3RlckNvbnRyb2xsZXIgeyByZXR1cm4gdGhpcy5jaGFyYWN0ZXJDb250cm9sbGVyOyB9XG4gICAgICAgIHB1YmxpYyBjb25zdHJ1Y3Rvcih0cmFuc2Zvcm06IEJBQllMT04uVHJhbnNmb3JtTm9kZSwgc2NlbmU6IEJBQllMT04uU2NlbmUsIHByb3BlcnRpZXM6IGFueSA9IHt9KSB7XG4gICAgICAgICAgICBzdXBlcih0cmFuc2Zvcm0sIHNjZW5lLCBwcm9wZXJ0aWVzKTtcbiAgICAgICAgICAgIHRoaXMuYXR0YWNoQ2FtZXJhID0gdGhpcy5nZXRFZGl0b3JQcm9wZXJ0eShcImF0dGFjaENhbWVyYVwiLCB0aGlzLmF0dGFjaENhbWVyYSk7XG4gICAgICAgICAgICB0aGlzLnBsYXllck51bWJlciA9IHRoaXMuZ2V0RWRpdG9yUHJvcGVydHkoXCJwbGF5ZXJOdW1iZXJcIiwgdGhpcy5wbGF5ZXJOdW1iZXIpO1xuICAgICAgICAgICAgdGhpcy5wbGF5ZXJFeWVMZXZlbCA9IHRoaXMuZ2V0RWRpdG9yUHJvcGVydHkoXCJwbGF5ZXJFeWVMZXZlbFwiLCB0aGlzLnBsYXllckV5ZUxldmVsKTtcbiAgICAgICAgICAgIHRoaXMubW92ZW1lbnRTcGVlZCA9IHRoaXMuZ2V0RWRpdG9yUHJvcGVydHkoXCJtb3ZlbWVudFNwZWVkXCIsIHRoaXMubW92ZW1lbnRTcGVlZCk7XG4gICAgICAgICAgICB0aGlzLm1vdXNlU2Vuc2l0aXZpdHkgPSB0aGlzLmdldEVkaXRvclByb3BlcnR5KFwibW91c2VTZW5zaXRpdml0eVwiLCB0aGlzLm1vdXNlU2Vuc2l0aXZpdHkpXG4gICAgICAgICAgICB0aGlzLm1pbmltdW1QaXRjaEFuZ2xlID0gdGhpcy5nZXRFZGl0b3JQcm9wZXJ0eShcIm1pbmltdW1QaXRjaEFuZ2xlXCIsIHRoaXMubWluaW11bVBpdGNoQW5nbGUpO1xuICAgICAgICAgICAgdGhpcy5tYXhpbXVtUGl0Y2hBbmdsZSA9IHRoaXMuZ2V0RWRpdG9yUHJvcGVydHkoXCJtYXhpbXVtUGl0Y2hBbmdsZVwiLCB0aGlzLm1heGltdW1QaXRjaEFuZ2xlKTtcbiAgICAgICAgICAgIHRoaXMudmVydFNlbnNpdGl2aXR5ID0gdGhpcy5nZXRFZGl0b3JQcm9wZXJ0eShcInZlcnRpY2FsU2Vuc2l0aXZpdHlcIiwgdGhpcy52ZXJ0U2Vuc2l0aXZpdHkpO1xuICAgICAgICAgICAgdGhpcy5ob3J6U2Vuc2l0aXZpdHkgPSB0aGlzLmdldEVkaXRvclByb3BlcnR5KFwiaG9yaXpvbnRhbFNlbnNpdGl2aXR5XCIsIHRoaXMuaG9yelNlbnNpdGl2aXR5KVxuICAgICAgICAgICAgdGhpcy5qdW1waW5nVmVsb2NpdHkgPSB0aGlzLmdldEVkaXRvclByb3BlcnR5KFwiaW1wdWxzZUp1bXBWZWxvY2l0eVwiLCB0aGlzLmp1bXBpbmdWZWxvY2l0eSk7XG4gICAgICAgICAgICAvLyBTY2FsZSBNb3VzZSBQb2ludGVyIFNlbnNpdGl2aXR5XG4gICAgICAgICAgICBpZiAodGhpcy5wbGF5ZXJOdW1iZXIgPT0gQkFCWUxPTi5QbGF5ZXJOdW1iZXIuT25lKSB7XG4gICAgICAgICAgICAgICAgQkFCWUxPTi5Vc2VySW5wdXRPcHRpb25zLlBvaW50ZXJBbmd1bGFyU2Vuc2liaWxpdHkgPSAoQkFCWUxPTi5Vc2VySW5wdXRPcHRpb25zLlBvaW50ZXJBbmd1bGFyU2Vuc2liaWxpdHkgKiB0aGlzLm1vdXNlU2Vuc2l0aXZpdHkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcHJvdGVjdGVkIHN0YXJ0KCk6IHZvaWQgeyB0aGlzLnNldHVwRmlyc3RQZXJzb25Db250cm9sbGVyKCk7IH1cbiAgICAgICAgcHJvdGVjdGVkIHVwZGF0ZSgpOiB2b2lkIHsgdGhpcy51cGRhdGVGaXJzdFBlcnNvbkNvbnRyb2xsZXIoKTsgfVxuICAgICAgICBwcm90ZWN0ZWQgZGVzdHJveSgpOiB2b2lkIHsgdGhpcy5kZXN0cm95Rmlyc3RQZXJzb25Db250cm9sbGVyKCk7IH1cblxuICAgICAgICBwcml2YXRlIHNldHVwRmlyc3RQZXJzb25Db250cm9sbGVyKCk6dm9pZCB7XG4gICAgICAgICAgICAvLyBTZXR1cCBDYW1lcmEgQWF0dGFjaG1lbnRzXG4gICAgICAgICAgICB0aGlzLmNhbWVyYVBpdm90ID0gdGhpcy5nZXRDaGlsZFRyYW5zZm9ybShcIlBpdm90XCIpO1xuICAgICAgICAgICAgaWYgKHRoaXMuY2FtZXJhUGl2b3QgPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIHRoaXMuY2FtZXJhUGl2b3QgPSBuZXcgQkFCWUxPTi5UcmFuc2Zvcm1Ob2RlKFwiUGl2b3RcIiwgdGhpcy5zY2VuZSk7XG4gICAgICAgICAgICAgICAgdGhpcy5jYW1lcmFQaXZvdC5zZXRQYXJlbnQodGhpcy50cmFuc2Zvcm0pO1xuICAgICAgICAgICAgICAgIHRoaXMuY2FtZXJhUGl2b3QucG9zaXRpb24gPSBuZXcgQkFCWUxPTi5WZWN0b3IzKDAuMCwgdGhpcy5wbGF5ZXJFeWVMZXZlbCwgMC4wKTsgLy8gTk9URTogUE9TSVRJT04gQ0FNRVJBIEVZRSBMRVZFTCAoVE8gU0VFIEFSTVMpXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBCQUJZTE9OLlV0aWxpdGllcy5WYWxpZGF0ZVRyYW5zZm9ybVF1YXRlcm5pb24odGhpcy5jYW1lcmFQaXZvdCk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vY29uc29sZS5sb2coXCJBdHRhY2ggQ2FtZXJhIEZvcjogXCIgKyB0aGlzLnRyYW5zZm9ybS5uYW1lICsgXCIgLS0+IFwiICsgdGhpcy5hdHRhY2hDYW1lcmEudG9TdHJpbmcoKSk7XG4gICAgICAgICAgICAvL2NvbnNvbGUubG9nKHRoaXMudHJhbnNmb3JtLm1ldGFkYXRhKTtcblxuICAgICAgICAgICAgaWYgKHRoaXMuYXR0YWNoQ2FtZXJhID09PSB0cnVlKSB7XG4gICAgICAgICAgICAgICAgLy8gVE9ETzogQ3JlYXRlIE11bHRpIFBsYXllciBDYW1lcmEgKE5vIEF0dGFjaCBDYW1lcmEpXG4gICAgICAgICAgICAgICAgdGhpcy5jYW1lcmFSaWdnZXIgPSBCQUJZTE9OLlNjZW5lTWFuYWdlci5HZXRUcmFuc2Zvcm1Ob2RlKHRoaXMuc2NlbmUsIFwiTWFpbiBDYW1lcmFcIik7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuY2FtZXJhUmlnZ2VyICE9IG51bGwgJiYgdGhpcy5jYW1lcmFQaXZvdCAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY2FtZXJhUGl2b3QucG9zaXRpb24gPSBuZXcgQkFCWUxPTi5WZWN0b3IzKDAuMCwgdGhpcy5wbGF5ZXJFeWVMZXZlbCwgMC4wKTsgLy8gTk9URTogUE9TSVRJT04gQ0FNRVJBIEVZRSBMRVZFTCAoVE8gU0VFIEFSTVMpXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY2FtZXJhUmlnZ2VyLnNldFBhcmVudCh0aGlzLmNhbWVyYVBpdm90KTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jYW1lcmFSaWdnZXIucG9zaXRpb24gPSBuZXcgQkFCWUxPTi5WZWN0b3IzKDAuMCwgMC4wLCAwLjApO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmNhbWVyYVJpZ2dlci5yb3RhdGlvblF1YXRlcm5pb24gPSBCQUJZTE9OLlF1YXRlcm5pb24uSWRlbnRpdHkoKTtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJGUEM6IEF0dGFjaGVkIG1haW4gY2FtZXJhIHRvIHBsYXllciBjb250cm9sbGVyOiBcIiArIHRoaXMudHJhbnNmb3JtLm5hbWUpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIEJBQllMT04uVG9vbHMuV2FybihcIkZhaWxlZCB0byBsb2NhdGUgY2FtZXJhIG9yIGxvY2FsIHBpdm90IGZvcjogXCIgKyB0aGlzLnRyYW5zZm9ybS5uYW1lKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBTZXR1cCBDaGFyYWN0ZXIgQ29udHJvbGxlclxuICAgICAgICAgICAgdGhpcy5jaGFyYWN0ZXJDb250cm9sbGVyID0gdGhpcy5nZXRDb21wb25lbnQoXCJCQUJZTE9OLkNoYXJhY3RlckNvbnRyb2xsZXJcIik7XG4gICAgICAgICAgICBpZiAodGhpcy5jaGFyYWN0ZXJDb250cm9sbGVyID09IG51bGwpIEJBQllMT04uVG9vbHMuV2FybihcIkZhaWxlZCB0byBsb2NhdGUgY2hhcmFjdGVyIGNvbnRyb2xsZXIgZm9yOiBcIiArIHRoaXMudHJhbnNmb3JtLm5hbWUpO1xuXG4gICAgICAgICAgICAvLyBDaGFyYWN0ZXIgQ29sbGlzaW9uIENvbnRhY3QgKFRFU1QpXG4gICAgICAgICAgICBpZiAodGhpcy5jaGFyYWN0ZXJDb250cm9sbGVyICE9IG51bGwpIHtcblxuICAgICAgICAgICAgICAgIC8vIFRlc3QgU3RhdGljIE9ubHkgQ29sbGlzaW9uc1xuICAgICAgICAgICAgICAgIC8vIHRoaXMuY2hhcmFjdGVyQ29udHJvbGxlci5zZXRDb2xsaXNpb25GaWx0ZXJNYXNrKEJBQllMT04uQ29sbGlzaW9uRmlsdGVycy5TdGF0aWNGaWx0ZXIpO1xuXG4gICAgICAgICAgICAgICAgdGhpcy5jaGFyYWN0ZXJDb250cm9sbGVyLnJlZ2lzdGVyT25Db2xsaXNpb25FbnRlcigobWVzaDpCQUJZTE9OLkFic3RyYWN0TWVzaCk9PntcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgdGFnOnN0cmluZyA9IEJBQllMT04uU2NlbmVNYW5hZ2VyLkdldFRyYW5zZm9ybVRhZyhtZXNoKTtcbiAgICAgICAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhcIlBMQVlFUjogPT09PiBHb3QgQ29sbGlzaW9uIEVudGVyIEV2ZW50OiBcIiArIG1lc2gubmFtZSArIFwiIC0tPiBcIiArIHRhZyk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgdGhpcy5jaGFyYWN0ZXJDb250cm9sbGVyLnJlZ2lzdGVyT25Db2xsaXNpb25TdGF5KChtZXNoOkJBQllMT04uQWJzdHJhY3RNZXNoKT0+e1xuICAgICAgICAgICAgICAgICAgICBjb25zdCB0YWc6c3RyaW5nID0gQkFCWUxPTi5TY2VuZU1hbmFnZXIuR2V0VHJhbnNmb3JtVGFnKG1lc2gpO1xuICAgICAgICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKFwiUExBWUVSOiA9PT0+IEdvdCBDb2xsaXNpb24gU3RheSBFdmVudDogXCIgKyBtZXNoLm5hbWUgKyBcIiAtLT4gXCIgKyB0YWcpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIHRoaXMuY2hhcmFjdGVyQ29udHJvbGxlci5yZWdpc3Rlck9uQ29sbGlzaW9uRXhpdCgobWVzaDpCQUJZTE9OLkFic3RyYWN0TWVzaCk9PntcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgdGFnOnN0cmluZyA9IEJBQllMT04uU2NlbmVNYW5hZ2VyLkdldFRyYW5zZm9ybVRhZyhtZXNoKTtcbiAgICAgICAgICAgICAgICAgICAgLy9jb25zb2xlLndhcm4oXCJQTEFZRVIgPT09PiBERVNUUk9ZOiBDb2xsaXNpb24gRXhpdCBFdmVudDogXCIgKyBtZXNoLm5hbWUgKyBcIiAtLT4gXCIgKyB0YWcpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcHJpdmF0ZSB1cGRhdGVGaXJzdFBlcnNvbkNvbnRyb2xsZXIoKTp2b2lkIHtcbiAgICAgICAgICAgIGNvbnN0IGRlbHRhVGltZTpudW1iZXIgPSB0aGlzLmdldERlbHRhU2Vjb25kcygpO1xuICAgICAgICAgICAgdGhpcy5wbGF5ZXJEZWx0YVggPSBCQUJZTE9OLlNjZW5lTWFuYWdlci5HZXRVc2VySW5wdXQoQkFCWUxPTi5Vc2VySW5wdXRBeGlzLkhvcml6b250YWwsIHRoaXMucGxheWVyTnVtYmVyKTtcbiAgICAgICAgICAgIHRoaXMucGxheWVyRGVsdGFaID0gQkFCWUxPTi5TY2VuZU1hbmFnZXIuR2V0VXNlcklucHV0KEJBQllMT04uVXNlcklucHV0QXhpcy5WZXJ0aWNhbCwgdGhpcy5wbGF5ZXJOdW1iZXIpO1xuICAgICAgICAgICAgdGhpcy5wbGF5ZXJNb3VzZVggPSBCQUJZTE9OLlNjZW5lTWFuYWdlci5HZXRVc2VySW5wdXQoQkFCWUxPTi5Vc2VySW5wdXRBeGlzLk1vdXNlWCwgdGhpcy5wbGF5ZXJOdW1iZXIpO1xuICAgICAgICAgICAgdGhpcy5wbGF5ZXJNb3VzZVkgPSBCQUJZTE9OLlNjZW5lTWFuYWdlci5HZXRVc2VySW5wdXQoQkFCWUxPTi5Vc2VySW5wdXRBeGlzLk1vdXNlWSwgdGhpcy5wbGF5ZXJOdW1iZXIpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBVcGRhdGUgRGVhZCBJbnB1dCBWYWx1ZXNcbiAgICAgICAgICAgIGlmIChNYXRoLmFicyh0aGlzLnBsYXllckRlbHRhWCkgPD0gQkFCWUxPTi5Vc2VySW5wdXRPcHRpb25zLkdhbWVwYWREZWFkU3RpY2tWYWx1ZSkgdGhpcy5wbGF5ZXJEZWx0YVggPSAwO1xuICAgICAgICAgICAgaWYgKE1hdGguYWJzKHRoaXMucGxheWVyRGVsdGFaKSA8PSBCQUJZTE9OLlVzZXJJbnB1dE9wdGlvbnMuR2FtZXBhZERlYWRTdGlja1ZhbHVlKSB0aGlzLnBsYXllckRlbHRhWiA9IDA7XG4gICAgICAgICAgICBpZiAoTWF0aC5hYnModGhpcy5wbGF5ZXJNb3VzZVgpIDw9IEJBQllMT04uVXNlcklucHV0T3B0aW9ucy5HYW1lcGFkRGVhZFN0aWNrVmFsdWUpIHRoaXMucGxheWVyTW91c2VYID0gMDtcbiAgICAgICAgICAgIGlmIChNYXRoLmFicyh0aGlzLnBsYXllck1vdXNlWSkgPD0gQkFCWUxPTi5Vc2VySW5wdXRPcHRpb25zLkdhbWVwYWREZWFkU3RpY2tWYWx1ZSkgdGhpcy5wbGF5ZXJNb3VzZVkgPSAwO1xuXG4gICAgICAgICAgICAvLyBVcGRhdGUgQ2hhcmFjdGVyIE1vdmVtZW50XG4gICAgICAgICAgICBpZiAodGhpcy5jaGFyYWN0ZXJDb250cm9sbGVyICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmlzQ2hhcmFjdGVyR3JvdW5kZWQgPSB0aGlzLmNoYXJhY3RlckNvbnRyb2xsZXIuaXNHcm91bmRlZCgpO1xuICAgICAgICAgICAgICAgIHRoaXMuaXNDaGFyYWN0ZXJKdW1wRnJhbWUgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAvLyBSb3RhdGUgUGxheWVyIExlZnQgQW5kIFJpZ2h0IFdpdGggTW91c2UtWFxuICAgICAgICAgICAgICAgIHRoaXMucGxheWVyVHVyblJhdGUgPSAodGhpcy5wbGF5ZXJNb3VzZVggKiAodGhpcy5ob3J6U2Vuc2l0aXZpdHkgKiB0aGlzLmRlbHRhRmFjdG9yKSk7XG4gICAgICAgICAgICAgICAgdGhpcy5jaGFyYWN0ZXJDb250cm9sbGVyLnR1cm4odGhpcy5wbGF5ZXJUdXJuUmF0ZSk7XG5cbiAgICAgICAgICAgICAgICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbiAgICAgICAgICAgICAgICAvLyBGUEM6IFBpdGNoIENhbWVyYSBQaXZvdCBVcCBBbmQgRG93biBXaXRoIE1vdXNlLVlcbiAgICAgICAgICAgICAgICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbiAgICAgICAgICAgICAgICB0aGlzLmNhbWVyYVBpdGNoUmF0ZSA9ICh0aGlzLnBsYXllck1vdXNlWSAqICh0aGlzLnZlcnRTZW5zaXRpdml0eSAqIHRoaXMuZGVsdGFGYWN0b3IpKTtcbiAgICAgICAgICAgICAgICB0aGlzLmNhbWVyYVBpdm90LnJvdGF0ZShCQUJZTE9OLkF4aXMuWCwgLSh0aGlzLmNhbWVyYVBpdGNoUmF0ZSAqIEJBQllMT04uU3lzdGVtLkRlZzJSYWQpLCBCQUJZTE9OLlNwYWNlLkxPQ0FMKTtcbiAgICAgICAgICAgICAgICBCQUJZTE9OLlV0aWxpdGllcy5Ub0V1bGVyVG9SZWYodGhpcy5jYW1lcmFQaXZvdC5yb3RhdGlvblF1YXRlcm5pb24sIHRoaXMuY2FtZXJhRXVsZXJBbmdsZXMpO1xuICAgICAgICAgICAgICAgIHRoaXMuY2FtZXJhRXVsZXJBbmdsZXMueCA9IEJBQllMT04uU2NhbGFyLkNsYW1wKHRoaXMuY2FtZXJhRXVsZXJBbmdsZXMueCwgdGhpcy5taW5pbXVtUGl0Y2hBbmdsZSwgdGhpcy5tYXhpbXVtUGl0Y2hBbmdsZSk7XG4gICAgICAgICAgICAgICAgQkFCWUxPTi5VdGlsaXRpZXMuRnJvbUV1bGVyVG9SZWYodGhpcy5jYW1lcmFFdWxlckFuZ2xlcy54LCB0aGlzLmNhbWVyYUV1bGVyQW5nbGVzLnksIHRoaXMuY2FtZXJhRXVsZXJBbmdsZXMueiwgdGhpcy5jYW1lcmFQaXZvdC5yb3RhdGlvblF1YXRlcm5pb24pO1xuICAgICAgICAgICAgICAgIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuXG4gICAgICAgICAgICAgICAgLy8gVXBkYXRlIFBsYXllciBJbnB1dCBXaXRoIERlbHRhLVggQW5kIERlbHRhLVpcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5pc0NoYXJhY3Rlckdyb3VuZGVkID09PSB0cnVlKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucGxheWVyTW92ZW1lbnQueCA9IHRoaXMucGxheWVyRGVsdGFYO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnBsYXllck1vdmVtZW50LnkgPSAwLjA7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucGxheWVyTW92ZW1lbnQueiA9IHRoaXMucGxheWVyRGVsdGFaO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmlzQ2hhcmFjdGVySnVtcEZyYW1lID0gKEJBQllMT04uU2NlbmVNYW5hZ2VyLkdldEtleWJvYXJkSW5wdXQodGhpcy5rZXlib2FyZEp1bXApIHx8IEJBQllMT04uU2NlbmVNYW5hZ2VyLkdldEdhbWVwYWRCdXR0b25JbnB1dCh0aGlzLmJ1dHRvbkp1bXApKTtcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIC8vIFRyYW5zZm9ybSBNb3ZlbWVudCBEaXJlY3Rpb24gQW5kIFNjYWxlIFNwZWVkXG4gICAgICAgICAgICAgICAgICAgIEJBQllMT04uVXRpbGl0aWVzLlRyYW5zZm9ybURpcmVjdGlvblRvUmVmKHRoaXMudHJhbnNmb3JtLCB0aGlzLnBsYXllck1vdmVtZW50LCB0aGlzLnBsYXllck1vdmVtZW50KTtcbiAgICAgICAgICAgICAgICAgICAgQkFCWUxPTi5WZWN0b3IzLk5vcm1hbGl6ZVRvUmVmKHRoaXMucGxheWVyTW92ZW1lbnQsIHRoaXMucGxheWVyTW92ZW1lbnQpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnBsYXllck1vdmVtZW50LnNjYWxlSW5QbGFjZSgoQkFCWUxPTi5TeXN0ZW0uV2Fsa2luZ1ZlbG9jaXR5ICogdGhpcy5tb3ZlbWVudFNwZWVkKSAqIGRlbHRhVGltZSk7XG5cbiAgICAgICAgICAgICAgICAgICAgLy8gTW92ZSBQbGF5ZXIgVXNpbmcgUGh5c2ljcyBDaGFyYWN0ZXIgQ29udHJvbGxlclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmNoYXJhY3RlckNvbnRyb2xsZXIubW92ZSh0aGlzLnBsYXllck1vdmVtZW50KTtcblxuICAgICAgICAgICAgICAgICAgICAvLyBKdW1wIFBsYXllciBVc2luZyBQaHlzaWNzIENoYXJhY3RlciBDb250cm9sbGVyXG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLmlzQ2hhcmFjdGVySnVtcEZyYW1lID09PSB0cnVlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNoYXJhY3RlckNvbnRyb2xsZXIuanVtcCh0aGlzLmp1bXBpbmdWZWxvY2l0eSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIHByaXZhdGUgZGVzdHJveUZpcnN0UGVyc29uQ29udHJvbGxlcigpOnZvaWQge1xuICAgICAgICAgICAgdGhpcy5jYW1lcmFQaXZvdCA9IG51bGw7XG4gICAgICAgICAgICB0aGlzLmNhbWVyYVJpZ2dlciA9IG51bGw7XG4gICAgICAgICAgICB0aGlzLmNoYXJhY3RlckNvbnRyb2xsZXIgPSBudWxsO1xuICAgICAgICB9XG4gICAgfVxufSIsIm1vZHVsZSBQUk9KRUNUIHtcbiAgICAvKipcbiAgICAgKiBCYWJ5bG9uIFNjcmlwdCBDb21wb25lbnRcbiAgICAgKiBAY2xhc3MgVGhpcmRQZXJzb25Db250cm9sbGVyXG4gICAgICovXG4gICAgZXhwb3J0IGNsYXNzIFRoaXJkUGVyc29uQ29udHJvbGxlciBleHRlbmRzIEJBQllMT04uU2NyaXB0Q29tcG9uZW50IHtcbiAgICAgICAgcHJpdmF0ZSBkZWx0YUZhY3RvcjpudW1iZXIgPSAyLjA7XG4gICAgICAgIHByaXZhdGUgYXR0YWNoQ2FtZXJhOmJvb2xlYW4gPSB0cnVlO1xuICAgICAgICBwcml2YXRlIGNhbWVyYVBpdm90OkJBQllMT04uVHJhbnNmb3JtTm9kZSA9IG51bGw7XG4gICAgICAgIHByaXZhdGUgY2FtZXJhUmlnZ2VyOkJBQllMT04uVHJhbnNmb3JtTm9kZSA9IG51bGw7XG4gICAgICAgIHByaXZhdGUgbW92ZW1lbnRTcGVlZDpudW1iZXIgPSAxLjA7XG4gICAgICAgIHByaXZhdGUganVtcGluZ1ZlbG9jaXR5Om51bWJlciA9IDEwLjA7XG4gICAgICAgIHByaXZhdGUgcGxheWVyTW92ZW1lbnQ6QkFCWUxPTi5WZWN0b3IzID0gQkFCWUxPTi5WZWN0b3IzLlplcm8oKTtcbiAgICAgICAgcHJpdmF0ZSBwbGF5ZXJUdXJuUmF0ZTpudW1iZXIgPSAwLjA7XG4gICAgICAgIHByaXZhdGUgY2FtZXJhUGl0Y2hSYXRlOm51bWJlciA9IDAuMDtcbiAgICAgICAgcHJpdmF0ZSBob3J6U2Vuc2l0aXZpdHk6bnVtYmVyID0gMS4wO1xuICAgICAgICBwcml2YXRlIHZlcnRTZW5zaXRpdml0eTpudW1iZXIgPSAxLjA7XG4gICAgICAgIHByaXZhdGUgbW91c2VTZW5zaXRpdml0eTpudW1iZXIgPSAxLjA7XG4gICAgICAgIHByaXZhdGUgbWluaW11bVBpdGNoQW5nbGU6bnVtYmVyID0gLTYwLjA7XG4gICAgICAgIHByaXZhdGUgbWF4aW11bVBpdGNoQW5nbGU6bnVtYmVyID0gNjAuMDtcbiAgICAgICAgcHJpdmF0ZSBpc0NoYXJhY3Rlckdyb3VuZGVkOmJvb2xlYW4gPSBmYWxzZTtcbiAgICAgICAgcHJpdmF0ZSBpc0NoYXJhY3Rlckp1bXBGcmFtZTpib29sZWFuID0gZmFsc2U7XG4gICAgICAgIHByaXZhdGUgY2hhcmFjdGVyQ29udHJvbGxlcjpCQUJZTE9OLkNoYXJhY3RlckNvbnRyb2xsZXIgPSBudWxsO1xuXG4gICAgICAgIHB1YmxpYyBidXR0b25KdW1wOm51bWJlciA9IEJBQllMT04uWGJveDM2MEJ1dHRvbi5BO1xuICAgICAgICBwdWJsaWMga2V5Ym9hcmRKdW1wOm51bWJlciA9IEJBQllMT04uVXNlcklucHV0S2V5LlNwYWNlQmFyO1xuICAgICAgICBwdWJsaWMgcGxheWVyTnVtYmVyOkJBQllMT04uUGxheWVyTnVtYmVyID0gQkFCWUxPTi5QbGF5ZXJOdW1iZXIuT25lO1xuICAgICAgICBwdWJsaWMgcGxheWVyRGVsdGFYOm51bWJlciA9IDAuMDtcbiAgICAgICAgcHVibGljIHBsYXllckRlbHRhWjpudW1iZXIgPSAwLjA7XG4gICAgICAgIHB1YmxpYyBwbGF5ZXJNb3VzZVg6bnVtYmVyID0gMC4wO1xuICAgICAgICBwdWJsaWMgcGxheWVyTW91c2VZOm51bWJlciA9IDAuMDtcbiAgICAgICAgcHVibGljIGdldENoYXJhY3RlckNvbnRyb2xsZXIoKTpCQUJZTE9OLkNoYXJhY3RlckNvbnRyb2xsZXIgeyByZXR1cm4gdGhpcy5jaGFyYWN0ZXJDb250cm9sbGVyOyB9XG4gICAgICAgIHB1YmxpYyBjb25zdHJ1Y3Rvcih0cmFuc2Zvcm06IEJBQllMT04uVHJhbnNmb3JtTm9kZSwgc2NlbmU6IEJBQllMT04uU2NlbmUsIHByb3BlcnRpZXM6IGFueSA9IHt9KSB7XG4gICAgICAgICAgICBzdXBlcih0cmFuc2Zvcm0sIHNjZW5lLCBwcm9wZXJ0aWVzKTtcbiAgICAgICAgICAgIHRoaXMuYXR0YWNoQ2FtZXJhID0gdGhpcy5nZXRFZGl0b3JQcm9wZXJ0eShcImF0dGFjaENhbWVyYVwiLCB0aGlzLmF0dGFjaENhbWVyYSk7XG4gICAgICAgICAgICB0aGlzLnBsYXllck51bWJlciA9IHRoaXMuZ2V0RWRpdG9yUHJvcGVydHkoXCJwbGF5ZXJOdW1iZXJcIiwgdGhpcy5wbGF5ZXJOdW1iZXIpXG4gICAgICAgICAgICB0aGlzLm1vdmVtZW50U3BlZWQgPSB0aGlzLmdldEVkaXRvclByb3BlcnR5KFwibW92ZW1lbnRTcGVlZFwiLCB0aGlzLm1vdmVtZW50U3BlZWQpO1xuICAgICAgICAgICAgdGhpcy5tb3VzZVNlbnNpdGl2aXR5ID0gdGhpcy5nZXRFZGl0b3JQcm9wZXJ0eShcIm1vdXNlU2Vuc2l0aXZpdHlcIiwgdGhpcy5tb3VzZVNlbnNpdGl2aXR5KVxuICAgICAgICAgICAgdGhpcy5taW5pbXVtUGl0Y2hBbmdsZSA9IHRoaXMuZ2V0RWRpdG9yUHJvcGVydHkoXCJtaW5pbXVtUGl0Y2hBbmdsZVwiLCB0aGlzLm1pbmltdW1QaXRjaEFuZ2xlKTtcbiAgICAgICAgICAgIHRoaXMubWF4aW11bVBpdGNoQW5nbGUgPSB0aGlzLmdldEVkaXRvclByb3BlcnR5KFwibWF4aW11bVBpdGNoQW5nbGVcIiwgdGhpcy5tYXhpbXVtUGl0Y2hBbmdsZSk7XG4gICAgICAgICAgICB0aGlzLnZlcnRTZW5zaXRpdml0eSA9IHRoaXMuZ2V0RWRpdG9yUHJvcGVydHkoXCJ2ZXJ0aWNhbFNlbnNpdGl2aXR5XCIsIHRoaXMudmVydFNlbnNpdGl2aXR5KTtcbiAgICAgICAgICAgIHRoaXMuaG9yelNlbnNpdGl2aXR5ID0gdGhpcy5nZXRFZGl0b3JQcm9wZXJ0eShcImhvcml6b250YWxTZW5zaXRpdml0eVwiLCB0aGlzLmhvcnpTZW5zaXRpdml0eSlcbiAgICAgICAgICAgIHRoaXMuanVtcGluZ1ZlbG9jaXR5ID0gdGhpcy5nZXRFZGl0b3JQcm9wZXJ0eShcImltcHVsc2VKdW1wVmVsb2NpdHlcIiwgdGhpcy5qdW1waW5nVmVsb2NpdHkpO1xuICAgICAgICAgICAgLy8gU2NhbGUgTW91c2UgUG9pbnRlciBTZW5zaXRpdml0eVxuICAgICAgICAgICAgaWYgKHRoaXMucGxheWVyTnVtYmVyID09IEJBQllMT04uUGxheWVyTnVtYmVyLk9uZSkge1xuICAgICAgICAgICAgICAgIEJBQllMT04uVXNlcklucHV0T3B0aW9ucy5Qb2ludGVyQW5ndWxhclNlbnNpYmlsaXR5ID0gKEJBQllMT04uVXNlcklucHV0T3B0aW9ucy5Qb2ludGVyQW5ndWxhclNlbnNpYmlsaXR5ICogdGhpcy5tb3VzZVNlbnNpdGl2aXR5KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHByb3RlY3RlZCBzdGFydCgpOiB2b2lkIHsgdGhpcy5zZXR1cFRoaXJkUGVyc29uQ29udHJvbGxlcigpOyB9XG4gICAgICAgIHByb3RlY3RlZCB1cGRhdGUoKTogdm9pZCB7IHRoaXMudXBkYXRlVGhpcmRQZXJzb25Db250cm9sbGVyKCk7IH1cbiAgICAgICAgcHJvdGVjdGVkIGRlc3Ryb3koKTogdm9pZCB7IHRoaXMuZGVzdHJveVRoaXJkUGVyc29uQ29udHJvbGxlcigpOyB9XG5cbiAgICAgICAgcHJpdmF0ZSBzZXR1cFRoaXJkUGVyc29uQ29udHJvbGxlcigpOiB2b2lkIHtcbiAgICAgICAgICAgIC8vIFNldHVwIENhbWVyYSBBdHRhY2htZW50c1xuICAgICAgICAgICAgdGhpcy5jYW1lcmFQaXZvdCA9IHRoaXMuZ2V0Q2hpbGRUcmFuc2Zvcm0oXCJQaXZvdFwiKTtcbiAgICAgICAgICAgIGlmICh0aGlzLmNhbWVyYVBpdm90ID09IG51bGwpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmNhbWVyYVBpdm90ID0gbmV3IEJBQllMT04uVHJhbnNmb3JtTm9kZShcIlBpdm90XCIsIHRoaXMuc2NlbmUpO1xuICAgICAgICAgICAgICAgIHRoaXMuY2FtZXJhUGl2b3Quc2V0UGFyZW50KHRoaXMudHJhbnNmb3JtKTtcbiAgICAgICAgICAgICAgICB0aGlzLmNhbWVyYVBpdm90LnBvc2l0aW9uID0gbmV3IEJBQllMT04uVmVjdG9yMygwLjAsIDEuODUsIDAuMCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBCQUJZTE9OLlV0aWxpdGllcy5WYWxpZGF0ZVRyYW5zZm9ybVF1YXRlcm5pb24odGhpcy5jYW1lcmFQaXZvdCk7XG4gICAgICAgICAgICBpZiAodGhpcy5hdHRhY2hDYW1lcmEgPT09IHRydWUpIHtcbiAgICAgICAgICAgICAgICAvLyBUT0RPOiBDcmVhdGUgTXVsdGkgUGxheWVyIENhbWVyYSAoTm8gQXR0YWNoIENhbWVyYSlcbiAgICAgICAgICAgICAgICB0aGlzLmNhbWVyYVJpZ2dlciA9IEJBQllMT04uU2NlbmVNYW5hZ2VyLkdldFRyYW5zZm9ybU5vZGUodGhpcy5zY2VuZSwgXCJNYWluIENhbWVyYVwiKTtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5jYW1lcmFSaWdnZXIgIT0gbnVsbCAmJiB0aGlzLmNhbWVyYVBpdm90ICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jYW1lcmFSaWdnZXIuc2V0UGFyZW50KHRoaXMuY2FtZXJhUGl2b3QpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmNhbWVyYVJpZ2dlci5wb3NpdGlvbiA9IG5ldyBCQUJZTE9OLlZlY3RvcjMoMC4wLCAwLjAsIC00LjUpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmNhbWVyYVJpZ2dlci5yb3RhdGlvblF1YXRlcm5pb24gPSBCQUJZTE9OLlF1YXRlcm5pb24uSWRlbnRpdHkoKTtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJUUEM6IEF0dGFjaGVkIG1haW4gY2FtZXJhIHRvIHBsYXllciBjb250cm9sbGVyOiBcIiArIHRoaXMudHJhbnNmb3JtLm5hbWUpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIEJBQllMT04uVG9vbHMuV2FybihcIkZhaWxlZCB0byBsb2NhdGUgY2FtZXJhIG9yIGxvY2FsIHBpdm90IGZvcjogXCIgKyB0aGlzLnRyYW5zZm9ybS5uYW1lKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBTZXR1cCBDaGFyYWN0ZXIgQ29udHJvbGxlclxuICAgICAgICAgICAgdGhpcy5jaGFyYWN0ZXJDb250cm9sbGVyID0gdGhpcy5nZXRDb21wb25lbnQoXCJCQUJZTE9OLkNoYXJhY3RlckNvbnRyb2xsZXJcIik7XG4gICAgICAgICAgICBpZiAodGhpcy5jaGFyYWN0ZXJDb250cm9sbGVyID09IG51bGwpIEJBQllMT04uVG9vbHMuV2FybihcIkZhaWxlZCB0byBsb2NhdGUgY2hhcmFjdGVyIGNvbnRyb2xsZXIgZm9yOiBcIiArIHRoaXMudHJhbnNmb3JtLm5hbWUpO1xuICAgICAgICB9XG5cbiAgICAgICAgcHJpdmF0ZSB1cGRhdGVUaGlyZFBlcnNvbkNvbnRyb2xsZXIoKTogdm9pZCB7XG4gICAgICAgICAgICB0aGlzLnBsYXllckRlbHRhWCA9IEJBQllMT04uU2NlbmVNYW5hZ2VyLkdldFVzZXJJbnB1dChCQUJZTE9OLlVzZXJJbnB1dEF4aXMuSG9yaXpvbnRhbCwgdGhpcy5wbGF5ZXJOdW1iZXIpO1xuICAgICAgICAgICAgdGhpcy5wbGF5ZXJEZWx0YVogPSBCQUJZTE9OLlNjZW5lTWFuYWdlci5HZXRVc2VySW5wdXQoQkFCWUxPTi5Vc2VySW5wdXRBeGlzLlZlcnRpY2FsLCB0aGlzLnBsYXllck51bWJlcik7XG4gICAgICAgICAgICB0aGlzLnBsYXllck1vdXNlWCA9IEJBQllMT04uU2NlbmVNYW5hZ2VyLkdldFVzZXJJbnB1dChCQUJZTE9OLlVzZXJJbnB1dEF4aXMuTW91c2VYLCB0aGlzLnBsYXllck51bWJlcik7XG4gICAgICAgICAgICB0aGlzLnBsYXllck1vdXNlWSA9IEJBQllMT04uU2NlbmVNYW5hZ2VyLkdldFVzZXJJbnB1dChCQUJZTE9OLlVzZXJJbnB1dEF4aXMuTW91c2VZLCB0aGlzLnBsYXllck51bWJlcik7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIFVwZGF0ZSBEZWFkIElucHV0IFZhbHVlc1xuICAgICAgICAgICAgaWYgKE1hdGguYWJzKHRoaXMucGxheWVyRGVsdGFYKSA8PSBCQUJZTE9OLlVzZXJJbnB1dE9wdGlvbnMuR2FtZXBhZERlYWRTdGlja1ZhbHVlKSB0aGlzLnBsYXllckRlbHRhWCA9IDA7XG4gICAgICAgICAgICBpZiAoTWF0aC5hYnModGhpcy5wbGF5ZXJEZWx0YVopIDw9IEJBQllMT04uVXNlcklucHV0T3B0aW9ucy5HYW1lcGFkRGVhZFN0aWNrVmFsdWUpIHRoaXMucGxheWVyRGVsdGFaID0gMDtcbiAgICAgICAgICAgIGlmIChNYXRoLmFicyh0aGlzLnBsYXllck1vdXNlWCkgPD0gQkFCWUxPTi5Vc2VySW5wdXRPcHRpb25zLkdhbWVwYWREZWFkU3RpY2tWYWx1ZSkgdGhpcy5wbGF5ZXJNb3VzZVggPSAwO1xuICAgICAgICAgICAgaWYgKE1hdGguYWJzKHRoaXMucGxheWVyTW91c2VZKSA8PSBCQUJZTE9OLlVzZXJJbnB1dE9wdGlvbnMuR2FtZXBhZERlYWRTdGlja1ZhbHVlKSB0aGlzLnBsYXllck1vdXNlWSA9IDA7XG5cbiAgICAgICAgICAgIC8vIFVwZGF0ZSBDaGFyYWN0ZXIgTW92ZW1lbnRcbiAgICAgICAgICAgIGlmICh0aGlzLmNoYXJhY3RlckNvbnRyb2xsZXIgIT0gbnVsbCkge1xuXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBwcml2YXRlIGRlc3Ryb3lUaGlyZFBlcnNvbkNvbnRyb2xsZXIoKTogdm9pZCB7XG4gICAgICAgICAgICB0aGlzLmNhbWVyYVBpdm90ID0gbnVsbDtcbiAgICAgICAgICAgIHRoaXMuY2FtZXJhUmlnZ2VyID0gbnVsbDtcbiAgICAgICAgICAgIHRoaXMuY2hhcmFjdGVyQ29udHJvbGxlciA9IG51bGw7XG4gICAgICAgIH1cbiAgICB9XG59IiwibW9kdWxlIFBST0pFQ1Qge1xuICAgIC8qKlxuICAgICAqIEJhYnlsb24gU2NyaXB0IENvbXBvbmVudFxuICAgICAqIEBjbGFzcyBCb3VuZGluZ0JveFNraW5zXG4gICAgICovXG4gICAgY2xhc3MgQm91bmRpbmdCb3hTa2lucyBleHRlbmRzIEJBQllMT04uU2NyaXB0Q29tcG9uZW50IHtcbiAgICAgICAgcHJpdmF0ZSBza2luczpCQUJZTE9OLkFic3RyYWN0TWVzaFtdID0gbnVsbDtcbiAgICAgICAgcHJpdmF0ZSBzeW5jQm91bmRpbmdJbmZvOmJvb2xlYW4gPSB0cnVlO1xuICAgICAgICBwcml2YXRlIHVwZGF0ZUV2ZXJ5RnJhbWU6Ym9vbGVhbiA9IGZhbHNlO1xuICAgICAgICBwcml2YXRlIHBvc2l0aW9uVGhyZWFzaG9sZDpudW1iZXIgPSAwLjE7XG4gICAgICAgIHByaXZhdGUgbGFzdFBvc2l0aW9uOkJBQllMT04uVmVjdG9yMyA9IEJBQllMT04uVmVjdG9yMy5aZXJvKCk7XG4gICAgICAgIHB1YmxpYyBjb25zdHJ1Y3Rvcih0cmFuc2Zvcm06IEJBQllMT04uVHJhbnNmb3JtTm9kZSwgc2NlbmU6IEJBQllMT04uU2NlbmUsIHByb3BlcnRpZXM6IGFueSA9IHt9KSB7XG4gICAgICAgICAgICBzdXBlcih0cmFuc2Zvcm0sIHNjZW5lLCBwcm9wZXJ0aWVzKTtcbiAgICAgICAgICAgIC8vIC4uXG4gICAgICAgICAgICAvLyBWYWxpZGF0ZSBTa2luIEJvdW5kaW5nIEJveCBJbmZvXG4gICAgICAgICAgICAvLyAuLlxuICAgICAgICAgICAgdGhpcy5zeW5jQm91bmRpbmdJbmZvID0gdGhpcy5nZXRFZGl0b3JQcm9wZXJ0eShcInN5bmNCb3VuZGluZ0luZm9cIiwgdGhpcy5zeW5jQm91bmRpbmdJbmZvKTtcbiAgICAgICAgICAgIHRoaXMudXBkYXRlRXZlcnlGcmFtZSA9IHRoaXMuZ2V0RWRpdG9yUHJvcGVydHkoXCJ1cGRhdGVFdmVyeUZyYW1lXCIsIHRoaXMudXBkYXRlRXZlcnlGcmFtZSk7XG4gICAgICAgICAgICB0aGlzLnBvc2l0aW9uVGhyZWFzaG9sZCA9IHRoaXMuZ2V0RWRpdG9yUHJvcGVydHkoXCJwb3NpdGlvblRocmVhc2hvbGRcIiwgdGhpcy5wb3NpdGlvblRocmVhc2hvbGQpO1xuICAgICAgICAgICAgaWYgKHRoaXMuc3luY0JvdW5kaW5nSW5mbyA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgICAgIGxldCBza2lubmVkOmJvb2xlYW4gPSBmYWxzZTtcbiAgICAgICAgICAgICAgICBjb25zdCBtZXRhZGF0YTphbnkgPSB0aGlzLmdldE1ldGFkYXRhKCk7XG4gICAgICAgICAgICAgICAgaWYgKG1ldGFkYXRhICE9IG51bGwgJiYgbWV0YWRhdGEuc2tpbiA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgICAgICAgICBza2lubmVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhpcy5za2lucyA9IHRoaXMudHJhbnNmb3JtLmdldENoaWxkTWVzaGVzKGZhbHNlLCAobm9kZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBkYXRhOmFueSA9IEJBQllMT04uU2NlbmVNYW5hZ2VyLkZpbmRTY2VuZU1ldGFkYXRhKG5vZGUgYXMgQkFCWUxPTi5UcmFuc2Zvcm1Ob2RlKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICgoZGF0YSAhPSBudWxsICYmIGRhdGEuc2tpbiA9PT0gdHJ1ZSkgfHwgKHNraW5uZWQgPT09IHRydWUgJiYgbm9kZS5uYW1lLmluZGV4T2YoXCJfcHJpbWl0aXZlXCIpID49IDApKTsgLy8gVE9ETzogUmVtb3ZlIFByaW1pdGl2ZXNcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBpZiAoc2tpbm5lZCA9PT0gdHJ1ZSAmJiB0aGlzLnRyYW5zZm9ybSBpbnN0YW5jZW9mIEJBQllMT04uQWJzdHJhY3RNZXNoKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLnNraW5zID09IG51bGwpIHRoaXMuc2tpbnMgPSBbXTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5za2lucy51bnNoaWZ0KHRoaXMudHJhbnNmb3JtIGFzIEJBQllMT04uQWJzdHJhY3RNZXNoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBwcm90ZWN0ZWQgc3RhcnQoKTogdm9pZCB7XG4gICAgICAgICAgICB0aGlzLmNoZWNrU2tpbnMoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHByb3RlY3RlZCB1cGRhdGUoKTogdm9pZCB7XG4gICAgICAgICAgICBpZiAodGhpcy51cGRhdGVFdmVyeUZyYW1lID09PSB0cnVlKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5jaGVja1NraW5zKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBwcm90ZWN0ZWQgYWZ0ZXIoKTogdm9pZCB7XG4gICAgICAgIH1cblxuICAgICAgICBwcm90ZWN0ZWQgZGVzdHJveSgpOiB2b2lkIHtcbiAgICAgICAgICAgIHRoaXMuc2tpbnMgPSBudWxsO1xuICAgICAgICB9XG5cbiAgICAgICAgcHJpdmF0ZSBjaGVja1NraW5zKCk6IHZvaWQge1xuICAgICAgICAgICAgLy8gU3RhcnQgcmVuZGVyIGxvb3AgZnVuY3Rpb25cbiAgICAgICAgICAgIGlmICh0aGlzLnNraW5zICE9IG51bGwgJiYgdGhpcy5za2lucy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMudHJhbnNmb3JtLnBvc2l0aW9uLnggIT09IHRoaXMubGFzdFBvc2l0aW9uLnggfHwgdGhpcy50cmFuc2Zvcm0ucG9zaXRpb24ueSAhPT0gdGhpcy5sYXN0UG9zaXRpb24ueSB8fCB0aGlzLnRyYW5zZm9ybS5wb3NpdGlvbi56ICE9PSB0aGlzLmxhc3RQb3NpdGlvbi56KSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChNYXRoLmFicyh0aGlzLnRyYW5zZm9ybS5wb3NpdGlvbi54IC0gdGhpcy5sYXN0UG9zaXRpb24ueCkgPj0gdGhpcy5wb3NpdGlvblRocmVhc2hvbGQgfHwgTWF0aC5hYnModGhpcy50cmFuc2Zvcm0ucG9zaXRpb24ueSAtIHRoaXMubGFzdFBvc2l0aW9uLnkpID49IHRoaXMucG9zaXRpb25UaHJlYXNob2xkIHx8IE1hdGguYWJzKHRoaXMudHJhbnNmb3JtLnBvc2l0aW9uLnogLSB0aGlzLmxhc3RQb3NpdGlvbi56KSA+PSB0aGlzLnBvc2l0aW9uVGhyZWFzaG9sZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5za2lucy5mb3JFYWNoKChza2luOkJBQllMT04uQWJzdHJhY3RNZXNoKSA9PiB7IHNraW4ucmVmcmVzaEJvdW5kaW5nSW5mbyh0cnVlKTsgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKFwiPT09PiBQb3NpdGlvbiBDaGFuZ2UgVXBkYXRlOiBcIiArIHRoaXMudHJhbnNmb3JtLm5hbWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZyh0aGlzLnRyYW5zZm9ybS5wb3NpdGlvbi50b1N0cmluZygpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubGFzdFBvc2l0aW9uLnggPSB0aGlzLnRyYW5zZm9ybS5wb3NpdGlvbi54O1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5sYXN0UG9zaXRpb24ueSA9IHRoaXMudHJhbnNmb3JtLnBvc2l0aW9uLnk7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmxhc3RQb3NpdGlvbi56ID0gdGhpcy50cmFuc2Zvcm0ucG9zaXRpb24uejtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn0iLCJtb2R1bGUgUFJPSkVDVCB7XG4gICAgLyoqXG4gICAgICogQmFieWxvbiBza2lkbWFyayBzZWN0aW9uIGNsYXNzIChOYXRpdmUgQnVsbGV0IFBoeXNpY3MgMi44MilcbiAgICAgKiBAY2xhc3MgU2tpZG1hcmtTZWN0aW9uXG4gICAgICovXG4gICAgZXhwb3J0IGNsYXNzIFNraWRtYXJrU2VjdGlvbiB7XG4gICAgICAgIHB1YmxpYyBQb3M6QkFCWUxPTi5WZWN0b3IzID0gQkFCWUxPTi5WZWN0b3IzLlplcm8oKTtcbiAgICAgICAgcHVibGljIE5vcm1hbDpCQUJZTE9OLlZlY3RvcjMgPSBCQUJZTE9OLlZlY3RvcjMuWmVybygpO1xuICAgICAgICBwdWJsaWMgVGFuZ2VudDpCQUJZTE9OLlZlY3RvcjQgPSBCQUJZTE9OLlZlY3RvcjQuWmVybygpO1xuICAgICAgICBwdWJsaWMgUG9zbDpCQUJZTE9OLlZlY3RvcjMgPSBCQUJZTE9OLlZlY3RvcjMuWmVybygpO1xuICAgICAgICBwdWJsaWMgUG9zcjpCQUJZTE9OLlZlY3RvcjMgPSBCQUJZTE9OLlZlY3RvcjMuWmVybygpO1xuICAgICAgICBwdWJsaWMgSW50ZW5zaXR5Om51bWJlciA9IDAuMDtcbiAgICAgICAgcHVibGljIExhc3RJbmRleDpudW1iZXIgPSAtMTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQmFieWxvbiBTY3JpcHQgQ29tcG9uZW50XG4gICAgICogQGNsYXNzIFNraWRtYXJrTWFuYWdlclxuICAgICAqL1xuICAgIGV4cG9ydCBjbGFzcyBTa2lkbWFya01hbmFnZXIgZXh0ZW5kcyBCQUJZTE9OLlNjcmlwdENvbXBvbmVudCB7XG4gICAgICAgIHByaXZhdGUgc3RhdGljIE1BWF9NQVJLUzpudW1iZXIgPSA0MDk2OyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIE1heCBudW1iZXIgb2YgbWFya3MgdG90YWwgZm9yIGV2ZXJ5b25lIHRvZ2V0aGVyXG4gICAgICAgIHByaXZhdGUgc3RhdGljIEdST1VORF9PRkZTRVQ6bnVtYmVyID0gMC4wMTsgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIERpc3RhbmNlIGFib3ZlIHN1cmZhY2UgaW4gbWV0cmVzXG4gICAgICAgIHByaXZhdGUgc3RhdGljIFZFTE9DSVRZX1NDQUxFOm51bWJlciA9IDAuMDI7ICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIFZlbG9jaXR5IG9mZnNldCBzY2FsZSBmYWN0b3JcbiAgICAgICAgcHJpdmF0ZSBzdGF0aWMgR1BVX1RSSUFOR0xFUzpib29sZWFuID0gdHJ1ZTsgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gR1BVIHF1YWQgdHJpYW5nbGUgaW5kaWNlcyBvbmx5XG4gICAgICAgIHByaXZhdGUgc3RhdGljIE1BUktfQ09MT1I6QkFCWUxPTi5Db2xvcjMgPSBCQUJZTE9OLkNvbG9yMy5CbGFjaygpOyAgICAgIC8vIFNraWRtYXJrIENvbG9yXG4gICAgICAgIHByaXZhdGUgc3RhdGljIE1BUktfV0lEVEg6bnVtYmVyID0gMC4zOyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIFdpZHRoIG9mIHRoZSBTa2lkbWFya3MuIFNob3VsZCBtYXRjaCB0aGUgd2lkdGggb2YgdGhlIHdoZWVsc1xuICAgICAgICBwcml2YXRlIHN0YXRpYyBNSU5fRElTVEFOQ0U6bnVtYmVyID0gMC4xOyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBEaXN0YW5jZSBiZXR3ZWVuIHNraWQgdGV4dHVyZSBzZWN0aW9ucyBpbiBtZXRyZXMuIEJpZ2dlciA9IGJldHRlciBwZXJmb3JtYW5jZSwgbGVzcyBzbW9vdGhcbiAgICAgICAgcHJpdmF0ZSBzdGF0aWMgTUlOX1NRUl9ESVNUQU5DRSA9IChTa2lkbWFya01hbmFnZXIuTUlOX0RJU1RBTkNFICogU2tpZG1hcmtNYW5hZ2VyLk1JTl9ESVNUQU5DRSk7XG4gICAgICAgIHByaXZhdGUgc3RhdGljIFRFWFRVUkVfTUFSS1M6YW55ID0gbnVsbDtcblxuICAgICAgICBwcml2YXRlIHN0YXRpYyBTa2lkQnVmZmVyUG9zaXRpb25zOkZsb2F0MzJBcnJheSA9IG51bGw7XG4gICAgICAgIHByaXZhdGUgc3RhdGljIFNraWRCdWZmZXJOb3JtYWxzOkZsb2F0MzJBcnJheSA9IG51bGw7XG4gICAgICAgIHByaXZhdGUgc3RhdGljIFNraWRCdWZmZXJUYW5nZW50czpGbG9hdDMyQXJyYXkgPSBudWxsO1xuICAgICAgICBwcml2YXRlIHN0YXRpYyBTa2lkQnVmZmVyQ29sb3JzOkZsb2F0MzJBcnJheSA9IG51bGw7XG4gICAgICAgIHByaXZhdGUgc3RhdGljIFNraWRCdWZmZXJVdnM6RmxvYXQzMkFycmF5ID0gbnVsbDtcbiAgICAgICAgcHJpdmF0ZSBzdGF0aWMgU2tpZEJ1ZmZlckluZGljZXM6SW50MzJBcnJheSA9IG51bGw7XG4gICAgICAgIHByaXZhdGUgc3RhdGljIFNraWRtYXJrU2VjdGlvbnM6U2tpZG1hcmtTZWN0aW9uW10gPSBudWxsO1xuICAgICAgICBwcml2YXRlIHN0YXRpYyBTa2lkbWFya0luZGV4Om51bWJlciA9IDA7XG4gICAgICAgIHByaXZhdGUgc3RhdGljIFNraWRtYXJrTWVzaDpCQUJZTE9OLk1lc2ggPSBudWxsO1xuICAgICAgICBwcml2YXRlIHN0YXRpYyBTa2lkbWFya1VwZGF0ZWQ6Ym9vbGVhbiA9IGZhbHNlO1xuXG4gICAgICAgIHByaXZhdGUgc3RhdGljIFRlbXBWZWN0b3IzX1BPUzpCQUJZTE9OLlZlY3RvcjMgPSBuZXcgQkFCWUxPTi5WZWN0b3IzKDAsMCwwKTtcbiAgICAgICAgcHJpdmF0ZSBzdGF0aWMgVGVtcFZlY3RvcjNfRElSOkJBQllMT04uVmVjdG9yMyA9IG5ldyBCQUJZTE9OLlZlY3RvcjMoMCwwLDApO1xuICAgICAgICBwcml2YXRlIHN0YXRpYyBUZW1wVmVjdG9yM19YRElSOkJBQllMT04uVmVjdG9yMyA9IG5ldyBCQUJZTE9OLlZlY3RvcjMoMCwwLDApO1xuICAgICAgICBwcml2YXRlIHN0YXRpYyBUZW1wVmVjdG9yM19TRElSOkJBQllMT04uVmVjdG9yMyA9IG5ldyBCQUJZTE9OLlZlY3RvcjMoMCwwLDApO1xuICAgICAgICBwdWJsaWMgY29uc3RydWN0b3IodHJhbnNmb3JtOiBCQUJZTE9OLlRyYW5zZm9ybU5vZGUsIHNjZW5lOiBCQUJZTE9OLlNjZW5lLCBwcm9wZXJ0aWVzOiBhbnkgPSB7fSkge1xuICAgICAgICAgICAgc3VwZXIodHJhbnNmb3JtLCBzY2VuZSwgcHJvcGVydGllcyk7XG4gICAgICAgICAgICBTa2lkbWFya01hbmFnZXIuTUFYX01BUktTID0gdGhpcy5nZXRFZGl0b3JQcm9wZXJ0eShcIm1heFNlY3Rpb25zXCIsIFNraWRtYXJrTWFuYWdlci5NQVhfTUFSS1MpO1xuICAgICAgICAgICAgU2tpZG1hcmtNYW5hZ2VyLk1BUktfQ09MT1IgPSBCQUJZTE9OLlV0aWxpdGllcy5QYXJzZUNvbG9yMyh0aGlzLmdldEVkaXRvclByb3BlcnR5KFwidGV4dHVyZUNvbG9yXCIsIFNraWRtYXJrTWFuYWdlci5NQVJLX0NPTE9SKSk7XG4gICAgICAgICAgICBTa2lkbWFya01hbmFnZXIuTUFSS19XSURUSCA9IHRoaXMuZ2V0RWRpdG9yUHJvcGVydHkoXCJ0ZXh0dXJlV2lkdGhcIiwgU2tpZG1hcmtNYW5hZ2VyLk1BUktfV0lEVEgpO1xuICAgICAgICAgICAgU2tpZG1hcmtNYW5hZ2VyLkdST1VORF9PRkZTRVQgPSB0aGlzLmdldEVkaXRvclByb3BlcnR5KFwiZ3JvdW5kT2Zmc2V0XCIsIFNraWRtYXJrTWFuYWdlci5HUk9VTkRfT0ZGU0VUKTtcbiAgICAgICAgICAgIFNraWRtYXJrTWFuYWdlci5WRUxPQ0lUWV9TQ0FMRSA9IHRoaXMuZ2V0RWRpdG9yUHJvcGVydHkoXCJ2ZWxvY2l0eVNjYWxlXCIsIFNraWRtYXJrTWFuYWdlci5WRUxPQ0lUWV9TQ0FMRSk7XG4gICAgICAgICAgICBTa2lkbWFya01hbmFnZXIuR1BVX1RSSUFOR0xFUyA9IHRoaXMuZ2V0RWRpdG9yUHJvcGVydHkoXCJncHVRdWFkSW5kaWNlc1wiLCBTa2lkbWFya01hbmFnZXIuR1BVX1RSSUFOR0xFUyk7XG4gICAgICAgICAgICBTa2lkbWFya01hbmFnZXIuVEVYVFVSRV9NQVJLUyA9IHRoaXMuZ2V0RWRpdG9yUHJvcGVydHkoXCJ0ZXh0dXJlTWFya3NcIiwgU2tpZG1hcmtNYW5hZ2VyLlRFWFRVUkVfTUFSS1MpO1xuICAgICAgICAgICAgU2tpZG1hcmtNYW5hZ2VyLk1JTl9ESVNUQU5DRSA9IHRoaXMuZ2V0RWRpdG9yUHJvcGVydHkoXCJ0ZXh0dXJlRGlzdGFuY2VcIiwgU2tpZG1hcmtNYW5hZ2VyLk1JTl9ESVNUQU5DRSk7XG4gICAgICAgICAgICBTa2lkbWFya01hbmFnZXIuTUlOX1NRUl9ESVNUQU5DRSA9IChTa2lkbWFya01hbmFnZXIuTUlOX0RJU1RBTkNFICogU2tpZG1hcmtNYW5hZ2VyLk1JTl9ESVNUQU5DRSk7XG4gICAgICAgIH1cblxuICAgICAgICBwcm90ZWN0ZWQgc3RhcnQoKTogdm9pZCB7IFNraWRtYXJrTWFuYWdlci5DcmVhdGVTa2lkbWFya01hbmFnZXIodGhpcy5zY2VuZSk7IH1cbiAgICAgICAgcHJvdGVjdGVkIHVwZGF0ZSgpOiB2b2lkIHsgU2tpZG1hcmtNYW5hZ2VyLlVwZGF0ZVNraWRtYXJrTWFuYWdlcigpOyB9XG5cbiAgICAgICAgcHVibGljIHN0YXRpYyBHZXRWZWxvY2l0eVNjYWxlKCk6bnVtYmVyIHsgcmV0dXJuIFNraWRtYXJrTWFuYWdlci5WRUxPQ0lUWV9TQ0FMRTsgfVxuXG4gICAgICAgIHB1YmxpYyBzdGF0aWMgQWRkU2tpZG1hcmtTZWdtZW50KHBvczpCQUJZTE9OLlZlY3RvcjMsIG5vcm1hbDpCQUJZTE9OLlZlY3RvcjMsIGludGVuc2l0eTpudW1iZXIsIGxhc3RJbmRleDpudW1iZXIpOkJBQllMT04uTnVsbGFibGU8bnVtYmVyPiB7XG4gICAgICAgICAgICBpZiAoU2tpZG1hcmtNYW5hZ2VyLlNraWRtYXJrTWVzaCA9PSBudWxsKSByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgIFNraWRtYXJrTWFuYWdlci5UZW1wVmVjdG9yM19QT1Muc2V0KDAsMCwwKTtcbiAgICAgICAgICAgIFNraWRtYXJrTWFuYWdlci5UZW1wVmVjdG9yM19ESVIuc2V0KDAsMCwwKTtcbiAgICAgICAgICAgIFNraWRtYXJrTWFuYWdlci5UZW1wVmVjdG9yM19YRElSLnNldCgwLDAsMCk7XG4gICAgICAgICAgICBTa2lkbWFya01hbmFnZXIuVGVtcFZlY3RvcjNfU0RJUi5zZXQoMCwwLDApO1xuICAgICAgICAgICAgLy8gLi5cbiAgICAgICAgICAgIGlmIChpbnRlbnNpdHkgPiAxLjApIGludGVuc2l0eSA9IDEuMDtcbiAgICAgICAgICAgIGVsc2UgaWYgKGludGVuc2l0eSA8IDAuMCkgcmV0dXJuIC0xLjA7XG4gICAgICAgICAgICAvLyAuLlxuICAgICAgICAgICAgaWYgKGxhc3RJbmRleCA+IDApIHtcbiAgICAgICAgICAgICAgICBwb3Muc3VidHJhY3RUb1JlZihTa2lkbWFya01hbmFnZXIuU2tpZG1hcmtTZWN0aW9uc1tsYXN0SW5kZXhdLlBvcywgU2tpZG1hcmtNYW5hZ2VyLlRlbXBWZWN0b3IzX1BPUyk7XG4gICAgICAgICAgICAgICAgY29uc3Qgc3FyRGlzdGFuY2U6bnVtYmVyID0gU2tpZG1hcmtNYW5hZ2VyLlRlbXBWZWN0b3IzX1BPUy5sZW5ndGhTcXVhcmVkKCk7XG4gICAgICAgICAgICAgICAgaWYgKHNxckRpc3RhbmNlIDwgU2tpZG1hcmtNYW5hZ2VyLk1JTl9TUVJfRElTVEFOQ0UpIHJldHVybiBsYXN0SW5kZXg7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyAuLlxuICAgICAgICAgICAgY29uc3QgY3VyU2VjdGlvbjpTa2lkbWFya1NlY3Rpb24gPSBTa2lkbWFya01hbmFnZXIuU2tpZG1hcmtTZWN0aW9uc1tTa2lkbWFya01hbmFnZXIuU2tpZG1hcmtJbmRleF07XG4gICAgICAgICAgICBub3JtYWwuc2NhbGVUb1JlZihTa2lkbWFya01hbmFnZXIuR1JPVU5EX09GRlNFVCwgU2tpZG1hcmtNYW5hZ2VyLlRlbXBWZWN0b3IzX1BPUyk7XG4gICAgICAgICAgICBwb3MuYWRkVG9SZWYoU2tpZG1hcmtNYW5hZ2VyLlRlbXBWZWN0b3IzX1BPUywgY3VyU2VjdGlvbi5Qb3MpO1xuICAgICAgICAgICAgY3VyU2VjdGlvbi5Ob3JtYWwuY29weUZyb20obm9ybWFsKTtcbiAgICAgICAgICAgIGN1clNlY3Rpb24uSW50ZW5zaXR5ID0gaW50ZW5zaXR5O1xuICAgICAgICAgICAgY3VyU2VjdGlvbi5MYXN0SW5kZXggPSBsYXN0SW5kZXg7XG4gICAgICAgICAgICAvLyAuLlxuICAgICAgICAgICAgaWYgKGxhc3RJbmRleCAhPSAtMSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGxhc3RTZWN0aW9uOlNraWRtYXJrU2VjdGlvbiA9IFNraWRtYXJrTWFuYWdlci5Ta2lkbWFya1NlY3Rpb25zW2xhc3RJbmRleF07XG4gICAgICAgICAgICAgICAgY3VyU2VjdGlvbi5Qb3Muc3VidHJhY3RUb1JlZihsYXN0U2VjdGlvbi5Qb3MsIFNraWRtYXJrTWFuYWdlci5UZW1wVmVjdG9yM19ESVIpO1xuICAgICAgICAgICAgICAgIEJBQllMT04uVmVjdG9yMy5Dcm9zc1RvUmVmKFNraWRtYXJrTWFuYWdlci5UZW1wVmVjdG9yM19ESVIsIG5vcm1hbCwgU2tpZG1hcmtNYW5hZ2VyLlRlbXBWZWN0b3IzX1hESVIpO1xuICAgICAgICAgICAgICAgIFNraWRtYXJrTWFuYWdlci5UZW1wVmVjdG9yM19YRElSLm5vcm1hbGl6ZVRvUmVmKFNraWRtYXJrTWFuYWdlci5UZW1wVmVjdG9yM19YRElSKTtcbiAgICAgICAgICAgICAgICAvLyAuLlxuICAgICAgICAgICAgICAgIFNraWRtYXJrTWFuYWdlci5UZW1wVmVjdG9yM19YRElSLnNjYWxlVG9SZWYoU2tpZG1hcmtNYW5hZ2VyLk1BUktfV0lEVEggKiAwLjUsIFNraWRtYXJrTWFuYWdlci5UZW1wVmVjdG9yM19TRElSKVxuICAgICAgICAgICAgICAgIGN1clNlY3Rpb24uUG9zLmFkZFRvUmVmKFNraWRtYXJrTWFuYWdlci5UZW1wVmVjdG9yM19TRElSLCBjdXJTZWN0aW9uLlBvc2wpO1xuICAgICAgICAgICAgICAgIGN1clNlY3Rpb24uUG9zLnN1YnRyYWN0VG9SZWYoU2tpZG1hcmtNYW5hZ2VyLlRlbXBWZWN0b3IzX1NESVIsIGN1clNlY3Rpb24uUG9zcik7XG4gICAgICAgICAgICAgICAgY3VyU2VjdGlvbi5UYW5nZW50LnNldChTa2lkbWFya01hbmFnZXIuVGVtcFZlY3RvcjNfWERJUi54LCBTa2lkbWFya01hbmFnZXIuVGVtcFZlY3RvcjNfWERJUi55LCBTa2lkbWFya01hbmFnZXIuVGVtcFZlY3RvcjNfWERJUi56LCAxKTtcbiAgICAgICAgICAgICAgICAvLyAuLlxuICAgICAgICAgICAgICAgIGlmIChsYXN0U2VjdGlvbi5MYXN0SW5kZXggPT09IC0xKSB7XG4gICAgICAgICAgICAgICAgICAgIGN1clNlY3Rpb24uUG9zLmFkZFRvUmVmKFNraWRtYXJrTWFuYWdlci5UZW1wVmVjdG9yM19TRElSLCBsYXN0U2VjdGlvbi5Qb3NsKTtcbiAgICAgICAgICAgICAgICAgICAgY3VyU2VjdGlvbi5Qb3Muc3VidHJhY3RUb1JlZihTa2lkbWFya01hbmFnZXIuVGVtcFZlY3RvcjNfU0RJUiwgbGFzdFNlY3Rpb24uUG9zcik7XG4gICAgICAgICAgICAgICAgICAgIGxhc3RTZWN0aW9uLlRhbmdlbnQuY29weUZyb20oY3VyU2VjdGlvbi5UYW5nZW50KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyAuLlxuICAgICAgICAgICAgU2tpZG1hcmtNYW5hZ2VyLkFkZFNraWRtYXJrVmVydGV4RGF0YSgpO1xuICAgICAgICAgICAgY29uc3QgY3VySW5kZXg6bnVtYmVyID0gU2tpZG1hcmtNYW5hZ2VyLlNraWRtYXJrSW5kZXg7XG4gICAgICAgICAgICBTa2lkbWFya01hbmFnZXIuU2tpZG1hcmtJbmRleCA9ICsrU2tpZG1hcmtNYW5hZ2VyLlNraWRtYXJrSW5kZXggJSBTa2lkbWFya01hbmFnZXIuTUFYX01BUktTO1xuICAgICAgICAgICAgcmV0dXJuIGN1ckluZGV4O1xuICAgICAgICB9XG4gICAgICAgIHByaXZhdGUgc3RhdGljIENyZWF0ZVNraWRtYXJrTWFuYWdlcihzY2VuZTpCQUJZTE9OLlNjZW5lKTp2b2lkIHtcbiAgICAgICAgICAgIGlmIChTa2lkbWFya01hbmFnZXIuU2tpZG1hcmtNZXNoID09IG51bGwpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBza2lkbWFya01hdGVyaWFsOkJBQllMT04uU3RhbmRhcmRNYXRlcmlhbCA9IG5ldyBCQUJZTE9OLlN0YW5kYXJkTWF0ZXJpYWwoXCJTa2lkbWFya01hdGVyaWFsXCIsIHNjZW5lKTtcbiAgICAgICAgICAgICAgICBza2lkbWFya01hdGVyaWFsLmJhY2tGYWNlQ3VsbGluZyA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIHNraWRtYXJrTWF0ZXJpYWwuZGlzYWJsZUxpZ2h0aW5nID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICBza2lkbWFya01hdGVyaWFsLmVtaXNzaXZlQ29sb3IgPSBTa2lkbWFya01hbmFnZXIuTUFSS19DT0xPUjtcbiAgICAgICAgICAgICAgICBza2lkbWFya01hdGVyaWFsLmRpZmZ1c2VDb2xvciA9IFNraWRtYXJrTWFuYWdlci5NQVJLX0NPTE9SO1xuICAgICAgICAgICAgICAgIHNraWRtYXJrTWF0ZXJpYWwuZGlmZnVzZVRleHR1cmUgPSBCQUJZTE9OLlV0aWxpdGllcy5QYXJzZVRleHR1cmUoU2tpZG1hcmtNYW5hZ2VyLlRFWFRVUkVfTUFSS1MsIHNjZW5lKTtcbiAgICAgICAgICAgICAgICBpZiAoc2tpZG1hcmtNYXRlcmlhbC5kaWZmdXNlVGV4dHVyZSAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIHNraWRtYXJrTWF0ZXJpYWwuZGlmZnVzZVRleHR1cmUuaGFzQWxwaGEgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICBza2lkbWFya01hdGVyaWFsLnVzZUFscGhhRnJvbURpZmZ1c2VUZXh0dXJlID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgc2tpZG1hcmtNYXRlcmlhbC5mcmVlemUoKTtcbiAgICAgICAgICAgICAgICBTa2lkbWFya01hbmFnZXIuU2tpZG1hcmtNZXNoID0gbmV3IEJBQllMT04uTWVzaChcIlNraWRtYXJrTWVzaFwiLCBzY2VuZSk7XG4gICAgICAgICAgICAgICAgU2tpZG1hcmtNYW5hZ2VyLlNraWRtYXJrTWVzaC5tYXRlcmlhbCA9IHNraWRtYXJrTWF0ZXJpYWw7XG4gICAgICAgICAgICAgICAgU2tpZG1hcmtNYW5hZ2VyLlNraWRtYXJrTWVzaC5hbHdheXNTZWxlY3RBc0FjdGl2ZU1lc2ggPSB0cnVlO1xuICAgICAgICAgICAgICAgIFNraWRtYXJrTWFuYWdlci5Ta2lkbWFya01lc2guZG9Ob3RTeW5jQm91bmRpbmdJbmZvID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICBTa2lkbWFya01hbmFnZXIuU2tpZG1hcmtNZXNoLnJlY2VpdmVTaGFkb3dzID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgU2tpZG1hcmtNYW5hZ2VyLlNraWRtYXJrTWVzaC5jaGVja0NvbGxpc2lvbnMgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICBTa2lkbWFya01hbmFnZXIuU2tpZG1hcmtNZXNoLnVzZVZlcnRleENvbG9ycyA9IHRydWU7XG4gICAgICAgICAgICAgICAgU2tpZG1hcmtNYW5hZ2VyLlNraWRtYXJrTWVzaC5oYXNWZXJ0ZXhBbHBoYSA9IHRydWU7XG4gICAgICAgICAgICAgICAgU2tpZG1hcmtNYW5hZ2VyLlNraWRtYXJrTWVzaC5pc1BpY2thYmxlID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgLy8gLi5cbiAgICAgICAgICAgICAgICAvLyBTZXR1cCBTa2lkbWFyayBTZWN0aW9uIFByb3BlcnRpZXNcbiAgICAgICAgICAgICAgICAvLyAuLlxuICAgICAgICAgICAgICAgIFNraWRtYXJrTWFuYWdlci5Ta2lkbWFya1NlY3Rpb25zID0gbmV3IEFycmF5PFNraWRtYXJrU2VjdGlvbj4oU2tpZG1hcmtNYW5hZ2VyLk1BWF9NQVJLUyk7XG4gICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBTa2lkbWFya01hbmFnZXIuU2tpZG1hcmtTZWN0aW9ucy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICBTa2lkbWFya01hbmFnZXIuU2tpZG1hcmtTZWN0aW9uc1tpXSA9IG5ldyBTa2lkbWFya1NlY3Rpb24oKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy8gLi5cbiAgICAgICAgICAgICAgICAvLyBTZXR1cCBSYXcgTWVzaCBWZXJ0ZXggQnVmZmVyIERhdGFcbiAgICAgICAgICAgICAgICAvLyAuLlxuICAgICAgICAgICAgICAgIFNraWRtYXJrTWFuYWdlci5Ta2lkQnVmZmVyUG9zaXRpb25zID0gbmV3IEZsb2F0MzJBcnJheShTa2lkbWFya01hbmFnZXIuTUFYX01BUktTICogNCAqIDMpO1xuICAgICAgICAgICAgICAgIFNraWRtYXJrTWFuYWdlci5Ta2lkQnVmZmVyTm9ybWFscyA9IG5ldyBGbG9hdDMyQXJyYXkoU2tpZG1hcmtNYW5hZ2VyLk1BWF9NQVJLUyAqIDQgKiAzKTtcbiAgICAgICAgICAgICAgICBTa2lkbWFya01hbmFnZXIuU2tpZEJ1ZmZlclRhbmdlbnRzID0gbmV3IEZsb2F0MzJBcnJheShTa2lkbWFya01hbmFnZXIuTUFYX01BUktTICogNCAqIDQpO1xuICAgICAgICAgICAgICAgIFNraWRtYXJrTWFuYWdlci5Ta2lkQnVmZmVyQ29sb3JzID0gbmV3IEZsb2F0MzJBcnJheShTa2lkbWFya01hbmFnZXIuTUFYX01BUktTICogNCAqIDQpO1xuICAgICAgICAgICAgICAgIFNraWRtYXJrTWFuYWdlci5Ta2lkQnVmZmVyVXZzID0gbmV3IEZsb2F0MzJBcnJheShTa2lkbWFya01hbmFnZXIuTUFYX01BUktTICogNCAqIDIpO1xuICAgICAgICAgICAgICAgIFNraWRtYXJrTWFuYWdlci5Ta2lkQnVmZmVySW5kaWNlcyA9IG5ldyBJbnQzMkFycmF5KFNraWRtYXJrTWFuYWdlci5NQVhfTUFSS1MgKiA2KTtcbiAgICAgICAgICAgICAgICAvLyAuLlxuICAgICAgICAgICAgICAgIC8vIEFwcGx5IFJhdyBWZXJ0ZXggQnVmZmVyIERhdGEgVG8gTWVzaFxuICAgICAgICAgICAgICAgIC8vIC4uXG4gICAgICAgICAgICAgICAgY29uc3QgdmVydGV4RGF0YSA9IG5ldyBCQUJZTE9OLlZlcnRleERhdGEoKTtcbiAgICAgICAgICAgICAgICB2ZXJ0ZXhEYXRhLnBvc2l0aW9ucyA9IFNraWRtYXJrTWFuYWdlci5Ta2lkQnVmZmVyUG9zaXRpb25zO1xuICAgICAgICAgICAgICAgIHZlcnRleERhdGEubm9ybWFscyA9IFNraWRtYXJrTWFuYWdlci5Ta2lkQnVmZmVyTm9ybWFscztcbiAgICAgICAgICAgICAgICB2ZXJ0ZXhEYXRhLnRhbmdlbnRzID0gU2tpZG1hcmtNYW5hZ2VyLlNraWRCdWZmZXJUYW5nZW50cztcbiAgICAgICAgICAgICAgICB2ZXJ0ZXhEYXRhLmNvbG9ycyA9IFNraWRtYXJrTWFuYWdlci5Ta2lkQnVmZmVyQ29sb3JzO1xuICAgICAgICAgICAgICAgIHZlcnRleERhdGEudXZzID0gU2tpZG1hcmtNYW5hZ2VyLlNraWRCdWZmZXJVdnM7ICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgdmVydGV4RGF0YS5pbmRpY2VzID0gU2tpZG1hcmtNYW5hZ2VyLlNraWRCdWZmZXJJbmRpY2VzO1xuICAgICAgICAgICAgICAgIHZlcnRleERhdGEuYXBwbHlUb01lc2goU2tpZG1hcmtNYW5hZ2VyLlNraWRtYXJrTWVzaCwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgU2tpZG1hcmtNYW5hZ2VyLlNraWRtYXJrTWVzaC5mcmVlemVXb3JsZE1hdHJpeCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHByaXZhdGUgc3RhdGljIEFkZFNraWRtYXJrVmVydGV4RGF0YSgpOnZvaWQge1xuICAgICAgICAgICAgY29uc3QgY3VycjpTa2lkbWFya1NlY3Rpb24gPSBTa2lkbWFya01hbmFnZXIuU2tpZG1hcmtTZWN0aW9uc1tTa2lkbWFya01hbmFnZXIuU2tpZG1hcmtJbmRleF07XG4gICAgICAgICAgICBpZiAoY3Vyci5MYXN0SW5kZXggPT09IC0xKSByZXR1cm47XG4gICAgICAgICAgICBjb25zdCBsYXN0OlNraWRtYXJrU2VjdGlvbiA9IFNraWRtYXJrTWFuYWdlci5Ta2lkbWFya1NlY3Rpb25zW2N1cnIuTGFzdEluZGV4XTtcbiAgICAgICAgICAgIFNraWRtYXJrTWFuYWdlci5Ta2lkbWFya1VwZGF0ZWQgPSB0cnVlO1xuICAgICAgICAgICAgLy8gLi5cbiAgICAgICAgICAgIC8vIFVwZGF0ZSBQb3NpdGlvbiBCdWZmZXJzIERpcmVjdGx5XG4gICAgICAgICAgICAvLyAuLlxuICAgICAgICAgICAgbGV0IGluZGV4Om51bWJlciA9IFNraWRtYXJrTWFuYWdlci5Ta2lkbWFya0luZGV4ICogNCArIDA7XG4gICAgICAgICAgICBTa2lkbWFya01hbmFnZXIuU2tpZEJ1ZmZlclBvc2l0aW9uc1tpbmRleCAqIDNdID0gbGFzdC5Qb3NsLng7XG4gICAgICAgICAgICBTa2lkbWFya01hbmFnZXIuU2tpZEJ1ZmZlclBvc2l0aW9uc1soaW5kZXggKiAzKSArIDFdID0gbGFzdC5Qb3NsLnk7XG4gICAgICAgICAgICBTa2lkbWFya01hbmFnZXIuU2tpZEJ1ZmZlclBvc2l0aW9uc1soaW5kZXggKiAzKSArIDJdID0gbGFzdC5Qb3NsLno7XG4gICAgICAgICAgICBpbmRleCA9IFNraWRtYXJrTWFuYWdlci5Ta2lkbWFya0luZGV4ICogNCArIDE7XG4gICAgICAgICAgICBTa2lkbWFya01hbmFnZXIuU2tpZEJ1ZmZlclBvc2l0aW9uc1tpbmRleCAqIDNdID0gbGFzdC5Qb3NyLng7XG4gICAgICAgICAgICBTa2lkbWFya01hbmFnZXIuU2tpZEJ1ZmZlclBvc2l0aW9uc1soaW5kZXggKiAzKSArIDFdID0gbGFzdC5Qb3NyLnk7XG4gICAgICAgICAgICBTa2lkbWFya01hbmFnZXIuU2tpZEJ1ZmZlclBvc2l0aW9uc1soaW5kZXggKiAzKSArIDJdID0gbGFzdC5Qb3NyLno7XG4gICAgICAgICAgICBpbmRleCA9IFNraWRtYXJrTWFuYWdlci5Ta2lkbWFya0luZGV4ICogNCArIDI7XG4gICAgICAgICAgICBTa2lkbWFya01hbmFnZXIuU2tpZEJ1ZmZlclBvc2l0aW9uc1tpbmRleCAqIDNdID0gY3Vyci5Qb3NsLng7XG4gICAgICAgICAgICBTa2lkbWFya01hbmFnZXIuU2tpZEJ1ZmZlclBvc2l0aW9uc1soaW5kZXggKiAzKSArIDFdID0gY3Vyci5Qb3NsLnk7XG4gICAgICAgICAgICBTa2lkbWFya01hbmFnZXIuU2tpZEJ1ZmZlclBvc2l0aW9uc1soaW5kZXggKiAzKSArIDJdID0gY3Vyci5Qb3NsLno7XG4gICAgICAgICAgICBpbmRleCA9IFNraWRtYXJrTWFuYWdlci5Ta2lkbWFya0luZGV4ICogNCArIDM7XG4gICAgICAgICAgICBTa2lkbWFya01hbmFnZXIuU2tpZEJ1ZmZlclBvc2l0aW9uc1tpbmRleCAqIDNdID0gY3Vyci5Qb3NyLng7XG4gICAgICAgICAgICBTa2lkbWFya01hbmFnZXIuU2tpZEJ1ZmZlclBvc2l0aW9uc1soaW5kZXggKiAzKSArIDFdID0gY3Vyci5Qb3NyLnk7XG4gICAgICAgICAgICBTa2lkbWFya01hbmFnZXIuU2tpZEJ1ZmZlclBvc2l0aW9uc1soaW5kZXggKiAzKSArIDJdID0gY3Vyci5Qb3NyLno7XG4gICAgICAgICAgICAvLyAuLlxuICAgICAgICAgICAgLy8gVXBkYXRlIE5vcm1hbCBCdWZmZXJzIERpcmVjdGx5XG4gICAgICAgICAgICAvLyAuLlxuICAgICAgICAgICAgaW5kZXggPSBTa2lkbWFya01hbmFnZXIuU2tpZG1hcmtJbmRleCAqIDQgKyAwO1xuICAgICAgICAgICAgU2tpZG1hcmtNYW5hZ2VyLlNraWRCdWZmZXJOb3JtYWxzW2luZGV4ICogM10gPSBsYXN0Lk5vcm1hbC54O1xuICAgICAgICAgICAgU2tpZG1hcmtNYW5hZ2VyLlNraWRCdWZmZXJOb3JtYWxzWyhpbmRleCAqIDMpICsgMV0gPSBsYXN0Lk5vcm1hbC55O1xuICAgICAgICAgICAgU2tpZG1hcmtNYW5hZ2VyLlNraWRCdWZmZXJOb3JtYWxzWyhpbmRleCAqIDMpICsgMl0gPSBsYXN0Lk5vcm1hbC56O1xuICAgICAgICAgICAgaW5kZXggPSBTa2lkbWFya01hbmFnZXIuU2tpZG1hcmtJbmRleCAqIDQgKyAxO1xuICAgICAgICAgICAgU2tpZG1hcmtNYW5hZ2VyLlNraWRCdWZmZXJOb3JtYWxzW2luZGV4ICogM10gPSBsYXN0Lk5vcm1hbC54O1xuICAgICAgICAgICAgU2tpZG1hcmtNYW5hZ2VyLlNraWRCdWZmZXJOb3JtYWxzWyhpbmRleCAqIDMpICsgMV0gPSBsYXN0Lk5vcm1hbC55O1xuICAgICAgICAgICAgU2tpZG1hcmtNYW5hZ2VyLlNraWRCdWZmZXJOb3JtYWxzWyhpbmRleCAqIDMpICsgMl0gPSBsYXN0Lk5vcm1hbC56O1xuICAgICAgICAgICAgaW5kZXggPSBTa2lkbWFya01hbmFnZXIuU2tpZG1hcmtJbmRleCAqIDQgKyAyO1xuICAgICAgICAgICAgU2tpZG1hcmtNYW5hZ2VyLlNraWRCdWZmZXJOb3JtYWxzW2luZGV4ICogM10gPSBjdXJyLk5vcm1hbC54O1xuICAgICAgICAgICAgU2tpZG1hcmtNYW5hZ2VyLlNraWRCdWZmZXJOb3JtYWxzWyhpbmRleCAqIDMpICsgMV0gPSBjdXJyLk5vcm1hbC55O1xuICAgICAgICAgICAgU2tpZG1hcmtNYW5hZ2VyLlNraWRCdWZmZXJOb3JtYWxzWyhpbmRleCAqIDMpICsgMl0gPSBjdXJyLk5vcm1hbC56O1xuICAgICAgICAgICAgaW5kZXggPSBTa2lkbWFya01hbmFnZXIuU2tpZG1hcmtJbmRleCAqIDQgKyAzO1xuICAgICAgICAgICAgU2tpZG1hcmtNYW5hZ2VyLlNraWRCdWZmZXJOb3JtYWxzW2luZGV4ICogM10gPSBjdXJyLk5vcm1hbC54O1xuICAgICAgICAgICAgU2tpZG1hcmtNYW5hZ2VyLlNraWRCdWZmZXJOb3JtYWxzWyhpbmRleCAqIDMpICsgMV0gPSBjdXJyLk5vcm1hbC55O1xuICAgICAgICAgICAgU2tpZG1hcmtNYW5hZ2VyLlNraWRCdWZmZXJOb3JtYWxzWyhpbmRleCAqIDMpICsgMl0gPSBjdXJyLk5vcm1hbC56O1xuICAgICAgICAgICAgLy8gLi5cbiAgICAgICAgICAgIC8vIFVwZGF0ZSBUYW5nZW50IEJ1ZmZlcnMgRGlyZWN0bHlcbiAgICAgICAgICAgIC8vIC4uXG4gICAgICAgICAgICBpbmRleCA9IFNraWRtYXJrTWFuYWdlci5Ta2lkbWFya0luZGV4ICogNCArIDA7XG4gICAgICAgICAgICBTa2lkbWFya01hbmFnZXIuU2tpZEJ1ZmZlclRhbmdlbnRzW2luZGV4ICogNF0gPSBsYXN0LlRhbmdlbnQueDtcbiAgICAgICAgICAgIFNraWRtYXJrTWFuYWdlci5Ta2lkQnVmZmVyVGFuZ2VudHNbKGluZGV4ICogNCkgKyAxXSA9IGxhc3QuVGFuZ2VudC55O1xuICAgICAgICAgICAgU2tpZG1hcmtNYW5hZ2VyLlNraWRCdWZmZXJUYW5nZW50c1soaW5kZXggKiA0KSArIDJdID0gbGFzdC5UYW5nZW50Lno7XG4gICAgICAgICAgICBTa2lkbWFya01hbmFnZXIuU2tpZEJ1ZmZlclRhbmdlbnRzWyhpbmRleCAqIDQpICsgM10gPSBsYXN0LlRhbmdlbnQudztcbiAgICAgICAgICAgIGluZGV4ID0gU2tpZG1hcmtNYW5hZ2VyLlNraWRtYXJrSW5kZXggKiA0ICsgMTtcbiAgICAgICAgICAgIFNraWRtYXJrTWFuYWdlci5Ta2lkQnVmZmVyVGFuZ2VudHNbaW5kZXggKiA0XSA9IGxhc3QuVGFuZ2VudC54O1xuICAgICAgICAgICAgU2tpZG1hcmtNYW5hZ2VyLlNraWRCdWZmZXJUYW5nZW50c1soaW5kZXggKiA0KSArIDFdID0gbGFzdC5UYW5nZW50Lnk7XG4gICAgICAgICAgICBTa2lkbWFya01hbmFnZXIuU2tpZEJ1ZmZlclRhbmdlbnRzWyhpbmRleCAqIDQpICsgMl0gPSBsYXN0LlRhbmdlbnQuejtcbiAgICAgICAgICAgIFNraWRtYXJrTWFuYWdlci5Ta2lkQnVmZmVyVGFuZ2VudHNbKGluZGV4ICogNCkgKyAzXSA9IGxhc3QuVGFuZ2VudC53O1xuICAgICAgICAgICAgaW5kZXggPSBTa2lkbWFya01hbmFnZXIuU2tpZG1hcmtJbmRleCAqIDQgKyAyO1xuICAgICAgICAgICAgU2tpZG1hcmtNYW5hZ2VyLlNraWRCdWZmZXJUYW5nZW50c1tpbmRleCAqIDRdID0gY3Vyci5UYW5nZW50Lng7XG4gICAgICAgICAgICBTa2lkbWFya01hbmFnZXIuU2tpZEJ1ZmZlclRhbmdlbnRzWyhpbmRleCAqIDQpICsgMV0gPSBjdXJyLlRhbmdlbnQueTtcbiAgICAgICAgICAgIFNraWRtYXJrTWFuYWdlci5Ta2lkQnVmZmVyVGFuZ2VudHNbKGluZGV4ICogNCkgKyAyXSA9IGN1cnIuVGFuZ2VudC56O1xuICAgICAgICAgICAgU2tpZG1hcmtNYW5hZ2VyLlNraWRCdWZmZXJUYW5nZW50c1soaW5kZXggKiA0KSArIDNdID0gY3Vyci5UYW5nZW50Lnc7XG4gICAgICAgICAgICBpbmRleCA9IFNraWRtYXJrTWFuYWdlci5Ta2lkbWFya0luZGV4ICogNCArIDM7XG4gICAgICAgICAgICBTa2lkbWFya01hbmFnZXIuU2tpZEJ1ZmZlclRhbmdlbnRzW2luZGV4ICogNF0gPSBjdXJyLlRhbmdlbnQueDtcbiAgICAgICAgICAgIFNraWRtYXJrTWFuYWdlci5Ta2lkQnVmZmVyVGFuZ2VudHNbKGluZGV4ICogNCkgKyAxXSA9IGN1cnIuVGFuZ2VudC55O1xuICAgICAgICAgICAgU2tpZG1hcmtNYW5hZ2VyLlNraWRCdWZmZXJUYW5nZW50c1soaW5kZXggKiA0KSArIDJdID0gY3Vyci5UYW5nZW50Lno7XG4gICAgICAgICAgICBTa2lkbWFya01hbmFnZXIuU2tpZEJ1ZmZlclRhbmdlbnRzWyhpbmRleCAqIDQpICsgM10gPSBjdXJyLlRhbmdlbnQudztcbiAgICAgICAgICAgIC8vIC4uXG4gICAgICAgICAgICAvLyBVcGRhdGUgQ29sb3IgQnVmZmVycyBEaXJlY3RseVxuICAgICAgICAgICAgLy8gLi5cbiAgICAgICAgICAgIGluZGV4ID0gU2tpZG1hcmtNYW5hZ2VyLlNraWRtYXJrSW5kZXggKiA0ICsgMDtcbiAgICAgICAgICAgIFNraWRtYXJrTWFuYWdlci5Ta2lkQnVmZmVyQ29sb3JzW2luZGV4ICogNF0gPSAxLjA7XG4gICAgICAgICAgICBTa2lkbWFya01hbmFnZXIuU2tpZEJ1ZmZlckNvbG9yc1soaW5kZXggKiA0KSArIDFdID0gMS4wO1xuICAgICAgICAgICAgU2tpZG1hcmtNYW5hZ2VyLlNraWRCdWZmZXJDb2xvcnNbKGluZGV4ICogNCkgKyAyXSA9IDEuMDtcbiAgICAgICAgICAgIFNraWRtYXJrTWFuYWdlci5Ta2lkQnVmZmVyQ29sb3JzWyhpbmRleCAqIDQpICsgM10gPSBsYXN0LkludGVuc2l0eTtcbiAgICAgICAgICAgIGluZGV4ID0gU2tpZG1hcmtNYW5hZ2VyLlNraWRtYXJrSW5kZXggKiA0ICsgMTtcbiAgICAgICAgICAgIFNraWRtYXJrTWFuYWdlci5Ta2lkQnVmZmVyQ29sb3JzW2luZGV4ICogNF0gPSAxLjA7XG4gICAgICAgICAgICBTa2lkbWFya01hbmFnZXIuU2tpZEJ1ZmZlckNvbG9yc1soaW5kZXggKiA0KSArIDFdID0gMS4wO1xuICAgICAgICAgICAgU2tpZG1hcmtNYW5hZ2VyLlNraWRCdWZmZXJDb2xvcnNbKGluZGV4ICogNCkgKyAyXSA9IDEuMDtcbiAgICAgICAgICAgIFNraWRtYXJrTWFuYWdlci5Ta2lkQnVmZmVyQ29sb3JzWyhpbmRleCAqIDQpICsgM10gPSBsYXN0LkludGVuc2l0eTtcbiAgICAgICAgICAgIGluZGV4ID0gU2tpZG1hcmtNYW5hZ2VyLlNraWRtYXJrSW5kZXggKiA0ICsgMjtcbiAgICAgICAgICAgIFNraWRtYXJrTWFuYWdlci5Ta2lkQnVmZmVyQ29sb3JzW2luZGV4ICogNF0gPSAxLjA7XG4gICAgICAgICAgICBTa2lkbWFya01hbmFnZXIuU2tpZEJ1ZmZlckNvbG9yc1soaW5kZXggKiA0KSArIDFdID0gMS4wO1xuICAgICAgICAgICAgU2tpZG1hcmtNYW5hZ2VyLlNraWRCdWZmZXJDb2xvcnNbKGluZGV4ICogNCkgKyAyXSA9IDEuMDtcbiAgICAgICAgICAgIFNraWRtYXJrTWFuYWdlci5Ta2lkQnVmZmVyQ29sb3JzWyhpbmRleCAqIDQpICsgM10gPSBjdXJyLkludGVuc2l0eTtcbiAgICAgICAgICAgIGluZGV4ID0gU2tpZG1hcmtNYW5hZ2VyLlNraWRtYXJrSW5kZXggKiA0ICsgMztcbiAgICAgICAgICAgIFNraWRtYXJrTWFuYWdlci5Ta2lkQnVmZmVyQ29sb3JzW2luZGV4ICogNF0gPSAxLjA7XG4gICAgICAgICAgICBTa2lkbWFya01hbmFnZXIuU2tpZEJ1ZmZlckNvbG9yc1soaW5kZXggKiA0KSArIDFdID0gMS4wO1xuICAgICAgICAgICAgU2tpZG1hcmtNYW5hZ2VyLlNraWRCdWZmZXJDb2xvcnNbKGluZGV4ICogNCkgKyAyXSA9IDEuMDtcbiAgICAgICAgICAgIFNraWRtYXJrTWFuYWdlci5Ta2lkQnVmZmVyQ29sb3JzWyhpbmRleCAqIDQpICsgM10gPSBjdXJyLkludGVuc2l0eTtcbiAgICAgICAgICAgIC8vIC4uXG4gICAgICAgICAgICAvLyBVcGRhdGUgQ29vcmQgQnVmZmVycyBEaXJlY3RseVxuICAgICAgICAgICAgLy8gLi5cbiAgICAgICAgICAgIGluZGV4ID0gU2tpZG1hcmtNYW5hZ2VyLlNraWRtYXJrSW5kZXggKiA0ICsgMDtcbiAgICAgICAgICAgIFNraWRtYXJrTWFuYWdlci5Ta2lkQnVmZmVyVXZzW2luZGV4ICogMl0gPSAwO1xuICAgICAgICAgICAgU2tpZG1hcmtNYW5hZ2VyLlNraWRCdWZmZXJVdnNbKGluZGV4ICogMikgKyAxXSA9IDA7XG4gICAgICAgICAgICBpbmRleCA9IFNraWRtYXJrTWFuYWdlci5Ta2lkbWFya0luZGV4ICogNCArIDE7XG4gICAgICAgICAgICBTa2lkbWFya01hbmFnZXIuU2tpZEJ1ZmZlclV2c1tpbmRleCAqIDJdID0gMTtcbiAgICAgICAgICAgIFNraWRtYXJrTWFuYWdlci5Ta2lkQnVmZmVyVXZzWyhpbmRleCAqIDIpICsgMV0gPSAwO1xuICAgICAgICAgICAgaW5kZXggPSBTa2lkbWFya01hbmFnZXIuU2tpZG1hcmtJbmRleCAqIDQgKyAyO1xuICAgICAgICAgICAgU2tpZG1hcmtNYW5hZ2VyLlNraWRCdWZmZXJVdnNbaW5kZXggKiAyXSA9IDA7XG4gICAgICAgICAgICBTa2lkbWFya01hbmFnZXIuU2tpZEJ1ZmZlclV2c1soaW5kZXggKiAyKSArIDFdID0gMTtcbiAgICAgICAgICAgIGluZGV4ID0gU2tpZG1hcmtNYW5hZ2VyLlNraWRtYXJrSW5kZXggKiA0ICsgMztcbiAgICAgICAgICAgIFNraWRtYXJrTWFuYWdlci5Ta2lkQnVmZmVyVXZzW2luZGV4ICogMl0gPSAxO1xuICAgICAgICAgICAgU2tpZG1hcmtNYW5hZ2VyLlNraWRCdWZmZXJVdnNbKGluZGV4ICogMikgKyAxXSA9IDE7XG4gICAgICAgICAgICAvLyAuLlxuICAgICAgICAgICAgLy8gVXBkYXRlIFRyaWFuZ2xlIDEgQnVmZmVycyBEaXJlY3RseSAoUVVBRClcbiAgICAgICAgICAgIC8vLi5cbiAgICAgICAgICAgIFNraWRtYXJrTWFuYWdlci5Ta2lkQnVmZmVySW5kaWNlc1tTa2lkbWFya01hbmFnZXIuU2tpZG1hcmtJbmRleCAqIDYgKyAwXSA9IFNraWRtYXJrTWFuYWdlci5Ta2lkbWFya0luZGV4ICogNCArIDA7XG4gICAgICAgICAgICBTa2lkbWFya01hbmFnZXIuU2tpZEJ1ZmZlckluZGljZXNbU2tpZG1hcmtNYW5hZ2VyLlNraWRtYXJrSW5kZXggKiA2ICsgMl0gPSBTa2lkbWFya01hbmFnZXIuU2tpZG1hcmtJbmRleCAqIDQgKyAxO1xuICAgICAgICAgICAgU2tpZG1hcmtNYW5hZ2VyLlNraWRCdWZmZXJJbmRpY2VzW1NraWRtYXJrTWFuYWdlci5Ta2lkbWFya0luZGV4ICogNiArIDFdID0gU2tpZG1hcmtNYW5hZ2VyLlNraWRtYXJrSW5kZXggKiA0ICsgMjtcbiAgICAgICAgICAgIC8vIC4uXG4gICAgICAgICAgICAvLyBVcGRhdGUgVHJpYW5nbGUgMiBCdWZmZXJzIERpcmVjdGx5IChRVUFEKVxuICAgICAgICAgICAgLy8gLi5cbiAgICAgICAgICAgIFNraWRtYXJrTWFuYWdlci5Ta2lkQnVmZmVySW5kaWNlc1tTa2lkbWFya01hbmFnZXIuU2tpZG1hcmtJbmRleCAqIDYgKyAzXSA9IFNraWRtYXJrTWFuYWdlci5Ta2lkbWFya0luZGV4ICogNCArIDI7XG4gICAgICAgICAgICBTa2lkbWFya01hbmFnZXIuU2tpZEJ1ZmZlckluZGljZXNbU2tpZG1hcmtNYW5hZ2VyLlNraWRtYXJrSW5kZXggKiA2ICsgNV0gPSBTa2lkbWFya01hbmFnZXIuU2tpZG1hcmtJbmRleCAqIDQgKyAxO1xuICAgICAgICAgICAgU2tpZG1hcmtNYW5hZ2VyLlNraWRCdWZmZXJJbmRpY2VzW1NraWRtYXJrTWFuYWdlci5Ta2lkbWFya0luZGV4ICogNiArIDRdID0gU2tpZG1hcmtNYW5hZ2VyLlNraWRtYXJrSW5kZXggKiA0ICsgMztcbiAgICAgICAgfVxuICAgICAgICBwcml2YXRlIHN0YXRpYyBVcGRhdGVTa2lkbWFya01hbmFnZXIoKTp2b2lkIHtcbiAgICAgICAgICAgIGlmIChTa2lkbWFya01hbmFnZXIuU2tpZG1hcmtNZXNoICE9IG51bGwgJiYgU2tpZG1hcmtNYW5hZ2VyLlNraWRtYXJrVXBkYXRlZCA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgICAgIFNraWRtYXJrTWFuYWdlci5Ta2lkbWFya1VwZGF0ZWQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICBpZiAoU2tpZG1hcmtNYW5hZ2VyLlNraWRtYXJrTWVzaC5nZW9tZXRyeSAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIFNraWRtYXJrTWFuYWdlci5Ta2lkbWFya01lc2guZ2VvbWV0cnkudXBkYXRlVmVydGljZXNEYXRhRGlyZWN0bHkoQkFCWUxPTi5WZXJ0ZXhCdWZmZXIuUG9zaXRpb25LaW5kLCBTa2lkbWFya01hbmFnZXIuU2tpZEJ1ZmZlclBvc2l0aW9ucywgMCwgZmFsc2UpO1xuICAgICAgICAgICAgICAgICAgICBTa2lkbWFya01hbmFnZXIuU2tpZG1hcmtNZXNoLmdlb21ldHJ5LnVwZGF0ZVZlcnRpY2VzRGF0YURpcmVjdGx5KEJBQllMT04uVmVydGV4QnVmZmVyLk5vcm1hbEtpbmQsIFNraWRtYXJrTWFuYWdlci5Ta2lkQnVmZmVyTm9ybWFscywgMCwgZmFsc2UpO1xuICAgICAgICAgICAgICAgICAgICBTa2lkbWFya01hbmFnZXIuU2tpZG1hcmtNZXNoLmdlb21ldHJ5LnVwZGF0ZVZlcnRpY2VzRGF0YURpcmVjdGx5KEJBQllMT04uVmVydGV4QnVmZmVyLlRhbmdlbnRLaW5kLCBTa2lkbWFya01hbmFnZXIuU2tpZEJ1ZmZlclRhbmdlbnRzLCAwLCBmYWxzZSk7XG4gICAgICAgICAgICAgICAgICAgIFNraWRtYXJrTWFuYWdlci5Ta2lkbWFya01lc2guZ2VvbWV0cnkudXBkYXRlVmVydGljZXNEYXRhRGlyZWN0bHkoQkFCWUxPTi5WZXJ0ZXhCdWZmZXIuQ29sb3JLaW5kLCBTa2lkbWFya01hbmFnZXIuU2tpZEJ1ZmZlckNvbG9ycywgMCwgZmFsc2UpO1xuICAgICAgICAgICAgICAgICAgICBTa2lkbWFya01hbmFnZXIuU2tpZG1hcmtNZXNoLmdlb21ldHJ5LnVwZGF0ZVZlcnRpY2VzRGF0YURpcmVjdGx5KEJBQllMT04uVmVydGV4QnVmZmVyLlVWS2luZCwgU2tpZG1hcmtNYW5hZ2VyLlNraWRCdWZmZXJVdnMsIDAsIGZhbHNlKTtcbiAgICAgICAgICAgICAgICAgICAgU2tpZG1hcmtNYW5hZ2VyLlNraWRtYXJrTWVzaC5nZW9tZXRyeS51cGRhdGVJbmRpY2VzKFNraWRtYXJrTWFuYWdlci5Ta2lkQnVmZmVySW5kaWNlcywgMCwgU2tpZG1hcmtNYW5hZ2VyLkdQVV9UUklBTkdMRVMpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn0iLCJtb2R1bGUgUFJPSkVDVCB7XG4gICAgLyoqXG4gICAgICogQmFieWxvbiBzdGFuZGFyZCByaWdpZGJvZHkgdmVoaWNsZSBjb250cm9sbGVyIGNsYXNzIChOYXRpdmUgQnVsbGV0IFBoeXNpY3MgMi44MilcbiAgICAgKiBAY2xhc3MgU3RhbmRhcmRDYXJDb250cm9sbGVyXG4gICAgICovXG4gICAgZXhwb3J0IGNsYXNzIFN0YW5kYXJkQ2FyQ29udHJvbGxlciBleHRlbmRzIEJBQllMT04uU2NyaXB0Q29tcG9uZW50IHtcbiAgICAgICAgcHJpdmF0ZSBfcmlnaWRib2R5OkJBQllMT04uUmlnaWRib2R5UGh5c2ljcyA9IG51bGw7XG4gICAgICAgIHByaXZhdGUgX2VuZ2luZUF1ZGlvU291cmNlOkJBQllMT04uQXVkaW9Tb3VyY2UgPSBudWxsO1xuICAgICAgICBwcml2YXRlIF9za2lkUkxBdWRpb1NvdXJjZTpCQUJZTE9OLkF1ZGlvU291cmNlID0gbnVsbDtcbiAgICAgICAgcHJpdmF0ZSBfc2tpZFJSQXVkaW9Tb3VyY2U6QkFCWUxPTi5BdWRpb1NvdXJjZSA9IG51bGw7XG5cbiAgICAgICAgcHJpdmF0ZSBnZWFySW5kZXg6bnVtYmVyID0gMTsgLy8gMDogUmV2ZXJzZSwgMTogTmV1dHJhbCwgMjogMXN0XG4gICAgICAgIHByaXZhdGUgc2hpZnRpbmdHZWFyczpib29sZWFuID0gZmFsc2U7XG4gICAgICAgIHByaXZhdGUgdmVoaWNsZVN0ZWVyOm51bWJlciA9IDA7XG4gICAgICAgIHByaXZhdGUgZW5naW5lRm9yY2U6bnVtYmVyID0gMDtcbiAgICAgICAgcHJpdmF0ZSBicmFraW5nRm9yY2U6bnVtYmVyID0gMDtcbiAgICAgICAgcHJpdmF0ZSBmb3J3YXJkU3BlZWQ6bnVtYmVyID0gMDtcbiAgICAgICAgcHJpdmF0ZSBhYnNvbHV0ZVNwZWVkOm51bWJlciA9IDA7XG4gICAgICAgIHByaXZhdGUgYW1lcmljYW5TcGVlZDpudW1iZXIgPSAwO1xuICAgICAgICBwcml2YXRlIG5vcm1hbGl6ZWRTcGVlZDpudW1iZXIgPSAwO1xuICAgICAgICBwcml2YXRlIHJheWNhc3RWZWhpY2xlOkJBQllMT04uUmF5Y2FzdFZlaGljbGUgPSBudWxsO1xuICAgICAgICBwcml2YXRlIGZyb250TGVmdFdoZWVsTWVzaDpCQUJZTE9OLlRyYW5zZm9ybU5vZGUgPSBudWxsO1xuICAgICAgICBwcml2YXRlIGZyb250UmlnaHRXaGVlbE1lc2g6QkFCWUxPTi5UcmFuc2Zvcm1Ob2RlID0gbnVsbDtcbiAgICAgICAgcHJpdmF0ZSBiYWNrTGVmdFdoZWVsTWVzaDpCQUJZTE9OLlRyYW5zZm9ybU5vZGUgPSBudWxsO1xuICAgICAgICBwcml2YXRlIGJhY2tSaWdodFdoZWVsTWVzaDpCQUJZTE9OLlRyYW5zZm9ybU5vZGUgPSBudWxsO1xuICAgICAgICBwcml2YXRlIGZyb250TGVmdFdoZWVsVHJhbnM6QkFCWUxPTi5JVW5pdHlUcmFuc2Zvcm0gPSBudWxsO1xuICAgICAgICBwcml2YXRlIGZyb250UmlnaHRXaGVlbFRyYW5zOkJBQllMT04uSVVuaXR5VHJhbnNmb3JtID0gbnVsbDtcbiAgICAgICAgcHJpdmF0ZSBiYWNrTGVmdFdoZWVsVHJhbnM6QkFCWUxPTi5JVW5pdHlUcmFuc2Zvcm0gPSBudWxsO1xuICAgICAgICBwcml2YXRlIGJhY2tSaWdodFdoZWVsVHJhbnM6QkFCWUxPTi5JVW5pdHlUcmFuc2Zvcm0gPSBudWxsO1xuICAgICAgICBwcml2YXRlIGZyb250TGVmdFdoZWVsQ29sbGlkZXI6YW55ID0gbnVsbDtcbiAgICAgICAgcHJpdmF0ZSBmcm9udFJpZ2h0V2hlZWxDb2xsaWRlcjphbnkgPSBudWxsO1xuICAgICAgICBwcml2YXRlIGJhY2tMZWZ0V2hlZWxDb2xsaWRlcjphbnkgPSBudWxsO1xuICAgICAgICBwcml2YXRlIGJhY2tSaWdodFdoZWVsQ29sbGlkZXI6YW55ID0gbnVsbDtcbiAgICAgICAgcHJpdmF0ZSBlbmdpbmVUb3JxdWVDdXJ2ZTpCQUJZTE9OLkFuaW1hdGlvbiA9IG51bGw7XG4gICAgICAgIHByaXZhdGUgd2hlZWxSYWRpdXM6bnVtYmVyID0gMDtcbiAgICAgICAgcHJpdmF0ZSBzaGlmdERlbGF5Om51bWJlciA9IDA7XG4gICAgICAgIHByaXZhdGUgY2x1dGNoU2xpcDpudW1iZXIgPSAwO1xuICAgICAgICBwcml2YXRlIGVuZ2luZVJQTTpudW1iZXIgPSAwO1xuICAgICAgICBwcml2YXRlIGxlcnBlZFJQTTpudW1iZXIgPSAwO1xuICAgICAgICBwcml2YXRlIG9sZFJQTTpudW1iZXIgPSAwO1xuXG5cbiAgICAgICAgcHJpdmF0ZSBTVEVFUl9SQURJVVM6bnVtYmVyID0gMC41O1xuICAgICAgICBwcml2YXRlIEZST05UX0xFRlQ6bnVtYmVyID0gLTE7XG4gICAgICAgIHByaXZhdGUgRlJPTlRfUklHSFQ6bnVtYmVyID0gLTE7XG4gICAgICAgIHByaXZhdGUgQkFDS19MRUZUOm51bWJlciA9IC0xO1xuICAgICAgICBwcml2YXRlIEJBQ0tfUklHSFQ6bnVtYmVyID0gLTE7XG5cbiAgICAgICAgcHVibGljIGdldFJpZ2lkYm9keVBoeXNpY3MoKTpCQUJZTE9OLlJpZ2lkYm9keVBoeXNpY3MgeyByZXR1cm4gdGhpcy5fcmlnaWRib2R5OyB9XG4gICAgICAgIHB1YmxpYyBnZXRSYXljYXN0VmVoaWNsZSgpOkJBQllMT04uUmF5Y2FzdFZlaGljbGUgeyByZXR1cm4gdGhpcy5yYXljYXN0VmVoaWNsZTsgfVxuICAgICAgICBwdWJsaWMgZ2V0QWJzb2x1dGVTcGVlZCgpOm51bWJlciB7IHJldHVybiB0aGlzLmFic29sdXRlU3BlZWQ7IH1cbiAgICAgICAgcHVibGljIGdldE5vcm1hbGl6ZWRTcGVlZCgpOm51bWJlciB7IHJldHVybiB0aGlzLm5vcm1hbGl6ZWRTcGVlZDsgfVxuICAgICAgICBwdWJsaWMgZ2V0Q3VycmVudEdlYXJJbmRleCgpOm51bWJlciB7IHJldHVybiB0aGlzLmdlYXJJbmRleCB9XG4gICAgICAgIHB1YmxpYyBnZXRDdXJyZW50RW5naW5lUlBNKCk6bnVtYmVyIHsgcmV0dXJuIHRoaXMuZW5naW5lUlBNIH1cbiAgICAgICAgcHVibGljIGdldEN1cnJlbnRFbmdpbmVQaXRjaCgpOm51bWJlciB7IHJldHVybiBCQUJZTE9OLlNjYWxhci5DbGFtcCgodGhpcy5sZXJwZWRSUE0gLyB0aGlzLmxlcnBFbmdpbmVQaXRjaGluZykgKyAwLjEpOyB9XG4gICAgICAgIHB1YmxpYyBnZXRHZWFyU2hpZnRSYXRpb0NvdW50KCk6bnVtYmVyIHsgcmV0dXJuICh0aGlzLmdlYXJCb3hTaGlmdFJhdGlvcyAhPSBudWxsKSA/IHRoaXMuZ2VhckJveFNoaWZ0UmF0aW9zLmxlbmd0aCA6IDAgfVxuXG4gICAgICAgIHB1YmxpYyBzbW9rZVRleHR1cmU6YW55ID0gbnVsbDtcbiAgICAgICAgcHVibGljIHNoYWRvd1RleHR1cmU6YW55ID0gbnVsbDtcbiAgICAgICAgcHVibGljIHNldEVuZ2luZVRvcnF1ZTphbnkgPSBudWxsO1xuICAgICAgICBwdWJsaWMgdG9wRW5naW5lU3BlZWQ6bnVtYmVyID0gMTIwO1xuICAgICAgICBwdWJsaWMgbG93U3BlZWRBbmdsZTpudW1iZXIgPSAwLjI1O1xuICAgICAgICBwdWJsaWMgaGlnaFNwZWVkQW5nbGU6bnVtYmVyID0gMC4wMTI1O1xuICAgICAgICBwdWJsaWMgc3RhYmlsaXppbmdGb3JjZTpudW1iZXIgPSAzLjA7XG4gICAgICAgIHB1YmxpYyB0cmFuc21pc3Npb25SYXRpbyA9IDAuNztcbiAgICAgICAgcHVibGljIGRpZmZlcmVudGlhbFJhdGlvID0gMy41NTtcbiAgICAgICAgcHVibGljIG1heEJyYWtpbmdGb3JjZTpudW1iZXIgPSAxMDA7XG4gICAgICAgIHB1YmxpYyBtYXhSZXZlcnNlU3BlZWQ6bnVtYmVyID0gMC42NjtcbiAgICAgICAgcHVibGljIGxlcnBFbmdpbmVQaXRjaGluZyA9IDUwMDA7XG4gICAgICAgIHB1YmxpYyBoYW5kQnJha2luZ0ZvcmNlOm51bWJlciA9IDEwMDA7XG4gICAgICAgIHB1YmxpYyB3aGVlbExvY2tGcmljdGlvbjpudW1iZXIgPSAwLjE7XG4gICAgICAgIHB1YmxpYyBkcmlmdGluZ0luZmx1ZW5jZTpudW1iZXIgPSAwO1xuICAgICAgICBwdWJsaWMgbG93U3BlZWRJbmNyZW1lbnQ6bnVtYmVyID0gMC4wMTI1O1xuICAgICAgICBwdWJsaWMgaGlnaFNwZWVkSW5jcmVtZW50Om51bWJlciA9IDAuMDEyNTtcbiAgICAgICAgcHVibGljIGZyaWN0aW9uU2xpcFNwZWVkOm51bWJlciA9IDEwO1xuICAgICAgICBwdWJsaWMgd2hlZWxEcml2ZVR5cGU6bnVtYmVyID0gMDtcbiAgICAgICAgcHVibGljIGdlYXJCb3hTaGlmdERlbGF5Om51bWJlciA9IDAuMztcbiAgICAgICAgcHVibGljIGdlYXJCb3hTaGlmdE5leHQ6bnVtYmVyID0gMzUwMDtcbiAgICAgICAgcHVibGljIGdlYXJCb3hTaGlmdERvd246bnVtYmVyID0gMjUwMDtcbiAgICAgICAgcHVibGljIGdlYXJCb3hTaGlmdFJhdGlvczpudW1iZXJbXSA9IFszLjQzNywgMC4wMCwgMy42MjYsIDIuMiwgMS41NDEsIDEuMjEzLCAxLjAsIDAuNzY3XTtcbiAgICAgICAgcHVibGljIGdlYXJCb3hTaGlmdFNjYWxlczpudW1iZXJbXSA9IFsxLjAsIDEuMCwgMS4wLCAxLjAsIDEuMCwgMS4wLCAxLjAsIDEuMF07XG5cbiAgICAgICAgcHJvdGVjdGVkIG1fZnJvbnRMZWZ0V2hlZWw6YW55ID0gbnVsbDtcbiAgICAgICAgcHJvdGVjdGVkIG1fZnJvbnRSaWdodFdoZWVsOmFueSA9IG51bGw7XG4gICAgICAgIHByb3RlY3RlZCBtX2JhY2tMZWZ0V2hlZWw6YW55ID0gbnVsbDtcbiAgICAgICAgcHJvdGVjdGVkIG1fYmFja1JpZ2h0V2hlZWw6YW55ID0gbnVsbDtcbiAgICAgICAgcHJvdGVjdGVkIG1fcGh5c2ljc1dvcmxkOmFueSA9IG51bGw7XG4gICAgICAgIHB1YmxpYyBjb25zdHJ1Y3Rvcih0cmFuc2Zvcm06IEJBQllMT04uVHJhbnNmb3JtTm9kZSwgc2NlbmU6IEJBQllMT04uU2NlbmUsIHByb3BlcnRpZXM6IGFueSA9IHt9KSB7XG4gICAgICAgICAgICBzdXBlcih0cmFuc2Zvcm0sIHNjZW5lLCBwcm9wZXJ0aWVzKTtcbiAgICAgICAgICAgIHRoaXMudmVoaWNsZVN0ZWVyID0gMDtcbiAgICAgICAgICAgIHRoaXMuYnJha2luZ0ZvcmNlID0gMDtcbiAgICAgICAgICAgIHRoaXMuZW5naW5lRm9yY2UgPSAwO1xuICAgICAgICAgICAgdGhpcy5tX3BoeXNpY3NXb3JsZCA9IEJBQllMT04uU2NlbmVNYW5hZ2VyLkdldFBoeXNpY3NXb3JsZCh0aGlzLnNjZW5lKTtcbiAgICAgICAgICAgIHRoaXMuc21va2VUZXh0dXJlID0gdGhpcy5nZXRFZGl0b3JQcm9wZXJ0eShcInNtb2tlVGV4dHVyZVwiLCB0aGlzLnNtb2tlVGV4dHVyZSk7XG4gICAgICAgICAgICB0aGlzLnNoYWRvd1RleHR1cmUgPSB0aGlzLmdldEVkaXRvclByb3BlcnR5KFwic2hhZG93VGV4dHVyZVwiLCB0aGlzLnNoYWRvd1RleHR1cmUpO1xuICAgICAgICAgICAgdGhpcy5zZXRFbmdpbmVUb3JxdWUgPSB0aGlzLmdldEVkaXRvclByb3BlcnR5KFwic2V0RW5naW5lVG9ycXVlXCIsIHRoaXMuc2V0RW5naW5lVG9ycXVlKTtcbiAgICAgICAgICAgIHRoaXMudG9wRW5naW5lU3BlZWQgPSB0aGlzLmdldEVkaXRvclByb3BlcnR5KFwidG9wRW5naW5lU3BlZWRcIiwgdGhpcy50b3BFbmdpbmVTcGVlZCk7XG4gICAgICAgICAgICB0aGlzLnN0YWJpbGl6aW5nRm9yY2UgPSB0aGlzLmdldEVkaXRvclByb3BlcnR5KFwic3RhYmlsaXppbmdGb3JjZVwiLCB0aGlzLnN0YWJpbGl6aW5nRm9yY2UpO1xuICAgICAgICAgICAgdGhpcy5sb3dTcGVlZEFuZ2xlID0gdGhpcy5nZXRFZGl0b3JQcm9wZXJ0eShcImxvd1NwZWVkQW5nbGVcIiwgdGhpcy5sb3dTcGVlZEFuZ2xlKTtcbiAgICAgICAgICAgIHRoaXMuaGlnaFNwZWVkQW5nbGUgPSB0aGlzLmdldEVkaXRvclByb3BlcnR5KFwiaGlnaFNwZWVkQW5nbGVcIiwgdGhpcy5oaWdoU3BlZWRBbmdsZSk7XG4gICAgICAgICAgICB0aGlzLndoZWVsRHJpdmVUeXBlID0gdGhpcy5nZXRFZGl0b3JQcm9wZXJ0eShcIndoZWVsRHJpdmVUeXBlXCIsIHRoaXMud2hlZWxEcml2ZVR5cGUpO1xuICAgICAgICAgICAgdGhpcy5tYXhCcmFraW5nRm9yY2UgPSB0aGlzLmdldEVkaXRvclByb3BlcnR5KFwibWF4QnJha2luZ0ZvcmNlXCIsIHRoaXMubWF4QnJha2luZ0ZvcmNlKTtcbiAgICAgICAgICAgIHRoaXMuaGFuZEJyYWtpbmdGb3JjZSA9IHRoaXMuZ2V0RWRpdG9yUHJvcGVydHkoXCJoYW5kQnJha2luZ0ZvcmNlXCIsIHRoaXMuaGFuZEJyYWtpbmdGb3JjZSk7XG4gICAgICAgICAgICB0aGlzLmRyaWZ0aW5nSW5mbHVlbmNlID0gdGhpcy5nZXRFZGl0b3JQcm9wZXJ0eShcImRyaWZ0aW5nSW5mbHVlbmNlXCIsIHRoaXMuZHJpZnRpbmdJbmZsdWVuY2UpO1xuICAgICAgICAgICAgdGhpcy53aGVlbExvY2tGcmljdGlvbiA9IHRoaXMuZ2V0RWRpdG9yUHJvcGVydHkoXCJ3aGVlbExvY2tGcmljdGlvblwiLCB0aGlzLndoZWVsTG9ja0ZyaWN0aW9uKTtcbiAgICAgICAgICAgIHRoaXMubG93U3BlZWRJbmNyZW1lbnQgPSB0aGlzLmdldEVkaXRvclByb3BlcnR5KFwibG93U3BlZWRJbmNyZW1lbnRcIiwgdGhpcy5sb3dTcGVlZEluY3JlbWVudCk7XG4gICAgICAgICAgICB0aGlzLmhpZ2hTcGVlZEluY3JlbWVudCA9IHRoaXMuZ2V0RWRpdG9yUHJvcGVydHkoXCJoaWdoU3BlZWRJbmNyZW1lbnRcIiwgdGhpcy5oaWdoU3BlZWRJbmNyZW1lbnQpO1xuICAgICAgICAgICAgdGhpcy5mcm9udExlZnRXaGVlbFRyYW5zID0gdGhpcy5nZXRFZGl0b3JQcm9wZXJ0eShcImZyb250TGVmdFdoZWVsTWVzaFwiLCB0aGlzLmZyb250TGVmdFdoZWVsVHJhbnMpO1xuICAgICAgICAgICAgdGhpcy5mcm9udFJpZ2h0V2hlZWxUcmFucyA9IHRoaXMuZ2V0RWRpdG9yUHJvcGVydHkoXCJmcm9udFJpZ2h0V2hlZWxNZXNoXCIsIHRoaXMuZnJvbnRSaWdodFdoZWVsVHJhbnMpO1xuICAgICAgICAgICAgdGhpcy5iYWNrTGVmdFdoZWVsVHJhbnMgPSB0aGlzLmdldEVkaXRvclByb3BlcnR5KFwicmVhckxlZnRXaGVlbE1lc2hcIiwgdGhpcy5iYWNrTGVmdFdoZWVsVHJhbnMpO1xuICAgICAgICAgICAgdGhpcy5iYWNrUmlnaHRXaGVlbFRyYW5zID0gdGhpcy5nZXRFZGl0b3JQcm9wZXJ0eShcInJlYXJSaWdodFdoZWVsTWVzaFwiLCB0aGlzLmJhY2tSaWdodFdoZWVsVHJhbnMpO1xuICAgICAgICAgICAgdGhpcy5mcm9udExlZnRXaGVlbENvbGxpZGVyID0gdGhpcy5nZXRFZGl0b3JQcm9wZXJ0eShcImZyb250TGVmdFdoZWVsQ29sbGlkZXJcIiwgdGhpcy5mcm9udExlZnRXaGVlbENvbGxpZGVyKTtcbiAgICAgICAgICAgIHRoaXMuZnJvbnRSaWdodFdoZWVsQ29sbGlkZXIgPSB0aGlzLmdldEVkaXRvclByb3BlcnR5KFwiZnJvbnRSaWdodFdoZWVsQ29sbGlkZXJcIiwgdGhpcy5mcm9udFJpZ2h0V2hlZWxDb2xsaWRlcik7XG4gICAgICAgICAgICB0aGlzLmJhY2tMZWZ0V2hlZWxDb2xsaWRlciA9IHRoaXMuZ2V0RWRpdG9yUHJvcGVydHkoXCJyZWFyTGVmdFdoZWVsQ29sbGlkZXJcIiwgdGhpcy5iYWNrTGVmdFdoZWVsQ29sbGlkZXIpO1xuICAgICAgICAgICAgdGhpcy5iYWNrUmlnaHRXaGVlbENvbGxpZGVyID0gdGhpcy5nZXRFZGl0b3JQcm9wZXJ0eShcInJlYXJSaWdodFdoZWVsQ29sbGlkZXJcIiwgdGhpcy5iYWNrUmlnaHRXaGVlbENvbGxpZGVyKTtcbiAgICAgICAgICAgIHRoaXMuZnJpY3Rpb25TbGlwU3BlZWQgPSB0aGlzLmdldEVkaXRvclByb3BlcnR5KFwiZnJpY3Rpb25TbGlwU3BlZWRcIiwgdGhpcy5mcmljdGlvblNsaXBTcGVlZCk7XG4gICAgICAgICAgICB0aGlzLmxlcnBFbmdpbmVQaXRjaGluZyA9IHRoaXMuZ2V0RWRpdG9yUHJvcGVydHkoXCJsZXJwRW5naW5lUGl0Y2hpbmdcIiwgdGhpcy5sZXJwRW5naW5lUGl0Y2hpbmcpO1xuICAgICAgICAgICAgdGhpcy5kaWZmZXJlbnRpYWxSYXRpbyA9IHRoaXMuZ2V0RWRpdG9yUHJvcGVydHkoXCJnZWFyQm94RGlmZmVyZW50aWFsXCIsIHRoaXMuZGlmZmVyZW50aWFsUmF0aW8pO1xuICAgICAgICAgICAgdGhpcy50cmFuc21pc3Npb25SYXRpbyA9IHRoaXMuZ2V0RWRpdG9yUHJvcGVydHkoXCJnZWFyQm94T3ZlcmRyaXZlXCIsIHRoaXMudHJhbnNtaXNzaW9uUmF0aW8pO1xuICAgICAgICAgICAgdGhpcy5nZWFyQm94U2hpZnROZXh0ID0gdGhpcy5nZXRFZGl0b3JQcm9wZXJ0eShcImdlYXJCb3hTaGlmdE5leHRcIiwgdGhpcy5nZWFyQm94U2hpZnROZXh0KTtcbiAgICAgICAgICAgIHRoaXMuZ2VhckJveFNoaWZ0RG93biA9IHRoaXMuZ2V0RWRpdG9yUHJvcGVydHkoXCJnZWFyQm94U2hpZnREb3duXCIsIHRoaXMuZ2VhckJveFNoaWZ0RG93bik7XG4gICAgICAgICAgICB0aGlzLmdlYXJCb3hTaGlmdERlbGF5ID0gdGhpcy5nZXRFZGl0b3JQcm9wZXJ0eShcImdlYXJCb3hTaGlmdERlbGF5XCIsIHRoaXMuZ2VhckJveFNoaWZ0RGVsYXkpO1xuICAgICAgICAgICAgdGhpcy5nZWFyQm94U2hpZnRSYXRpb3MgPSB0aGlzLmdldEVkaXRvclByb3BlcnR5KFwiZ2VhckJveFNoaWZ0UmF0aW9zXCIsIHRoaXMuZ2VhckJveFNoaWZ0UmF0aW9zKTtcbiAgICAgICAgICAgIHRoaXMuZ2VhckJveFNoaWZ0U2NhbGVzID0gdGhpcy5nZXRFZGl0b3JQcm9wZXJ0eShcImdlYXJCb3hTaGlmdFNjYWxlc1wiLCB0aGlzLmdlYXJCb3hTaGlmdFNjYWxlcyk7XG5cbiAgICAgICAgICAgIGlmICh0aGlzLmxvd1NwZWVkQW5nbGUgPD0gMCkgdGhpcy5sb3dTcGVlZEFuZ2xlID0gMC4zO1xuICAgICAgICAgICAgaWYgKHRoaXMuaGlnaFNwZWVkQW5nbGUgPD0gMCkgdGhpcy5oaWdoU3BlZWRBbmdsZSA9IDAuMDEyNTtcbiAgICAgICAgICAgIGlmICh0aGlzLmxvd1NwZWVkSW5jcmVtZW50IDw9IDApIHRoaXMubG93U3BlZWRJbmNyZW1lbnQgPSAwLjAxMjU7XG4gICAgICAgICAgICBpZiAodGhpcy5oaWdoU3BlZWRJbmNyZW1lbnQgPD0gMCkgdGhpcy5oaWdoU3BlZWRJbmNyZW1lbnQgPSAwLjAxMjU7XG4gICAgICAgICAgICBpZiAodGhpcy5sZXJwRW5naW5lUGl0Y2hpbmcgPD0gMCkgdGhpcy5sZXJwRW5naW5lUGl0Y2hpbmcgPSA1MDAwO1xuICAgICAgICAgICAgaWYgKHRoaXMuZ2VhckJveFNoaWZ0TmV4dCA8PSAwKSB0aGlzLmdlYXJCb3hTaGlmdE5leHQgPSAzNTAwO1xuICAgICAgICAgICAgaWYgKHRoaXMuZ2VhckJveFNoaWZ0RG93biA8PSAwKSB0aGlzLmdlYXJCb3hTaGlmdE5leHQgPSAyNTAwO1xuICAgICAgICAgICAgaWYgKHRoaXMuZ2VhckJveFNoaWZ0RGVsYXkgPD0gMCkgdGhpcy5nZWFyQm94U2hpZnREZWxheSA9IDAuMztcbiAgICAgICAgICAgIGlmICh0aGlzLnRyYW5zbWlzc2lvblJhdGlvIDw9IDApIHRoaXMudHJhbnNtaXNzaW9uUmF0aW8gPSAxO1xuICAgICAgICAgICAgaWYgKHRoaXMuZGlmZmVyZW50aWFsUmF0aW8gPD0gMCkgdGhpcy5kaWZmZXJlbnRpYWxSYXRpbyA9IDE7XG4gICAgICAgICAgICBpZiAodGhpcy5kcmlmdGluZ0luZmx1ZW5jZSA8PSAwKSB0aGlzLmRyaWZ0aW5nSW5mbHVlbmNlID0gMTtcbiAgICAgICAgICAgIGlmICh0aGlzLmZyaWN0aW9uU2xpcFNwZWVkIDw9IDApIHRoaXMuZnJpY3Rpb25TbGlwU3BlZWQgPSAxO1xuICAgICAgICAgICAgaWYgKHRoaXMuc2V0RW5naW5lVG9ycXVlICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICAvLyBUT0RPOiBVU0UgRU5HSU5FIFRPUlFVRSBDVVJWRVNcbiAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oXCJTZXR1cCBFbmdpbmUgVG9ycXVlIEFuaW1hdGlvblwiKTtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyh0aGlzLnNldEVuZ2luZVRvcnF1ZSk7XG4gICAgICAgICAgICAgICAgLy90aGlzLmVuZ2luZVRvcnF1ZUN1cnZlID0gbnVsbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHByb3RlY3RlZCBzdGFydCgpOnZvaWQgeyB0aGlzLmluaXRWZWhpY2xlU3RhdGUoKTsgfVxuICAgICAgICBwcm90ZWN0ZWQgdXBkYXRlKCkgOnZvaWQgeyAgdGhpcy51cGRhdGVWZWhpY2xlU3RhdGUoKTsgfVxuICAgICAgICBwcm90ZWN0ZWQgZGVzdHJveSgpOiB2b2lkIHsgdGhpcy5kZXN0cm95VmVoaWNsZVN0YXRlKCk7IH1cblxuICAgICAgICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuICAgICAgICAvLyBQcm90ZWN0ZWQgVmVoaWNsZSBNb3ZlbWVudCBTdGF0ZSBGdW5jdGlvbnMgLy9cbiAgICAgICAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbiAgICBcbiAgICAgICAgcHJvdGVjdGVkIGluaXRWZWhpY2xlU3RhdGUoKTogdm9pZCB7XG4gICAgICAgICAgICBCQUJZTE9OLlV0aWxpdGllcy5WYWxpZGF0ZVRyYW5zZm9ybVF1YXRlcm5pb24odGhpcy50cmFuc2Zvcm0pO1xuICAgICAgICAgICAgLy8gU2V0dXAgRW5naW5lIEF1ZGlvXG4gICAgICAgICAgICB0aGlzLl9lbmdpbmVBdWRpb1NvdXJjZSA9IHRoaXMuZ2V0Q29tcG9uZW50KFwiQkFCWUxPTi5BdWRpb1NvdXJjZVwiKTtcbiAgICAgICAgICAgIGlmICh0aGlzLl9lbmdpbmVBdWRpb1NvdXJjZSA9PSBudWxsKSBCQUJZTE9OLlRvb2xzLldhcm4oXCJObyBlbmdpbmUgYXVkaW8gc291cmNlIG1hbmFnZXIgZm91bmQgZm9yOiBcIiArIHRoaXMudHJhbnNmb3JtLm5hbWUpO1xuICAgICAgICAgICAgLy8gU2V0dXAgUmF5Y2FzdCBWZWhpY2xlXG4gICAgICAgICAgICB0aGlzLl9yaWdpZGJvZHkgPSB0aGlzLmdldENvbXBvbmVudChcIkJBQllMT04uUmlnaWRib2R5UGh5c2ljc1wiKTtcbiAgICAgICAgICAgIGlmICh0aGlzLl9yaWdpZGJvZHkgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIC8vIFJlc2V0IExpbmVhciBEcmFnIERhbXBpbmdcbiAgICAgICAgICAgICAgICB0aGlzLl9yaWdpZGJvZHkuc2V0RGFtcGluZygwLCB0aGlzLl9yaWdpZGJvZHkuZ2V0QW5ndWxhckRhbXBpbmcoKSk7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuX3JpZ2lkYm9keS5oYXNSYXljYXN0VmVoaWNsZSgpKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucmF5Y2FzdFZlaGljbGUgPSB0aGlzLl9yaWdpZGJvZHkuZ2V0UmF5Y2FzdFZlaGljbGUoKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMucmF5Y2FzdFZlaGljbGUgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZnJvbnRMZWZ0V2hlZWxOYW1lOnN0cmluZyA9ICh0aGlzLmZyb250TGVmdFdoZWVsVHJhbnMubmFtZSAhPSBudWxsICYmIHRoaXMuZnJvbnRMZWZ0V2hlZWxUcmFucy5uYW1lICE9PSBcIlwiKSA/IHRoaXMuZnJvbnRMZWZ0V2hlZWxUcmFucy5uYW1lIDogbnVsbDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGZyb250UmlnaHRXaGVlbE5hbWU6c3RyaW5nID0gKHRoaXMuZnJvbnRSaWdodFdoZWVsVHJhbnMubmFtZSAhPSBudWxsICYmIHRoaXMuZnJvbnRSaWdodFdoZWVsVHJhbnMubmFtZSAhPT0gXCJcIikgPyB0aGlzLmZyb250UmlnaHRXaGVlbFRyYW5zLm5hbWUgOiBudWxsO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgYmFja0xlZnRXaGVlbE5hbWU6c3RyaW5nID0gKHRoaXMuYmFja0xlZnRXaGVlbFRyYW5zLm5hbWUgIT0gbnVsbCAmJiB0aGlzLmJhY2tMZWZ0V2hlZWxUcmFucy5uYW1lICE9PSBcIlwiKSA/IHRoaXMuYmFja0xlZnRXaGVlbFRyYW5zLm5hbWUgOiBudWxsO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgYmFja1JpZ2h0V2hlZWxOYW1lOnN0cmluZyA9ICh0aGlzLmJhY2tSaWdodFdoZWVsVHJhbnMubmFtZSAhPSBudWxsICYmIHRoaXMuYmFja1JpZ2h0V2hlZWxUcmFucy5uYW1lICE9PSBcIlwiKSA/IHRoaXMuYmFja1JpZ2h0V2hlZWxUcmFucy5uYW1lIDogbnVsbDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGZyb250TGVmdFdoZWVsTGFiZWw6c3RyaW5nID0gKHRoaXMuZnJvbnRMZWZ0V2hlZWxDb2xsaWRlci5uYW1lICE9IG51bGwgJiYgdGhpcy5mcm9udExlZnRXaGVlbENvbGxpZGVyLm5hbWUgIT09IFwiXCIpID8gdGhpcy5mcm9udExlZnRXaGVlbENvbGxpZGVyLm5hbWUgOiBudWxsO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZnJvbnRSaWdodFdoZWVsTGFiZWw6c3RyaW5nID0gKHRoaXMuZnJvbnRSaWdodFdoZWVsQ29sbGlkZXIubmFtZSAhPSBudWxsICYmIHRoaXMuZnJvbnRSaWdodFdoZWVsQ29sbGlkZXIubmFtZSAhPT0gXCJcIikgPyB0aGlzLmZyb250UmlnaHRXaGVlbENvbGxpZGVyLm5hbWUgOiBudWxsO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgYmFja0xlZnRXaGVlbExhYmVsOnN0cmluZyA9ICh0aGlzLmJhY2tMZWZ0V2hlZWxDb2xsaWRlci5uYW1lICE9IG51bGwgJiYgdGhpcy5iYWNrTGVmdFdoZWVsQ29sbGlkZXIubmFtZSAhPT0gXCJcIikgPyB0aGlzLmJhY2tMZWZ0V2hlZWxDb2xsaWRlci5uYW1lIDogbnVsbDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGJhY2tSaWdodFdoZWVsTGFiZWw6c3RyaW5nID0gKHRoaXMuYmFja1JpZ2h0V2hlZWxDb2xsaWRlci5uYW1lICE9IG51bGwgJiYgdGhpcy5iYWNrUmlnaHRXaGVlbENvbGxpZGVyLm5hbWUgIT09IFwiXCIpID8gdGhpcy5iYWNrUmlnaHRXaGVlbENvbGxpZGVyLm5hbWUgOiBudWxsO1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gR2V0IFdoZWVsIEluZGV4cyBmcm9tIFdoZWVsIE5hbWVzXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZnJvbnRMZWZ0V2hlZWxMYWJlbCAhPSBudWxsKSB0aGlzLkZST05UX0xFRlQgPSB0aGlzLnJheWNhc3RWZWhpY2xlLmdldFdoZWVsSW5kZXhCeU5hbWUoZnJvbnRMZWZ0V2hlZWxMYWJlbCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZnJvbnRSaWdodFdoZWVsTGFiZWwgIT0gbnVsbCkgdGhpcy5GUk9OVF9SSUdIVCA9IHRoaXMucmF5Y2FzdFZlaGljbGUuZ2V0V2hlZWxJbmRleEJ5TmFtZShmcm9udFJpZ2h0V2hlZWxMYWJlbCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoYmFja0xlZnRXaGVlbExhYmVsICE9IG51bGwpIHRoaXMuQkFDS19MRUZUID0gdGhpcy5yYXljYXN0VmVoaWNsZS5nZXRXaGVlbEluZGV4QnlOYW1lKGJhY2tMZWZ0V2hlZWxMYWJlbCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoYmFja1JpZ2h0V2hlZWxMYWJlbCAhPSBudWxsKSB0aGlzLkJBQ0tfUklHSFQgPSB0aGlzLnJheWNhc3RWZWhpY2xlLmdldFdoZWVsSW5kZXhCeU5hbWUoYmFja1JpZ2h0V2hlZWxMYWJlbCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBTZXR1cCBXaGVlbCBJbmZvIEFuZCBUcmFuc2Zvcm0gTWVzaGVzXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5yYXljYXN0VmVoaWNsZS5nZXROdW1XaGVlbHMoKSA+PSA0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuRlJPTlRfTEVGVCA+PSAwICYmIGZyb250TGVmdFdoZWVsTmFtZSAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubV9mcm9udExlZnRXaGVlbCA9IHRoaXMucmF5Y2FzdFZlaGljbGUuZ2V0V2hlZWxJbmZvKHRoaXMuRlJPTlRfTEVGVCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZnJvbnRMZWZ0V2hlZWxNZXNoID0gdGhpcy5nZXRDaGlsZFRyYW5zZm9ybShmcm9udExlZnRXaGVlbE5hbWUsIEJBQllMT04uU2VhcmNoVHlwZS5TdGFydHNXaXRoLCBmYWxzZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLmZyb250TGVmdFdoZWVsTWVzaCAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnJheWNhc3RWZWhpY2xlLnNldFdoZWVsVHJhbnNmb3JtTWVzaCh0aGlzLkZST05UX0xFRlQsIHRoaXMuZnJvbnRMZWZ0V2hlZWxNZXNoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5GUk9OVF9SSUdIVCA+PSAwICYmIGZyb250UmlnaHRXaGVlbE5hbWUgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm1fZnJvbnRSaWdodFdoZWVsID0gdGhpcy5yYXljYXN0VmVoaWNsZS5nZXRXaGVlbEluZm8odGhpcy5GUk9OVF9SSUdIVCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZnJvbnRSaWdodFdoZWVsTWVzaCA9IHRoaXMuZ2V0Q2hpbGRUcmFuc2Zvcm0oZnJvbnRSaWdodFdoZWVsTmFtZSwgQkFCWUxPTi5TZWFyY2hUeXBlLlN0YXJ0c1dpdGgsIGZhbHNlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuZnJvbnRSaWdodFdoZWVsTWVzaCAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnJheWNhc3RWZWhpY2xlLnNldFdoZWVsVHJhbnNmb3JtTWVzaCh0aGlzLkZST05UX1JJR0hULCB0aGlzLmZyb250UmlnaHRXaGVlbE1lc2gpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLkJBQ0tfTEVGVCA+PSAwICYmIGJhY2tMZWZ0V2hlZWxOYW1lICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5tX2JhY2tMZWZ0V2hlZWwgPSB0aGlzLnJheWNhc3RWZWhpY2xlLmdldFdoZWVsSW5mbyh0aGlzLkJBQ0tfTEVGVCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLndoZWVsUmFkaXVzIDw9IDAgJiYgdGhpcy5tX2JhY2tMZWZ0V2hlZWwgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy53aGVlbFJhZGl1cyA9IHRoaXMubV9iYWNrTGVmdFdoZWVsLmdldF9tX3doZWVsc1JhZGl1cygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYmFja0xlZnRXaGVlbE1lc2ggPSB0aGlzLmdldENoaWxkVHJhbnNmb3JtKGJhY2tMZWZ0V2hlZWxOYW1lLCBCQUJZTE9OLlNlYXJjaFR5cGUuU3RhcnRzV2l0aCwgZmFsc2UpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5iYWNrTGVmdFdoZWVsTWVzaCAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnJheWNhc3RWZWhpY2xlLnNldFdoZWVsVHJhbnNmb3JtTWVzaCh0aGlzLkJBQ0tfTEVGVCwgdGhpcy5iYWNrTGVmdFdoZWVsTWVzaCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLl9za2lkUkxBdWRpb1NvdXJjZSA9IEJBQllMT04uU2NlbmVNYW5hZ2VyLkZpbmRTY3JpcHRDb21wb25lbnQodGhpcy5iYWNrTGVmdFdoZWVsTWVzaCwgXCJCQUJZTE9OLkF1ZGlvU291cmNlXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuX3NraWRSTEF1ZGlvU291cmNlID09IG51bGwpIEJBQllMT04uVG9vbHMuV2FybihcIk5vIHJlYXIgbGVmdCBza2lkIGF1ZGlvIHNvdXJjZSBtYW5hZ2VyIGZvdW5kIGZvcjogXCIgKyB0aGlzLnRyYW5zZm9ybS5uYW1lKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5CQUNLX1JJR0hUID49IDAgJiYgYmFja1JpZ2h0V2hlZWxOYW1lICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5tX2JhY2tSaWdodFdoZWVsID0gdGhpcy5yYXljYXN0VmVoaWNsZS5nZXRXaGVlbEluZm8odGhpcy5CQUNLX1JJR0hUKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMud2hlZWxSYWRpdXMgPD0gMCAmJiB0aGlzLm1fYmFja1JpZ2h0V2hlZWwgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy53aGVlbFJhZGl1cyA9IHRoaXMubV9iYWNrUmlnaHRXaGVlbC5nZXRfbV93aGVlbHNSYWRpdXMoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmJhY2tSaWdodFdoZWVsTWVzaCA9IHRoaXMuZ2V0Q2hpbGRUcmFuc2Zvcm0oYmFja1JpZ2h0V2hlZWxOYW1lLCBCQUJZTE9OLlNlYXJjaFR5cGUuU3RhcnRzV2l0aCwgZmFsc2UpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5iYWNrUmlnaHRXaGVlbE1lc2ggIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5yYXljYXN0VmVoaWNsZS5zZXRXaGVlbFRyYW5zZm9ybU1lc2godGhpcy5CQUNLX1JJR0hULCB0aGlzLmJhY2tSaWdodFdoZWVsTWVzaCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLl9za2lkUlJBdWRpb1NvdXJjZSA9IEJBQllMT04uU2NlbmVNYW5hZ2VyLkZpbmRTY3JpcHRDb21wb25lbnQodGhpcy5iYWNrUmlnaHRXaGVlbE1lc2gsIFwiQkFCWUxPTi5BdWRpb1NvdXJjZVwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLl9za2lkUlJBdWRpb1NvdXJjZSA9PSBudWxsKSBCQUJZTE9OLlRvb2xzLldhcm4oXCJObyByZWFyIHJpZ2h0IHNraWQgYXVkaW8gc291cmNlIG1hbmFnZXIgZm91bmQgZm9yOiBcIiArIHRoaXMudHJhbnNmb3JtLm5hbWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBCQUJZTE9OLlRvb2xzLldhcm4oXCJJbnZhbGlkIHZlaGljbGUgY29udHJvbGxlciB3aGVlbCBjb3VudCBpbmZvIGZvcjogXCIgKyB0aGlzLnRyYW5zZm9ybS5uYW1lKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIEJBQllMT04uVG9vbHMuV2FybihcIkZhaWxlZCB0byBjcmVhdGUgdmVoaWNsZSBjb250cm9sbGVyIGZvcjogXCIgKyB0aGlzLnRyYW5zZm9ybS5uYW1lKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIEJBQllMT04uVG9vbHMuV2FybihcIk5vIHdoZWVsIGNvbGxpZGVyIGluZm9ybWF0aW9uIGZvdW5kIGZvcjogXCIgKyB0aGlzLnRyYW5zZm9ybS5uYW1lKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIEJBQllMT04uVG9vbHMuV2FybihcIkZhaWxlZCB0byBnZXQgcmlnaWRib2R5IGNvbXBvbmVudDogXCIgKyB0aGlzLnRyYW5zZm9ybS5uYW1lKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHByaXZhdGUgbV9iYWNrTGVmdFdoZWVsU2tpZDpudW1iZXIgPSAtMTtcbiAgICAgICAgcHJpdmF0ZSBtX2JhY2tSaWdodFdoZWVsU2tpZDpudW1iZXIgPSAtMTtcbiAgICAgICAgcHJpdmF0ZSBtX3ZlbG9jaXR5T2Zmc2V0OkJBQllMT04uVmVjdG9yMyA9IG5ldyBCQUJZTE9OLlZlY3RvcjMoMCwwLDApO1xuICAgICAgICBwcm90ZWN0ZWQgdXBkYXRlVmVoaWNsZVN0YXRlKCk6IHZvaWQge1xuICAgICAgICAgICAgY29uc3QgZGVsdGFUaW1lID0gdGhpcy5nZXREZWx0YVNlY29uZHMoKTtcbiAgICAgICAgICAgIGlmICh0aGlzLnNoaWZ0RGVsYXkgPiAwKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5zaGlmdERlbGF5IC09IGRlbHRhVGltZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0aGlzLnNoaWZ0RGVsYXkgPD0gMCkge1xuICAgICAgICAgICAgICAgIHRoaXMuc2hpZnREZWxheSA9IDA7XG4gICAgICAgICAgICAgICAgdGhpcy5zaGlmdGluZ0dlYXJzID0gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodGhpcy5fcmlnaWRib2R5ICE9IG51bGwgJiYgdGhpcy5yYXljYXN0VmVoaWNsZSAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5mb3J3YXJkU3BlZWQgPSB0aGlzLnJheWNhc3RWZWhpY2xlLmdldFJhd0N1cnJlbnRTcGVlZEtwaCgpO1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLmZvcndhcmRTcGVlZCA8IDAuMikgdGhpcy5mb3J3YXJkU3BlZWQgPSAwO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIHRoaXMuYWJzb2x1dGVTcGVlZCA9IHRoaXMucmF5Y2FzdFZlaGljbGUuZ2V0QWJzQ3VycmVudFNwZWVkS3BoKCk7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuYWJzb2x1dGVTcGVlZCA8IDAuMikgdGhpcy5hYnNvbHV0ZVNwZWVkID0gMDtcbiAgICAgICAgICAgICAgICB0aGlzLmFtZXJpY2FuU3BlZWQgPSAodGhpcy5hYnNvbHV0ZVNwZWVkICogQkFCWUxPTi5TeXN0ZW0uS3BoMk1waCk7XG4gICAgICAgICAgICAgICAgdGhpcy5ub3JtYWxpemVkU3BlZWQgPSBCQUJZTE9OLlNjYWxhci5DbGFtcCgodGhpcy5hYnNvbHV0ZVNwZWVkIC8gdGhpcy50b3BFbmdpbmVTcGVlZCkpO1xuXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuZ2VhckJveFNoaWZ0UmF0aW9zICE9IG51bGwgJiYgdGhpcy5nZWFySW5kZXggPj0gMCAmJiB0aGlzLmdlYXJJbmRleCA8IHRoaXMuZ2V0R2VhclNoaWZ0UmF0aW9Db3VudCgpKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IG1pbmltdW1EZWx0YSA9IE1hdGgubWluKE1hdGgubWF4KGRlbHRhVGltZSwgMSAvIDIwMCksIDEpO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCB3aGVlbERpYW1ldGVyOm51bWJlciA9ICh0aGlzLndoZWVsUmFkaXVzICogMiAqIEJBQllMT04uU3lzdGVtLk1ldGVyMkluY2gpO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBmaW5hbEdlYXJSYXRpbzpudW1iZXIgPSAodGhpcy5nZWFyQm94U2hpZnRSYXRpb3NbdGhpcy5nZWFySW5kZXhdICogdGhpcy5kaWZmZXJlbnRpYWxSYXRpbyAqIHRoaXMudHJhbnNtaXNzaW9uUmF0aW8pO1xuXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZW5naW5lUlBNID0gKHRoaXMuYW1lcmljYW5TcGVlZCAqIGZpbmFsR2VhclJhdGlvICogMzM2KSAvIHdoZWVsRGlhbWV0ZXIgKyAxMDAwO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmNsdXRjaFNsaXAgPSBCQUJZTE9OLlV0aWxpdGllcy5MZXJwQ2xhbXAodGhpcy5jbHV0Y2hTbGlwLCAwLCAxIC0gTWF0aC5wb3coMC4wMSwgbWluaW11bURlbHRhKSk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMubGVycGVkUlBNID0gQkFCWUxPTi5VdGlsaXRpZXMuTGVycENsYW1wKHRoaXMub2xkUlBNLCB0aGlzLmVuZ2luZVJQTSwgKDEgLSB0aGlzLmNsdXRjaFNsaXApKTtcblxuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5lbmdpbmVSUE0gPiB0aGlzLmdlYXJCb3hTaGlmdE5leHQgJiYgdGhpcy5nZWFySW5kZXggPiAxICYmIHRoaXMuY2x1dGNoU2xpcCA8IDAuMDUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLmdlYXJJbmRleCA8ICh0aGlzLmdldEdlYXJTaGlmdFJhdGlvQ291bnQoKSAtIDEpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5nZWFySW5kZXgrKzsgLy8gR2VhciBTaGlmdCBVcFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY2x1dGNoU2xpcCA9IDEuMDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm9sZFJQTSA9IHRoaXMuZW5naW5lUlBNO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2hpZnREZWxheSA9IHRoaXMuZ2VhckJveFNoaWZ0RGVsYXk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zaGlmdGluZ0dlYXJzID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmICh0aGlzLmVuZ2luZVJQTSA8IHRoaXMuZ2VhckJveFNoaWZ0RG93biAmJiB0aGlzLmdlYXJJbmRleCA+IDIgJiYgdGhpcy5jbHV0Y2hTbGlwIDwgMC4wNSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5nZWFySW5kZXgtLTsgLy8gR2VhciBTaGlmdCBEb3duXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNsdXRjaFNsaXAgPSAxLjA7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm9sZFJQTSA9IHRoaXMuZW5naW5lUlBNO1xuICAgICAgICAgICAgICAgICAgICAgICAgLy90aGlzLnNoaWZ0RGVsYXkgPSAodGhpcy5nZWFyQm94U2hpZnREZWxheSAqIDAuNSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAvL3RoaXMuc2hpZnRpbmdHZWFycyA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBBY2NvdW50IGZvciBmdXJ0aGVyIG1vdmVtZW50IHNpbmNlIHRoZSBsYXN0IHdoZWVsIHVwZGF0ZVxuICAgICAgICAgICAgY29uc3QgdmVsb2NpdHlTY2FsZTpudW1iZXIgPSBTa2lkbWFya01hbmFnZXIuR2V0VmVsb2NpdHlTY2FsZSgpO1xuICAgICAgICAgICAgaWYgKHZlbG9jaXR5U2NhbGUgPiAwLjAgJiYgdGhpcy5fcmlnaWRib2R5ICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICB0aGlzLm1fdmVsb2NpdHlPZmZzZXQuY29weUZyb20odGhpcy5fcmlnaWRib2R5LmdldExpbmVhclZlbG9jaXR5KCkpO1xuICAgICAgICAgICAgICAgIHRoaXMubV92ZWxvY2l0eU9mZnNldC5zY2FsZUluUGxhY2UodmVsb2NpdHlTY2FsZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBVcGRhdGUgV2hlZWwgU2tpZGRpbmcgSW5mb1xuICAgICAgICAgICAgbGV0IHNraWRfUkwgPSAwLCBza2lkX1JSICA9IDA7XG4gICAgICAgICAgICBjb25zdCBza2lkVGhyZWFzaG9sZDpudW1iZXIgPSAwLjY1O1xuICAgICAgICAgICAgaWYgKHRoaXMubV9iYWNrTGVmdFdoZWVsICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICBza2lkX1JMID0gQkFCWUxPTi5TY2FsYXIuQ2xhbXAoKDEgLSB0aGlzLm1fYmFja0xlZnRXaGVlbC5nZXRfbV9za2lkSW5mbygpKSk7XG4gICAgICAgICAgICAgICAgaWYgKHNraWRfUkwgPCBza2lkVGhyZWFzaG9sZCkgc2tpZF9STCA9IDA7XG4gICAgICAgICAgICAgICAgaWYgKHNraWRfUkwgPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGNvbnRhY3RQb2ludFJMOmFueSA9IHRoaXMubV9iYWNrTGVmdFdoZWVsLmdldF9tX3JheWNhc3RJbmZvKCkuZ2V0X21fY29udGFjdFBvaW50V1MoKTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgY29udGFjdE5vcm1hbFJMOmFueSA9IHRoaXMubV9iYWNrTGVmdFdoZWVsLmdldF9tX3JheWNhc3RJbmZvKCkuZ2V0X21fY29udGFjdE5vcm1hbFdTKCk7XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBjb25zdCBza2lkUG9zUkw6QkFCWUxPTi5WZWN0b3IzID0gbmV3IEJBQllMT04uVmVjdG9yMyhjb250YWN0UG9pbnRSTC54KCksIGNvbnRhY3RQb2ludFJMLnkoKSwgY29udGFjdFBvaW50UkwueigpKTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3Qgc2tpZE5vcm1STDpCQUJZTE9OLlZlY3RvcjMgPSBuZXcgQkFCWUxPTi5WZWN0b3IzKGNvbnRhY3ROb3JtYWxSTC54KCksIGNvbnRhY3ROb3JtYWxSTC55KCksIGNvbnRhY3ROb3JtYWxSTC56KCkpO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBza2lkU2NhbGVSTDpudW1iZXIgPSBCQUJZTE9OLlNjYWxhci5Ob3JtYWxpemUoc2tpZF9STCwgc2tpZFRocmVhc2hvbGQsIDEuMCk7XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKHZlbG9jaXR5U2NhbGUgPiAwLjApIHNraWRQb3NSTC5hZGRJblBsYWNlKHRoaXMubV92ZWxvY2l0eU9mZnNldCk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMubV9iYWNrTGVmdFdoZWVsU2tpZCA9IFNraWRtYXJrTWFuYWdlci5BZGRTa2lkbWFya1NlZ21lbnQoc2tpZFBvc1JMLCBza2lkTm9ybVJMLCBza2lkU2NhbGVSTCwgdGhpcy5tX2JhY2tMZWZ0V2hlZWxTa2lkKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm1fYmFja0xlZnRXaGVlbFNraWQgPSAtMTsgICAgXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHRoaXMubV9iYWNrUmlnaHRXaGVlbCAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgc2tpZF9SUiA9IEJBQllMT04uU2NhbGFyLkNsYW1wKCgxIC0gdGhpcy5tX2JhY2tSaWdodFdoZWVsLmdldF9tX3NraWRJbmZvKCkpKTtcbiAgICAgICAgICAgICAgICBpZiAoc2tpZF9SUiA8IHNraWRUaHJlYXNob2xkKSBza2lkX1JSID0gMDtcbiAgICAgICAgICAgICAgICBpZiAoc2tpZF9SUiA+IDApIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgY29udGFjdFBvaW50UlI6YW55ID0gdGhpcy5tX2JhY2tSaWdodFdoZWVsLmdldF9tX3JheWNhc3RJbmZvKCkuZ2V0X21fY29udGFjdFBvaW50V1MoKTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgY29udGFjdE5vcm1hbFJSOmFueSA9IHRoaXMubV9iYWNrUmlnaHRXaGVlbC5nZXRfbV9yYXljYXN0SW5mbygpLmdldF9tX2NvbnRhY3ROb3JtYWxXUygpO1xuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgY29uc3Qgc2tpZFBvc1JSOkJBQllMT04uVmVjdG9yMyA9IG5ldyBCQUJZTE9OLlZlY3RvcjMoY29udGFjdFBvaW50UlIueCgpLCBjb250YWN0UG9pbnRSUi55KCksIGNvbnRhY3RQb2ludFJSLnooKSk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHNraWROb3JtUlI6QkFCWUxPTi5WZWN0b3IzID0gbmV3IEJBQllMT04uVmVjdG9yMyhjb250YWN0Tm9ybWFsUlIueCgpLCBjb250YWN0Tm9ybWFsUlIueSgpLCBjb250YWN0Tm9ybWFsUlIueigpKTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3Qgc2tpZFNjYWxlUlI6bnVtYmVyID0gQkFCWUxPTi5TY2FsYXIuTm9ybWFsaXplKHNraWRfUlIsIHNraWRUaHJlYXNob2xkLCAxLjApO1xuXG4gICAgICAgICAgICAgICAgICAgIGlmICh2ZWxvY2l0eVNjYWxlID4gMC4wKSBza2lkUG9zUlIuYWRkSW5QbGFjZSh0aGlzLm1fdmVsb2NpdHlPZmZzZXQpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm1fYmFja1JpZ2h0V2hlZWxTa2lkID0gU2tpZG1hcmtNYW5hZ2VyLkFkZFNraWRtYXJrU2VnbWVudChza2lkUG9zUlIsIHNraWROb3JtUlIsIHNraWRTY2FsZVJSLCB0aGlzLm1fYmFja1JpZ2h0V2hlZWxTa2lkKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm1fYmFja1JpZ2h0V2hlZWxTa2lkID0gLTE7ICAgIFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gVXBkYXRlIEVuZ2luZSBBbmQgV2hlZWwgUGl0Y2hcbiAgICAgICAgICAgIGlmICh0aGlzLl9lbmdpbmVBdWRpb1NvdXJjZSAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgZW5naW5lU291bmRDbGlwOkJBQllMT04uU291bmQgPSB0aGlzLl9lbmdpbmVBdWRpb1NvdXJjZS5nZXRTb3VuZENsaXAoKTtcbiAgICAgICAgICAgICAgICBpZiAoZW5naW5lU291bmRDbGlwICE9IG51bGwpIGVuZ2luZVNvdW5kQ2xpcC5zZXRQbGF5YmFja1JhdGUodGhpcy5nZXRDdXJyZW50RW5naW5lUGl0Y2goKSAqIDAuNzUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHRoaXMuX3NraWRSTEF1ZGlvU291cmNlICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBza2lkUkxTb3VuZENsaXA6QkFCWUxPTi5Tb3VuZCA9IHRoaXMuX3NraWRSTEF1ZGlvU291cmNlLmdldFNvdW5kQ2xpcCgpO1xuICAgICAgICAgICAgICAgIGlmIChza2lkUkxTb3VuZENsaXAgIT0gbnVsbCkgc2tpZFJMU291bmRDbGlwLnNldFBsYXliYWNrUmF0ZShza2lkX1JMKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0aGlzLl9za2lkUlJBdWRpb1NvdXJjZSAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgY29uc3Qgc2tpZFJSU291bmRDbGlwOkJBQllMT04uU291bmQgPSB0aGlzLl9za2lkUlJBdWRpb1NvdXJjZS5nZXRTb3VuZENsaXAoKTtcbiAgICAgICAgICAgICAgICBpZiAoc2tpZFJSU291bmRDbGlwICE9IG51bGwpIHNraWRSUlNvdW5kQ2xpcC5zZXRQbGF5YmFja1JhdGUoc2tpZF9SUik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvL2NvbnN0IG1zZzpzdHJpbmcgPSAoXCJNUEg6IFwiICsgdGhpcy5hbWVyaWNhblNwZWVkLnRvRml4ZWQoMSkgKyBcIiAtIFJMOiBcIiArIHNraWRfUkwudG9GaXhlZCgyKSArIFwiIC0gUlI6IFwiICsgc2tpZF9SUi50b0ZpeGVkKDIpKTtcbiAgICAgICAgICAgIC8vQkFCWUxPTi5VdGlsaXRpZXMuUHJpbnRUb1NjcmVlbihtc2csIFwiIzAwODAwMFwiKTtcbiAgICAgICAgfVxuICAgICAgICBwcm90ZWN0ZWQgZGVzdHJveVZlaGljbGVTdGF0ZSgpOiB2b2lkIHtcbiAgICAgICAgICAgIHRoaXMuX3JpZ2lkYm9keSA9IG51bGw7XG4gICAgICAgICAgICB0aGlzLl9lbmdpbmVBdWRpb1NvdXJjZSA9IG51bGw7XG4gICAgICAgICAgICB0aGlzLl9za2lkUkxBdWRpb1NvdXJjZSA9IG51bGw7XG4gICAgICAgICAgICB0aGlzLl9za2lkUlJBdWRpb1NvdXJjZSA9IG51bGw7XG4gICAgICAgICAgICBpZiAodGhpcy5tX2Zyb250TGVmdFdoZWVsICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICBBbW1vLmRlc3Ryb3kodGhpcy5tX2Zyb250TGVmdFdoZWVsKTsgLy8gPz8/XG4gICAgICAgICAgICAgICAgdGhpcy5tX2Zyb250TGVmdFdoZWVsID0gbnVsbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0aGlzLm1fZnJvbnRSaWdodFdoZWVsICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICBBbW1vLmRlc3Ryb3kodGhpcy5tX2Zyb250UmlnaHRXaGVlbCk7IC8vID8/P1xuICAgICAgICAgICAgICAgIHRoaXMubV9mcm9udFJpZ2h0V2hlZWwgPSBudWxsO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHRoaXMubV9iYWNrTGVmdFdoZWVsICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICBBbW1vLmRlc3Ryb3kodGhpcy5tX2JhY2tMZWZ0V2hlZWwpOyAvLyA/Pz9cbiAgICAgICAgICAgICAgICB0aGlzLm1fYmFja0xlZnRXaGVlbCA9IG51bGw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodGhpcy5tX2JhY2tSaWdodFdoZWVsICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICBBbW1vLmRlc3Ryb3kodGhpcy5tX2JhY2tSaWdodFdoZWVsKTsgLy8gPz8/XG4gICAgICAgICAgICAgICAgdGhpcy5tX2JhY2tSaWdodFdoZWVsID0gbnVsbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMubV9waHlzaWNzV29ybGQgPSBudWxsO1xuICAgICAgICAgICAgdGhpcy5yYXljYXN0VmVoaWNsZSA9IG51bGw7XG4gICAgICAgICAgICB0aGlzLmZyb250TGVmdFdoZWVsTWVzaCA9IG51bGw7XG4gICAgICAgICAgICB0aGlzLmZyb250UmlnaHRXaGVlbE1lc2ggPSBudWxsO1xuICAgICAgICAgICAgdGhpcy5iYWNrTGVmdFdoZWVsTWVzaCA9IG51bGw7XG4gICAgICAgICAgICB0aGlzLmJhY2tSaWdodFdoZWVsTWVzaCA9IG51bGw7XG4gICAgICAgICAgICB0aGlzLmZyb250TGVmdFdoZWVsVHJhbnMgPSBudWxsO1xuICAgICAgICAgICAgdGhpcy5mcm9udFJpZ2h0V2hlZWxUcmFucyA9IG51bGw7XG4gICAgICAgICAgICB0aGlzLmJhY2tMZWZ0V2hlZWxUcmFucyA9IG51bGw7XG4gICAgICAgICAgICB0aGlzLmJhY2tSaWdodFdoZWVsVHJhbnMgPSBudWxsO1xuICAgICAgICAgICAgdGhpcy5mcm9udExlZnRXaGVlbENvbGxpZGVyID0gbnVsbDtcbiAgICAgICAgICAgIHRoaXMuZnJvbnRSaWdodFdoZWVsQ29sbGlkZXIgPSBudWxsO1xuICAgICAgICAgICAgdGhpcy5iYWNrTGVmdFdoZWVsQ29sbGlkZXIgPSBudWxsO1xuICAgICAgICAgICAgdGhpcy5iYWNrUmlnaHRXaGVlbENvbGxpZGVyID0gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuICAgICAgICAvLyBQdWJsaWMgVmVoaWNsZSBDb250cm9sbGVyIE1vdmVtZW50IEZ1bmN0aW9ucyAgIC8vXG4gICAgICAgIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cblxuICAgICAgICBwcml2YXRlIHN0ZWVyaW5nSW5jcmVtZW50Om51bWJlciA9IDA7XG4gICAgICAgIHByaXZhdGUgYWxsb3dlZFR1cm5pbmdBbmdsZTpudW1iZXIgPSAwO1xuICAgICAgICAvKiogRHJpdmVzIHRoZSByYXljYXN0IHZlaGljbGUgd2l0aCB0aGUgc3BlY2ZpZWQgbW92ZW1lbnQgYW5kIGhhbmQgYnJha2luZyBwcm9wZXJ0aWVzLiAqL1xuICAgICAgICBwdWJsaWMgZHJpdmUoZm9yd2FyZDpudW1iZXIsIHR1cm46bnVtYmVyLCBicmFraW5nOmJvb2xlYW4gPSBmYWxzZSk6dm9pZCB7XG4gICAgICAgICAgICBpZiAodGhpcy5fcmlnaWRib2R5ID09IG51bGwgfHwgdGhpcy5yYXljYXN0VmVoaWNsZSA9PSBudWxsKSByZXR1cm47XG4gICAgICAgICAgICBpZiAodGhpcy5GUk9OVF9MRUZUID49IDAgJiYgdGhpcy5GUk9OVF9SSUdIVCA+PSAwICYmIHRoaXMuQkFDS19MRUZUID49IDAgJiYgdGhpcy5CQUNLX1JJR0hUID49IDApIHtcbiAgICAgICAgICAgICAgICBjb25zdCBkZWx0YVRpbWU6bnVtYmVyID0gdGhpcy5nZXREZWx0YVNlY29uZHMoKTtcbiAgICAgICAgICAgICAgICB0aGlzLmJyYWtpbmdGb3JjZSA9IDA7IHRoaXMuZW5naW5lRm9yY2UgPSAwO1xuICAgICAgICAgICAgICAgIC8vIC4uXG4gICAgICAgICAgICAgICAgLy8gVXBkYXRlIEdlYXJpbmcgQm94IChUT0RPOiBGaXggU3RhcnQgR2VhciBFbmdpbmUgU291bmQpXG4gICAgICAgICAgICAgICAgLy8gLi5cbiAgICAgICAgICAgICAgICBsZXQgdGhyb3R0bGVBbW91bnQ6bnVtYmVyID0gMDtcbiAgICAgICAgICAgICAgICBsZXQgYnJha2luZ0Ftb3VudDpudW1iZXIgPSAwO1xuICAgICAgICAgICAgICAgIGlmIChmb3J3YXJkID4gMC4xKSB7IC8vIEZvcndhcmRcbiAgICAgICAgICAgICAgICAgICAgYnJha2luZ0Ftb3VudCA9IDA7XG4gICAgICAgICAgICAgICAgICAgIHRocm90dGxlQW1vdW50ID0gTWF0aC5hYnMoZm9yd2FyZCk7XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoZm9yd2FyZCA8IDAuMSkgeyAvLyBSZXZlcnNlXG4gICAgICAgICAgICAgICAgICAgIHRocm90dGxlQW1vdW50ID0gMDtcbiAgICAgICAgICAgICAgICAgICAgYnJha2luZ0Ftb3VudCA9IE1hdGguYWJzKGZvcndhcmQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAodGhpcy5hYnNvbHV0ZVNwZWVkID49IDAuMikge1xuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5nZWFySW5kZXggPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBUT0RPOiBHZXQgRW5naW5lIEN1cnZlIFBvd2VyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBUT0RPOiBHZXQgRW5naW5lIEN1cnZlIFBvd2VyXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBpZiAodGhyb3R0bGVBbW91bnQgPiAwLjEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZ2VhckluZGV4ID0gMjsgLy8gU2V0IEZpcnN0IEdlYXJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChicmFraW5nQW1vdW50ID4gMC4xKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmdlYXJJbmRleCA9IDA7IC8vIFNldCBSZXZlcnNlIEdlYXJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZ2VhckluZGV4ID0gMTsgLy8gU2V0IE5ldXRyYWwgR2VhclxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8vIC4uXG4gICAgICAgICAgICAgICAgLy8gVXBkYXRlIEVuZ2luZSBGb3JjZXNcbiAgICAgICAgICAgICAgICAvLyAuLlxuICAgICAgICAgICAgICAgIGNvbnN0IGdlYXJTaGlmdFNjYWxlOm51bWJlciA9ICh0aGlzLmdlYXJCb3hTaGlmdFNjYWxlcyAhPSBudWxsICYmIHRoaXMuZ2VhckJveFNoaWZ0U2NhbGVzLmxlbmd0aCA+IHRoaXMuZ2VhckluZGV4KSA/IHRoaXMuZ2VhckJveFNoaWZ0U2NhbGVzW3RoaXMuZ2VhckluZGV4XSA6IDEuMDtcbiAgICAgICAgICAgICAgICBjb25zdCBnZWFyU2hpZnRSYXRpbzpudW1iZXIgPSAodGhpcy5nZWFyQm94U2hpZnRSYXRpb3MgIT0gbnVsbCAmJiB0aGlzLmdlYXJCb3hTaGlmdFJhdGlvcy5sZW5ndGggPiB0aGlzLmdlYXJJbmRleCkgPyB0aGlzLmdlYXJCb3hTaGlmdFJhdGlvc1t0aGlzLmdlYXJJbmRleF0gOiAxLjA7XG4gICAgICAgICAgICAgICAgY29uc3QgZmluYWxHZWFyUmF0aW86bnVtYmVyID0gKGdlYXJTaGlmdFJhdGlvICogdGhpcy5kaWZmZXJlbnRpYWxSYXRpbyAqIHRoaXMudHJhbnNtaXNzaW9uUmF0aW8pO1xuICAgICAgICAgICAgICAgIGNvbnN0IGVuZ2luZU1vdG9yVG9ycXVlOm51bWJlciA9IHRoaXMuZ2V0VmVoaWNsZUVuZ2luZVRvcnF1ZSh0aGlzLmVuZ2luZVJQTSkgKiBNYXRoLmFicyhmb3J3YXJkKSAqIGdlYXJTaGlmdFNjYWxlO1xuICAgICAgICAgICAgICAgIGNvbnN0IGFsbG93ZWRFbmdpbmVQb3dlcjpudW1iZXIgPSAoZW5naW5lTW90b3JUb3JxdWUgKiBmaW5hbEdlYXJSYXRpbyk7XG4gICAgICAgICAgICAgICAgaWYgKGZvcndhcmQgPiAwLjEpIHsgLy8gRm9yd2FyZFxuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5mb3J3YXJkU3BlZWQgPCAtMSkgdGhpcy5icmFraW5nRm9yY2UgPSB0aGlzLm1heEJyYWtpbmdGb3JjZTtcbiAgICAgICAgICAgICAgICAgICAgZWxzZSB0aGlzLmVuZ2luZUZvcmNlID0gYWxsb3dlZEVuZ2luZVBvd2VyO1xuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoZm9yd2FyZCA8IC0wLjEpIHsgLy8gUmV2ZXJzZVxuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5mb3J3YXJkU3BlZWQgPiAxKSB0aGlzLmJyYWtpbmdGb3JjZSA9IHRoaXMubWF4QnJha2luZ0ZvcmNlO1xuICAgICAgICAgICAgICAgICAgICBlbHNlIHRoaXMuZW5naW5lRm9yY2UgPSAtKGFsbG93ZWRFbmdpbmVQb3dlciAqIHRoaXMubWF4UmV2ZXJzZVNwZWVkKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmVuZ2luZUZvcmNlID0gMDsgdGhpcy5icmFraW5nRm9yY2UgPSAxMDsgLy8gU3RhdGljXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICh0aGlzLnNoaWZ0aW5nR2VhcnMgPT09IHRydWUgfHwgdGhpcy5hbWVyaWNhblNwZWVkID4gdGhpcy50b3BFbmdpbmVTcGVlZCkgdGhpcy5lbmdpbmVGb3JjZSA9IDA7XG4gICAgICAgICAgICAgICAgLy8gLi5cbiAgICAgICAgICAgICAgICAvLyBVcGRhdGUgVHVybmluZyBBbmdsZVxuICAgICAgICAgICAgICAgIC8vIC4uXG4gICAgICAgICAgICAgICAgdGhpcy5zdGVlcmluZ0luY3JlbWVudCA9IEJBQllMT04uU2NhbGFyLkxlcnAodGhpcy5sb3dTcGVlZEluY3JlbWVudCwgdGhpcy5oaWdoU3BlZWRJbmNyZW1lbnQsIHRoaXMubm9ybWFsaXplZFNwZWVkKTtcbiAgICAgICAgICAgICAgICB0aGlzLmFsbG93ZWRUdXJuaW5nQW5nbGUgPSBCQUJZTE9OLlNjYWxhci5MZXJwKHRoaXMubG93U3BlZWRBbmdsZSwgdGhpcy5oaWdoU3BlZWRBbmdsZSwgdGhpcy5ub3JtYWxpemVkU3BlZWQpO1xuICAgICAgICAgICAgICAgIGlmICh0dXJuID4gMCkgeyAvLyBSaWdodFxuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy52ZWhpY2xlU3RlZXIgPCB0aGlzLmFsbG93ZWRUdXJuaW5nQW5nbGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMudmVoaWNsZVN0ZWVyICs9ICh0aGlzLnN0ZWVyaW5nSW5jcmVtZW50KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAodHVybiA8IDApIHsgLy8gTGVmdFxuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy52ZWhpY2xlU3RlZXIgPiAtdGhpcy5hbGxvd2VkVHVybmluZ0FuZ2xlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnZlaGljbGVTdGVlciAtPSAodGhpcy5zdGVlcmluZ0luY3JlbWVudCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy52ZWhpY2xlU3RlZXIgPCAtdGhpcy5zdGVlcmluZ0luY3JlbWVudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy52ZWhpY2xlU3RlZXIgKz0gdGhpcy5zdGVlcmluZ0luY3JlbWVudDtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLnZlaGljbGVTdGVlciA+IHRoaXMuc3RlZXJpbmdJbmNyZW1lbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnZlaGljbGVTdGVlciAtPSB0aGlzLnN0ZWVyaW5nSW5jcmVtZW50O1xuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnZlaGljbGVTdGVlciA9IDA7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy8gLi5cbiAgICAgICAgICAgICAgICAvLyBVcGRhdGUgVmVoaWNsZSBDb250cm9sc1xuICAgICAgICAgICAgICAgIC8vIC4uXG4gICAgICAgICAgICAgICAgaWYgKGJyYWtpbmcgPT09IHRydWUgJiYgdGhpcy5oYW5kQnJha2luZ0ZvcmNlID4gMCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5hbWVyaWNhblNwZWVkID4gMjApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGZyb250TG9ja0ZyaWN0aW9uOm51bWJlciA9ICh0aGlzLndoZWVsTG9ja0ZyaWN0aW9uID4gMC4wMSkgPyAodGhpcy53aGVlbExvY2tGcmljdGlvbiAtIDAuMDEpIDogdGhpcy53aGVlbExvY2tGcmljdGlvbjtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLm1fZnJvbnRMZWZ0V2hlZWwgIT0gbnVsbCAmJiB0aGlzLm1fZnJvbnRMZWZ0V2hlZWwuZGVmYXVsdEZyaWN0aW9uICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm1fZnJvbnRMZWZ0V2hlZWwuc2V0X21fZnJpY3Rpb25TbGlwKHRoaXMubV9mcm9udExlZnRXaGVlbC5kZWZhdWx0RnJpY3Rpb24gKiBmcm9udExvY2tGcmljdGlvbik7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5tX2Zyb250UmlnaHRXaGVlbCAhPSBudWxsICYmIHRoaXMubV9mcm9udFJpZ2h0V2hlZWwuZGVmYXVsdEZyaWN0aW9uICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm1fZnJvbnRSaWdodFdoZWVsLnNldF9tX2ZyaWN0aW9uU2xpcCh0aGlzLm1fZnJvbnRMZWZ0V2hlZWwuZGVmYXVsdEZyaWN0aW9uICogZnJvbnRMb2NrRnJpY3Rpb24pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMubV9iYWNrTGVmdFdoZWVsICE9IG51bGwgJiYgdGhpcy5tX2JhY2tMZWZ0V2hlZWwuZGVmYXVsdEZyaWN0aW9uICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm1fYmFja0xlZnRXaGVlbC5zZXRfbV9mcmljdGlvblNsaXAodGhpcy5tX2Zyb250TGVmdFdoZWVsLmRlZmF1bHRGcmljdGlvbiAqIHRoaXMud2hlZWxMb2NrRnJpY3Rpb24pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMubV9iYWNrUmlnaHRXaGVlbCAhPSBudWxsICYmIHRoaXMubV9iYWNrUmlnaHRXaGVlbC5kZWZhdWx0RnJpY3Rpb24gIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubV9iYWNrUmlnaHRXaGVlbC5zZXRfbV9mcmljdGlvblNsaXAodGhpcy5tX2Zyb250TGVmdFdoZWVsLmRlZmF1bHRGcmljdGlvbiAqIHRoaXMud2hlZWxMb2NrRnJpY3Rpb24pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlQ3VycmVudEZyaWN0aW9uU2xpcChkZWx0YVRpbWUgKiB0aGlzLmZyaWN0aW9uU2xpcFNwZWVkKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMucmF5Y2FzdFZlaGljbGUubG9ja2VkV2hlZWxJbmRleGVzID09IG51bGwpIHRoaXMucmF5Y2FzdFZlaGljbGUubG9ja2VkV2hlZWxJbmRleGVzID0gW3RoaXMuQkFDS19MRUZULCB0aGlzLkJBQ0tfUklHSFRdO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnJheWNhc3RWZWhpY2xlLnNldFN0ZWVyaW5nQW5nbGUodGhpcy52ZWhpY2xlU3RlZXIsIHRoaXMuRlJPTlRfTEVGVCk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucmF5Y2FzdFZlaGljbGUuc2V0U3RlZXJpbmdBbmdsZSh0aGlzLnZlaGljbGVTdGVlciwgdGhpcy5GUk9OVF9SSUdIVCk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucmF5Y2FzdFZlaGljbGUuc2V0RW5naW5lRm9yY2UoMCwgdGhpcy5GUk9OVF9MRUZUKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5yYXljYXN0VmVoaWNsZS5zZXRFbmdpbmVGb3JjZSgwLCB0aGlzLkZST05UX1JJR0hUKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5yYXljYXN0VmVoaWNsZS5zZXRFbmdpbmVGb3JjZSgwLCB0aGlzLkJBQ0tfTEVGVCk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucmF5Y2FzdFZlaGljbGUuc2V0RW5naW5lRm9yY2UoMCwgdGhpcy5CQUNLX1JJR0hUKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5yYXljYXN0VmVoaWNsZS5zZXRCcmFraW5nRm9yY2UoMCwgdGhpcy5GUk9OVF9MRUZUKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5yYXljYXN0VmVoaWNsZS5zZXRCcmFraW5nRm9yY2UoMCwgdGhpcy5GUk9OVF9SSUdIVCk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucmF5Y2FzdFZlaGljbGUuc2V0QnJha2luZ0ZvcmNlKHRoaXMuaGFuZEJyYWtpbmdGb3JjZSwgdGhpcy5CQUNLX0xFRlQpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnJheWNhc3RWZWhpY2xlLnNldEJyYWtpbmdGb3JjZSh0aGlzLmhhbmRCcmFraW5nRm9yY2UsIHRoaXMuQkFDS19SSUdIVCk7XG4gICAgICAgICAgICAgICAgICAgIC8vIC4uXG4gICAgICAgICAgICAgICAgICAgIC8vIFRPRE86IFN1cHBvcnQgQW5ndWxhciBSb3RhdGlvbiBCb29zdCAtID8/P1xuICAgICAgICAgICAgICAgICAgICAvLyAuLlxuICAgICAgICAgICAgICAgICAgICAvLyBsZXQgYW5ndWxhckJvb3N0RmFjdG9yOm51bWJlciA9IDA7IFxuICAgICAgICAgICAgICAgICAgICAvLyBpZiAoYW5ndWxhckJvb3N0RmFjdG9yICE9PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vICAgIGNvbnN0IGFuZ3VsYXJWZWxvY2l0eTpCQUJZTE9OLlZlY3RvcjMgPSB0aGlzLl9yaWdpZGJvZHkuZ2V0QW5ndWxhclZlbG9jaXR5KCk7XG4gICAgICAgICAgICAgICAgICAgIC8vICAgIGFuZ3VsYXJWZWxvY2l0eS55ICs9IChhbmd1bGFyQm9vc3RGYWN0b3IgKiB0aGlzLmRyaWZ0aW5nSW5mbHVlbmNlKTtcbiAgICAgICAgICAgICAgICAgICAgLy8gICAgdGhpcy5fcmlnaWRib2R5LnNldEFuZ3VsYXJWZWxvY2l0eShhbmd1bGFyVmVsb2NpdHkpO1xuICAgICAgICAgICAgICAgICAgICAvLyB9XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcblxuICAgICAgICAgICAgICAgICAgICAvL3RoaXMubV9mcm9udExlZnRXaGVlbC5zZXRfbV9mcmljdGlvblNsaXAoMCk7XG4gICAgICAgICAgICAgICAgICAgIC8vdGhpcy5tX2Zyb250UmlnaHRXaGVlbC5zZXRfbV9mcmljdGlvblNsaXAoMCk7XG4gICAgICAgICAgICAgICAgICAgIC8vdGhpcy5tX2JhY2tMZWZ0V2hlZWwuc2V0X21fZnJpY3Rpb25TbGlwKDAuMCk7XG4gICAgICAgICAgICAgICAgICAgIC8vdGhpcy5tX2JhY2tSaWdodFdoZWVsLnNldF9tX2ZyaWN0aW9uU2xpcCgwLjApO1xuXG4gICAgICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlQ3VycmVudEZyaWN0aW9uU2xpcChkZWx0YVRpbWUpO1xuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5yYXljYXN0VmVoaWNsZS5sb2NrZWRXaGVlbEluZGV4ZXMgIT0gbnVsbCkgdGhpcy5yYXljYXN0VmVoaWNsZS5sb2NrZWRXaGVlbEluZGV4ZXMgPSBudWxsO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnJheWNhc3RWZWhpY2xlLnNldFN0ZWVyaW5nQW5nbGUodGhpcy52ZWhpY2xlU3RlZXIsIHRoaXMuRlJPTlRfTEVGVCk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucmF5Y2FzdFZlaGljbGUuc2V0U3RlZXJpbmdBbmdsZSh0aGlzLnZlaGljbGVTdGVlciwgdGhpcy5GUk9OVF9SSUdIVCk7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLndoZWVsRHJpdmVUeXBlID09PSAxIHx8IHRoaXMud2hlZWxEcml2ZVR5cGUgPT09IDIpIHsgLy8gRlJPTlQgT1IgQUxMIFdIRUVMIERSSVZFXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnJheWNhc3RWZWhpY2xlLnNldEVuZ2luZUZvcmNlKHRoaXMuZW5naW5lRm9yY2UsIHRoaXMuRlJPTlRfTEVGVCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnJheWNhc3RWZWhpY2xlLnNldEVuZ2luZUZvcmNlKHRoaXMuZW5naW5lRm9yY2UsIHRoaXMuRlJPTlRfUklHSFQpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLndoZWVsRHJpdmVUeXBlID09PSAwIHx8IHRoaXMud2hlZWxEcml2ZVR5cGUgPT09IDIpIHsgLy8gUkVBUiBPUiBBTEwgV0hFRUwgRFJJVkVcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucmF5Y2FzdFZlaGljbGUuc2V0RW5naW5lRm9yY2UodGhpcy5lbmdpbmVGb3JjZSwgdGhpcy5CQUNLX0xFRlQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5yYXljYXN0VmVoaWNsZS5zZXRFbmdpbmVGb3JjZSh0aGlzLmVuZ2luZUZvcmNlLCB0aGlzLkJBQ0tfUklHSFQpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucmF5Y2FzdFZlaGljbGUuc2V0QnJha2luZ0ZvcmNlKHRoaXMuYnJha2luZ0ZvcmNlICogMC41LCB0aGlzLkZST05UX0xFRlQpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnJheWNhc3RWZWhpY2xlLnNldEJyYWtpbmdGb3JjZSh0aGlzLmJyYWtpbmdGb3JjZSAqIDAuNSwgdGhpcy5GUk9OVF9SSUdIVCk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucmF5Y2FzdFZlaGljbGUuc2V0QnJha2luZ0ZvcmNlKHRoaXMuYnJha2luZ0ZvcmNlLCB0aGlzLkJBQ0tfTEVGVCk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucmF5Y2FzdFZlaGljbGUuc2V0QnJha2luZ0ZvcmNlKHRoaXMuYnJha2luZ0ZvcmNlLCB0aGlzLkJBQ0tfUklHSFQpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIC8vIEFwcGx5IERvd253YXJkIFN0YWJsaXppbmcgRm9yY2VcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5zdGFiaWxpemluZ0ZvcmNlID4gMCkge1xuICAgICAgICAgICAgICAgICAgICBsZXQgc2xlbmd0aDpudW1iZXIgPSB0aGlzLl9yaWdpZGJvZHkuZ2V0TGluZWFyVmVsb2NpdHkoKS5sZW5ndGgoKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHNsZW5ndGggPCAxLjApIHNsZW5ndGggPSAxLjA7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGZvcmNlOm51bWJlciA9IHRoaXMuc3RhYmlsaXppbmdGb3JjZSAqIHNsZW5ndGg7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMudHJhbnNmb3JtLnVwLnNjYWxlVG9SZWYoLWZvcmNlLCB0aGlzLmRvd253YXJkRm9yY2UpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9yaWdpZGJvZHkuYXBwbHlDZW50cmFsRm9yY2UodGhpcy5kb3dud2FyZEZvcmNlKTtcbiAgICAgICAgICAgICAgICAgICAgLy8gVHJhY2UgRG93bndhcmQgRm9yY2VcbiAgICAgICAgICAgICAgICAgICAgLy8gY29uc3QgbXNnOnN0cmluZyA9IFwiRG93bndhcmQgRm9yY2U6IFwiICsgdGhpcy5kb3dud2FyZEZvcmNlLngudG9GaXhlZCgyKSArIFwiIHggXCIgKyB0aGlzLmRvd253YXJkRm9yY2UueS50b0ZpeGVkKDIpICsgXCIgeCBcIiArIHRoaXMuZG93bndhcmRGb3JjZS56LnRvRml4ZWQoMik7XG4gICAgICAgICAgICAgICAgICAgIC8vIEJBQllMT04uVXRpbGl0aWVzLlByaW50VG9TY3JlZW4obXNnLCBcIiMwMDgwMDBcIik7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgLy8gVHJhY2UgQ3VycmVudCBTcGVlZFxuICAgICAgICAgICAgICAgIC8vIGNvbnN0IG1zZzpzdHJpbmcgPSAoXCJTcGVlZDogXCIgKyB0aGlzLmFtZXJpY2FuU3BlZWQudG9GaXhlZCgxKSArIFwiIC0tPiBUdXJuIEFuZ2xlOiBcIiArIHRoaXMuYWxsb3dlZFR1cm5pbmdBbmdsZS50b0ZpeGVkKDQpICsgXCIgLS0+IFR1cm4gSW5jcmVtZW50OiBcIiArIHRoaXMuc3RlZXJpbmdJbmNyZW1lbnQudG9GaXhlZCg0KSk7XG4gICAgICAgICAgICAgICAgLy8gY29uc3QgbXNnOnN0cmluZyA9IChcIk1QSDogXCIgKyB0aGlzLmFtZXJpY2FuU3BlZWQudG9GaXhlZCgxKSArIFwiIC0tPiBHZWFyIEluZGV4OiBcIiArIHRoaXMuZ2VhckluZGV4LnRvRml4ZWQoMCkgKyBcIiAtLT4gRW5naW5lIFJQTTogXCIgKyB0aGlzLmVuZ2luZVJQTS50b0ZpeGVkKDApICsgXCIgLS0tPiBFbmdpbmUgUGl0Y2g6IFwiICsgdGhpcy5nZXRDdXJyZW50RW5naW5lUGl0Y2goKS50b0ZpeGVkKDIpICsgXCIgLS0tPiBDbHV0Y2ggU2xpcDogXCIgKyB0aGlzLmNsdXRjaFNsaXAudG9GaXhlZCg0KSArIFwiIC0tLT4gUmF3IEtQSDogXCIgKyB0aGlzLmFic29sdXRlU3BlZWQudG9GaXhlZCgxKSk7XG4gICAgICAgICAgICAgICAgLy8gY29uc3QgbXNnOnN0cmluZyA9IChcIkNhciBTcGVlZDogXCIgKyB0aGlzLmFtZXJpY2FuU3BlZWQudG9GaXhlZCgxKSArIFwiIC0tPiBHZWFyIEluZGV4OiBcIiArIHRoaXMuZ2VhckluZGV4LnRvRml4ZWQoMCkgKyBcIiAtLT4gRW5naW5lIFJQTTogXCIgKyB0aGlzLmVuZ2luZVJQTS50b0ZpeGVkKDApICsgXCIgLS0tPiBFbmdpbmUgVG9ydXFlOiBcIiArIGVuZ2luZU1vdG9yVG9ycXVlLnRvRml4ZWQoMikrIFwiIC0tLT4gRW5naW5lIFBvd2VyOiBcIiArIGFsbG93ZWRFbmdpbmVQb3dlci50b0ZpeGVkKDIpKTtcbiAgICAgICAgICAgICAgICAvLyBCQUJZTE9OLlV0aWxpdGllcy5QcmludFRvU2NyZWVuKG1zZywgXCIjMDA4MDAwXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHByaXZhdGUgZG93bndhcmRGb3JjZTpCQUJZTE9OLlZlY3RvcjMgPSBCQUJZTE9OLlZlY3RvcjMuWmVybygpO1xuICAgICAgICBwcml2YXRlIGdldFZlaGljbGVFbmdpbmVUb3JxdWUocnBtOm51bWJlcik6IG51bWJlciB7XG4gICAgICAgICAgICBsZXQgcmVzdWx0Om51bWJlciA9IDIwMDA7XG4gICAgICAgICAgICAvL2lmICh0aGlzLmVuZ2luZVRvcnF1ZUN1cnZlICE9IG51bGwpIHtcbiAgICAgICAgICAgIC8vICAgIHJlc3VsdCA9IDEwMDA7IC8vIFRPRE86IFNhbXBsZSBBbmltYXRpb24gQ3VydmVcbiAgICAgICAgICAgIC8vfVxuICAgICAgICAgICAgLy9pZiAocmVzdWx0IDw9IDApIHtcbiAgICAgICAgICAgIC8vICAgIHJlc3VsdCA9IDEwMDtcbiAgICAgICAgICAgIC8vfVxuICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDsgXG4gICAgICAgIH1cbiAgICAgICAgcHJpdmF0ZSB1cGRhdGVDdXJyZW50RnJpY3Rpb25TbGlwKGRlbHRhVGltZTpudW1iZXIpOnZvaWQge1xuICAgICAgICAgICAgaWYgKHRoaXMubV9mcm9udExlZnRXaGVlbCAhPSBudWxsICYmIHRoaXMubV9mcm9udExlZnRXaGVlbC5kZWZhdWx0RnJpY3Rpb24gIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIGxldCBmcm9udExlZnRGcmljdGlvbjpudW1iZXIgPSB0aGlzLm1fZnJvbnRMZWZ0V2hlZWwuZ2V0X21fZnJpY3Rpb25TbGlwKCk7XG4gICAgICAgICAgICAgICAgaWYgKGZyb250TGVmdEZyaWN0aW9uICE9PSB0aGlzLm1fZnJvbnRMZWZ0V2hlZWwuZGVmYXVsdEZyaWN0aW9uKSB7XG4gICAgICAgICAgICAgICAgICAgIGZyb250TGVmdEZyaWN0aW9uID0gQkFCWUxPTi5TY2FsYXIuTGVycChmcm9udExlZnRGcmljdGlvbiwgdGhpcy5tX2Zyb250TGVmdFdoZWVsLmRlZmF1bHRGcmljdGlvbiwgZGVsdGFUaW1lKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5tX2Zyb250TGVmdFdoZWVsLnNldF9tX2ZyaWN0aW9uU2xpcChmcm9udExlZnRGcmljdGlvbik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHRoaXMubV9mcm9udFJpZ2h0V2hlZWwgIT0gbnVsbCAmJiB0aGlzLm1fZnJvbnRSaWdodFdoZWVsLmRlZmF1bHRGcmljdGlvbiAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgbGV0IGZyb250UmlnaHRGcmljdGlvbjpudW1iZXIgPSB0aGlzLm1fZnJvbnRSaWdodFdoZWVsLmdldF9tX2ZyaWN0aW9uU2xpcCgpO1xuICAgICAgICAgICAgICAgIGlmIChmcm9udFJpZ2h0RnJpY3Rpb24gIT09IHRoaXMubV9mcm9udFJpZ2h0V2hlZWwuZGVmYXVsdEZyaWN0aW9uKSB7XG4gICAgICAgICAgICAgICAgICAgIGZyb250UmlnaHRGcmljdGlvbiA9IEJBQllMT04uU2NhbGFyLkxlcnAoZnJvbnRSaWdodEZyaWN0aW9uLCB0aGlzLm1fZnJvbnRSaWdodFdoZWVsLmRlZmF1bHRGcmljdGlvbiwgZGVsdGFUaW1lKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5tX2Zyb250UmlnaHRXaGVlbC5zZXRfbV9mcmljdGlvblNsaXAoZnJvbnRSaWdodEZyaWN0aW9uKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodGhpcy5tX2JhY2tMZWZ0V2hlZWwgIT0gbnVsbCAmJiB0aGlzLm1fYmFja0xlZnRXaGVlbC5kZWZhdWx0RnJpY3Rpb24gIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIGxldCBiYWNrTGVmdEZyaWN0aW9uOm51bWJlciA9IHRoaXMubV9iYWNrTGVmdFdoZWVsLmdldF9tX2ZyaWN0aW9uU2xpcCgpO1xuICAgICAgICAgICAgICAgIGlmIChiYWNrTGVmdEZyaWN0aW9uICE9PSB0aGlzLm1fYmFja0xlZnRXaGVlbC5kZWZhdWx0RnJpY3Rpb24pIHtcbiAgICAgICAgICAgICAgICAgICAgYmFja0xlZnRGcmljdGlvbiA9IEJBQllMT04uU2NhbGFyLkxlcnAoYmFja0xlZnRGcmljdGlvbiwgdGhpcy5tX2JhY2tMZWZ0V2hlZWwuZGVmYXVsdEZyaWN0aW9uLCBkZWx0YVRpbWUpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm1fYmFja0xlZnRXaGVlbC5zZXRfbV9mcmljdGlvblNsaXAoYmFja0xlZnRGcmljdGlvbik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHRoaXMubV9iYWNrUmlnaHRXaGVlbCAhPSBudWxsICYmIHRoaXMubV9iYWNrUmlnaHRXaGVlbC5kZWZhdWx0RnJpY3Rpb24gIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIGxldCBiYWNrUmlnaHRGcmljdGlvbjpudW1iZXIgPSB0aGlzLm1fYmFja1JpZ2h0V2hlZWwuZ2V0X21fZnJpY3Rpb25TbGlwKCk7XG4gICAgICAgICAgICAgICAgaWYgKGJhY2tSaWdodEZyaWN0aW9uICE9PSB0aGlzLm1fYmFja1JpZ2h0V2hlZWwuZGVmYXVsdEZyaWN0aW9uKSB7XG4gICAgICAgICAgICAgICAgICAgIGJhY2tSaWdodEZyaWN0aW9uID0gQkFCWUxPTi5TY2FsYXIuTGVycChiYWNrUmlnaHRGcmljdGlvbiwgdGhpcy5tX2JhY2tSaWdodFdoZWVsLmRlZmF1bHRGcmljdGlvbiwgZGVsdGFUaW1lKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5tX2JhY2tSaWdodFdoZWVsLnNldF9tX2ZyaWN0aW9uU2xpcChiYWNrUmlnaHRGcmljdGlvbik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufSIsIm1vZHVsZSBQUk9KRUNUIHtcbiAgICAvKipcbiAgICAgKiBCYWJ5bG9uIFNjcmlwdCBDb21wb25lbnRcbiAgICAgKiBAY2xhc3MgVmVoaWNsZUlucHV0Q29udHJvbGxlclxuICAgICAqL1xuICAgIGV4cG9ydCBjbGFzcyBWZWhpY2xlSW5wdXRDb250cm9sbGVyIGV4dGVuZHMgQkFCWUxPTi5TY3JpcHRDb21wb25lbnQge1xuICAgICAgICBwcml2YXRlIHBsYXllckRlbHRhWDpudW1iZXIgPSAwO1xuICAgICAgICBwcml2YXRlIHBsYXllckRlbHRhWTpudW1iZXIgPSAwO1xuICAgICAgICBwcml2YXRlIHBsYXllck1vdXNlWDpudW1iZXIgPSAwO1xuICAgICAgICBwcml2YXRlIHBsYXllck1vdXNlWTpudW1iZXIgPSAwO1xuXG5cdFx0cHJpdmF0ZSB1c2VkRGlzdGFuY2U6bnVtYmVyID0gMDsgXG5cdFx0cHJpdmF0ZSB3YW50ZWRSb3RhdGlvbkFuZ2xlOm51bWJlciA9IDA7XG5cdFx0cHJpdmF0ZSB3YW50ZWRIZWlnaHQ6bnVtYmVyID0gMDtcblx0XHRwcml2YXRlIGN1cnJlbnRSb3RhdGlvbkFuZ2xlOm51bWJlciA9IDA7XG4gICAgICAgIHByaXZhdGUgY3VycmVudEhlaWdodDpudW1iZXIgPSAwO1xuICAgICAgICBwcml2YXRlIHdhbnRlZFBvc2l0aW9uOkJBQllMT04uVmVjdG9yMyA9IEJBQllMT04uVmVjdG9yMy5aZXJvKCk7XG5cdFx0cHJpdmF0ZSB0YXJnZXRQb3NpdGlvbjpCQUJZTE9OLlZlY3RvcjMgPSBCQUJZTE9OLlZlY3RvcjMuWmVybygpO1xuXHRcdHByaXZhdGUgdGFyZ2V0Um90YXRpb246QkFCWUxPTi5RdWF0ZXJuaW9uID0gQkFCWUxPTi5RdWF0ZXJuaW9uLlplcm8oKTtcbiAgICAgICAgcHJpdmF0ZSB0YXJnZXRBbmdsZXM6QkFCWUxPTi5WZWN0b3IzID0gQkFCWUxPTi5WZWN0b3IzLlplcm8oKTtcbiAgICAgICAgcHJpdmF0ZSBjYW1lcmFBbmdsZXM6QkFCWUxPTi5WZWN0b3IzID0gQkFCWUxPTi5WZWN0b3IzLlplcm8oKTtcblx0XHRwcml2YXRlIHJvdGF0aW9uUXVhdDpCQUJZTE9OLlF1YXRlcm5pb24gPSBCQUJZTE9OLlF1YXRlcm5pb24uWmVybygpO1xuXHRcdHByaXZhdGUgcm90YXRpb25WZWM6QkFCWUxPTi5WZWN0b3IzID0gQkFCWUxPTi5WZWN0b3IzLlplcm8oKTtcblx0XHRwcml2YXRlIGRpc3RhbmNlVmVjOkJBQllMT04uVmVjdG9yMyA9IEJBQllMT04uVmVjdG9yMy5aZXJvKCk7XG4gICAgICAgIHByaXZhdGUgeVZlbG9jaXR5OkJBQllMT04uVmVjdG9yMiA9IEJBQllMT04uVmVjdG9yMi5aZXJvKCk7XG4gICAgICAgIHByaXZhdGUgelZlbG9jaXR5OkJBQllMT04uVmVjdG9yMiA9IEJBQllMT04uVmVjdG9yMi5aZXJvKCk7XG4gICAgICAgIFxuICAgICAgICBwcml2YXRlIGxvb2tBdFBvc2l0aW9uOkJBQllMT04uVmVjdG9yMyA9IEJBQllMT04uVmVjdG9yMy5aZXJvKCk7XG5cdFx0cHJpdmF0ZSBsb29rQXRWZWN0b3I6QkFCWUxPTi5WZWN0b3IzID0gQkFCWUxPTi5WZWN0b3IzLlplcm8oKTtcblxuICAgICAgICBwdWJsaWMgZ2V0UGxheWVyRGVsdGFYKCk6bnVtYmVyIHsgcmV0dXJuIHRoaXMucGxheWVyRGVsdGFYIH07XG4gICAgICAgIHB1YmxpYyBnZXRQbGF5ZXJEZWx0YVkoKTpudW1iZXIgeyByZXR1cm4gdGhpcy5wbGF5ZXJEZWx0YVkgfTtcbiAgICAgICAgcHVibGljIGdldFBsYXllck1vdXNlWCgpOm51bWJlciB7IHJldHVybiB0aGlzLnBsYXllck1vdXNlWCB9O1xuICAgICAgICBwdWJsaWMgZ2V0UGxheWVyTW91c2VZKCk6bnVtYmVyIHsgcmV0dXJuIHRoaXMucGxheWVyTW91c2VZIH07XG5cbiAgICAgICAgcHVibGljIGVuYWJsZUlucHV0OmJvb2xlYW4gPSBmYWxzZTtcbiAgICAgICAgcHVibGljIGF0dGFjaENhbWVyYTpib29sZWFuID0gZmFsc2U7XG4gICAgICAgIHB1YmxpYyBmb2xsb3dCZWhpbmQ6Ym9vbGVhbiA9IHRydWU7XG5cdFx0cHVibGljIGZvbGxvd0Rpc3RhbmNlOm51bWJlciA9IDYuMDtcblx0XHRwdWJsaWMgZm9sbG93SGVpZ2h0Om51bWJlciA9IDIuMDtcblx0XHRwdWJsaWMgbG9va0F0SGVpZ2h0Om51bWJlciA9IDIuMDtcblx0XHRwdWJsaWMgaGVpZ2h0RGFtcGluZzpudW1iZXIgPSAyLjA7XG5cdFx0cHVibGljIHJvdGF0aW9uU25hcFRpbWU6bnVtYmVyID0gMC4zO1xuXHRcdHB1YmxpYyBkaXN0YW5jZVNuYXBUaW1lOm51bWJlciA9IDAuMztcblx0XHRwdWJsaWMgZGlzdGFuY2VNdWx0aXBsaWVyOm51bWJlciA9IDAuMDMzO1xuICAgICAgICBwdWJsaWMgcGxheWVyTnVtYmVyOkJBQllMT04uUGxheWVyTnVtYmVyID0gQkFCWUxPTi5QbGF5ZXJOdW1iZXIuT25lO1xuICAgICAgICBwdWJsaWMgdHJpZ2dlckZvcndhcmQ6bnVtYmVyID0gQkFCWUxPTi5YYm94MzYwVHJpZ2dlci5SaWdodDtcbiAgICAgICAgcHVibGljIGtleWJvYXJkRm9yYXdyZDpudW1iZXIgPSBCQUJZTE9OLlVzZXJJbnB1dEtleS5XO1xuICAgICAgICBwdWJsaWMgYXV4S2V5Ym9hcmRGb3Jhd3JkOm51bWJlciA9IEJBQllMT04uVXNlcklucHV0S2V5LlVwQXJyb3c7XG4gICAgICAgIHB1YmxpYyB0cmlnZ2VyQmFja3dhcmRzOm51bWJlciA9IEJBQllMT04uWGJveDM2MFRyaWdnZXIuTGVmdDtcbiAgICAgICAgcHVibGljIGtleWJvYXJkQmFja3dhcmRzOm51bWJlciA9IEJBQllMT04uVXNlcklucHV0S2V5LlM7XG4gICAgICAgIHB1YmxpYyBhdXhLZXlib2FyZEJhY2t3YXJkczpudW1iZXIgPSBCQUJZTE9OLlVzZXJJbnB1dEtleS5Eb3duQXJyb3c7XG4gICAgICAgIHB1YmxpYyBidXR0b25IYW5kYnJha2U6bnVtYmVyID0gQkFCWUxPTi5YYm94MzYwQnV0dG9uLlg7XG4gICAgICAgIHB1YmxpYyBrZXlib2FyZEhhbmRicmFrZTpudW1iZXIgPSBCQUJZTE9OLlVzZXJJbnB1dEtleS5TcGFjZUJhcjtcblxuICAgICAgICBwcm90ZWN0ZWQgbV9jYW1lcmFUcmFuc2Zvcm06QkFCWUxPTi5UcmFuc2Zvcm1Ob2RlID0gbnVsbDtcbiAgICAgICAgcHJvdGVjdGVkIG1fcmlnaWRib2R5UGh5c2ljczpCQUJZTE9OLlJpZ2lkYm9keVBoeXNpY3MgPSBudWxsO1xuICAgICAgICBwcm90ZWN0ZWQgbV9zdGFuZGFyZENhckNvbnRyb2xsZXI6UFJPSkVDVC5TdGFuZGFyZENhckNvbnRyb2xsZXIgPSBudWxsO1xuICAgICAgICBwdWJsaWMgY29uc3RydWN0b3IodHJhbnNmb3JtOiBCQUJZTE9OLlRyYW5zZm9ybU5vZGUsIHNjZW5lOiBCQUJZTE9OLlNjZW5lLCBwcm9wZXJ0aWVzOiBhbnkgPSB7fSkge1xuICAgICAgICAgICAgc3VwZXIodHJhbnNmb3JtLCBzY2VuZSwgcHJvcGVydGllcyk7XG4gICAgICAgICAgICB0aGlzLmVuYWJsZUlucHV0ID0gdGhpcy5nZXRFZGl0b3JQcm9wZXJ0eShcImVuYWJsZUlucHV0XCIsIHRoaXMuZW5hYmxlSW5wdXQpO1xuICAgICAgICAgICAgdGhpcy5wbGF5ZXJOdW1iZXIgPSB0aGlzLmdldEVkaXRvclByb3BlcnR5KFwicGxheWVyTnVtYmVyXCIsIHRoaXMucGxheWVyTnVtYmVyKTtcbiAgICAgICAgICAgIHRoaXMuYXR0YWNoQ2FtZXJhID0gdGhpcy5nZXRFZGl0b3JQcm9wZXJ0eShcImF0dGFjaENhbWVyYVwiLCB0aGlzLmF0dGFjaENhbWVyYSk7XG4gICAgICAgICAgICB0aGlzLmZvbGxvd0JlaGluZCA9IHRoaXMuZ2V0RWRpdG9yUHJvcGVydHkoXCJmb2xsb3dCZWhpbmRcIiwgdGhpcy5mb2xsb3dCZWhpbmQpO1xuICAgICAgICAgICAgdGhpcy5mb2xsb3dEaXN0YW5jZSA9IHRoaXMuZ2V0RWRpdG9yUHJvcGVydHkoXCJmb2xsb3dEaXN0YW5jZVwiLCB0aGlzLmZvbGxvd0Rpc3RhbmNlKTtcbiAgICAgICAgICAgIHRoaXMuZm9sbG93SGVpZ2h0ID0gdGhpcy5nZXRFZGl0b3JQcm9wZXJ0eShcImZvbGxvd0hlaWdodFwiLCB0aGlzLmZvbGxvd0hlaWdodCk7XG4gICAgICAgICAgICB0aGlzLmxvb2tBdEhlaWdodCA9IHRoaXMuZ2V0RWRpdG9yUHJvcGVydHkoXCJsb29rQXRIZWlnaHRcIiwgdGhpcy5sb29rQXRIZWlnaHQpO1xuICAgICAgICAgICAgdGhpcy5oZWlnaHREYW1waW5nID0gdGhpcy5nZXRFZGl0b3JQcm9wZXJ0eShcImhlaWdodERhbXBpbmdcIiwgdGhpcy5oZWlnaHREYW1waW5nKTtcbiAgICAgICAgICAgIHRoaXMucm90YXRpb25TbmFwVGltZSA9IHRoaXMuZ2V0RWRpdG9yUHJvcGVydHkoXCJyb3RhdGlvblNuYXBUaW1lXCIsIHRoaXMucm90YXRpb25TbmFwVGltZSk7XG4gICAgICAgICAgICB0aGlzLmRpc3RhbmNlU25hcFRpbWUgPSB0aGlzLmdldEVkaXRvclByb3BlcnR5KFwiZGlzdGFuY2VTbmFwVGltZVwiLCB0aGlzLmRpc3RhbmNlU25hcFRpbWUpO1xuICAgICAgICAgICAgdGhpcy5kaXN0YW5jZU11bHRpcGxpZXIgPSB0aGlzLmdldEVkaXRvclByb3BlcnR5KFwiZGlzdGFuY2VNdWx0aXBsaWVyXCIsIHRoaXMuZGlzdGFuY2VNdWx0aXBsaWVyKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHByb3RlY3RlZCBzdGFydCgpOnZvaWQgeyB0aGlzLmluaXRWZWhpY2xlQ29udHJvbGxlcigpOyB9XG4gICAgICAgIHByb3RlY3RlZCB1cGRhdGUoKSA6dm9pZCB7ICB0aGlzLnVwZGF0ZVZlaGljbGVDb250cm9sbGVyKCk7IH1cbiAgICAgICAgcHJvdGVjdGVkIGRlc3Ryb3koKTogdm9pZCB7IHRoaXMuZGVzdHJveVZlaGljbGVDb250cm9sbGVyKCk7IH1cblxuICAgICAgICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuICAgICAgICAvLyBQcm90ZWN0ZWQgQ2hhcmFjdGVyIE1vdmVtZW50IFN0YXRlIEZ1bmN0aW9ucyAvL1xuICAgICAgICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuXG4gICAgICAgIHByb3RlY3RlZCBpbml0VmVoaWNsZUNvbnRyb2xsZXIoKTogdm9pZCB7XG4gICAgICAgICAgICAvLyBHZXQgUmlnaWRib2R5IFBoeXNpY3NcbiAgICAgICAgICAgIHRoaXMubV9yaWdpZGJvZHlQaHlzaWNzID0gdGhpcy5nZXRDb21wb25lbnQoXCJCQUJZTE9OLlJpZ2lkYm9keVBoeXNpY3NcIik7XG4gICAgICAgICAgICBpZiAodGhpcy5tX3JpZ2lkYm9keVBoeXNpY3MgPT0gbnVsbCkgQkFCWUxPTi5Ub29scy5XYXJuKFwiTnVsbCByaWdpZGJvZHkgcGh5c2ljcyBmb3I6IFwiICsgdGhpcy50cmFuc2Zvcm0ubmFtZSk7XG5cbiAgICAgICAgICAgIC8vIEdldCBTdGFuZGFyZCBDYXIgQ29udHJvbGxlclxuICAgICAgICAgICAgdGhpcy5tX3N0YW5kYXJkQ2FyQ29udHJvbGxlciA9IHRoaXMuZ2V0Q29tcG9uZW50KFwiUFJPSkVDVC5TdGFuZGFyZENhckNvbnRyb2xsZXJcIik7XG4gICAgICAgICAgICBpZiAodGhpcy5tX3N0YW5kYXJkQ2FyQ29udHJvbGxlciA9PSBudWxsKSBCQUJZTE9OLlRvb2xzLldhcm4oXCJOdWxsIHN0YW5kYXJkIGNhciBjb250cm9sbGVyIGZvcjogXCIgKyB0aGlzLnRyYW5zZm9ybS5uYW1lKTtcblxuICAgICAgICAgICAgLy8gVE9ETzogR2V0IFBsYXllciBDYW1lcmEgVHJhbnNmb3JtXG4gICAgICAgICAgICBpZiAodGhpcy5hdHRhY2hDYW1lcmEgPT09IHRydWUpIHtcbiAgICAgICAgICAgICAgICB0aGlzLm1fY2FtZXJhVHJhbnNmb3JtID0gQkFCWUxPTi5TY2VuZU1hbmFnZXIuR2V0VHJhbnNmb3JtTm9kZSh0aGlzLnNjZW5lLCBcIk1haW4gQ2FtZXJhXCIpO1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLm1fY2FtZXJhVHJhbnNmb3JtICE9IG51bGwpIEJBQllMT04uVXRpbGl0aWVzLlZhbGlkYXRlVHJhbnNmb3JtUXVhdGVybmlvbih0aGlzLm1fY2FtZXJhVHJhbnNmb3JtKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy9jb25zdCBjYW1lcmFCb29tOkJBQllMT04uTWVzaCA9IEJBQllMT04uTWVzaC5DcmVhdGVCb3goXCJDYW1lcmEgQm9vbVwiLCAwLjUsIHRoaXMuc2NlbmUpO1xuICAgICAgICAgICAgLy9jYW1lcmFCb29tLnBhcmVudCA9IHRoaXMudHJhbnNmb3JtO1xuICAgICAgICAgICAgLy9jYW1lcmFCb29tLnBvc2l0aW9uLnNldCgwLCAxLjUsIDApO1xuICAgICAgICAgICAgLy9jYW1lcmFCb29tLnJvdGF0aW9uUXVhdGVybmlvbiA9IEJBQllMT04uVXRpbGl0aWVzLkZyb21FdWxlcigwLDAsMCk7XG5cblxuICAgICAgICAgICAgLy8gU3luYyBWZWhpY2xlIFBoeXNpY3MgV2l0aCBDYW1lcmFcbiAgICAgICAgICAgIGNvbnN0IGFic3RyYWN0TWVzaDpCQUJZTE9OLkFic3RyYWN0TWVzaCA9IHRoaXMuZ2V0QWJzdHJhY3RNZXNoKCk7XG4gICAgICAgICAgICBpZiAoYWJzdHJhY3RNZXNoICE9IG51bGwpIGFic3RyYWN0TWVzaC5waHlzaWNzSW1wb3N0b3IucmVnaXN0ZXJBZnRlclBoeXNpY3NTdGVwKChpbXBvc3RvcjpCQUJZTE9OLlBoeXNpY3NJbXBvc3Rvcik9PnsgdGhpcy5zeW5jVmVoaWNsZUNvbnRyb2xsZXIodGhpcy5mb2xsb3dCZWhpbmQsIHRydWUpOyB9KTtcbiAgICAgICAgfVxuICAgICAgICBwcm90ZWN0ZWQgdXBkYXRlVmVoaWNsZUNvbnRyb2xsZXIoKTogdm9pZCB7XG4gICAgICAgICAgICBpZiAodGhpcy5lbmFibGVJbnB1dCA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgICAgIC8vIEdldCBVc2VyIElucHV0XG4gICAgICAgICAgICAgICAgdGhpcy5wbGF5ZXJEZWx0YVggPSBCQUJZTE9OLlNjZW5lTWFuYWdlci5HZXRVc2VySW5wdXQoQkFCWUxPTi5Vc2VySW5wdXRBeGlzLkhvcml6b250YWwsIHRoaXMucGxheWVyTnVtYmVyKTtcbiAgICAgICAgICAgICAgICB0aGlzLnBsYXllckRlbHRhWSA9IEJBQllMT04uU2NlbmVNYW5hZ2VyLkdldFVzZXJJbnB1dChCQUJZTE9OLlVzZXJJbnB1dEF4aXMuVmVydGljYWwsIHRoaXMucGxheWVyTnVtYmVyKTtcbiAgICAgICAgICAgICAgICB0aGlzLnBsYXllck1vdXNlWCA9IEJBQllMT04uU2NlbmVNYW5hZ2VyLkdldFVzZXJJbnB1dChCQUJZTE9OLlVzZXJJbnB1dEF4aXMuTW91c2VYLCB0aGlzLnBsYXllck51bWJlcik7XG4gICAgICAgICAgICAgICAgdGhpcy5wbGF5ZXJNb3VzZVkgPSBCQUJZTE9OLlNjZW5lTWFuYWdlci5HZXRVc2VySW5wdXQoQkFCWUxPTi5Vc2VySW5wdXRBeGlzLk1vdXNlWSwgdGhpcy5wbGF5ZXJOdW1iZXIpO1xuXG4gICAgICAgICAgICAgICAgLy8gQ2hlY2sgRGVhZCBTdGlja1xuICAgICAgICAgICAgICAgIGlmIChNYXRoLmFicyh0aGlzLnBsYXllckRlbHRhWCkgPD0gQkFCWUxPTi5Vc2VySW5wdXRPcHRpb25zLkdhbWVwYWREZWFkU3RpY2tWYWx1ZSkgdGhpcy5wbGF5ZXJEZWx0YVggPSAwO1xuICAgICAgICAgICAgICAgIGlmIChNYXRoLmFicyh0aGlzLnBsYXllckRlbHRhWSkgPD0gQkFCWUxPTi5Vc2VySW5wdXRPcHRpb25zLkdhbWVwYWREZWFkU3RpY2tWYWx1ZSkgdGhpcy5wbGF5ZXJEZWx0YVkgPSAwO1xuICAgICAgICAgICAgICAgIGlmIChNYXRoLmFicyh0aGlzLnBsYXllck1vdXNlWCkgPD0gQkFCWUxPTi5Vc2VySW5wdXRPcHRpb25zLkdhbWVwYWREZWFkU3RpY2tWYWx1ZSkgdGhpcy5wbGF5ZXJNb3VzZVggPSAwO1xuICAgICAgICAgICAgICAgIGlmIChNYXRoLmFicyh0aGlzLnBsYXllck1vdXNlWSkgPD0gQkFCWUxPTi5Vc2VySW5wdXRPcHRpb25zLkdhbWVwYWREZWFkU3RpY2tWYWx1ZSkgdGhpcy5wbGF5ZXJNb3VzZVkgPSAwO1xuXG4gICAgICAgICAgICAgICAgLy8gR2V0IEJ1dHRvbiBUcmlnZ2Vyc1xuICAgICAgICAgICAgICAgIGNvbnN0IGF1eEZvcndhcmRLZXlib2FyZDpib29sZWFuID0gQkFCWUxPTi5TY2VuZU1hbmFnZXIuR2V0S2V5Ym9hcmRJbnB1dCh0aGlzLmF1eEtleWJvYXJkRm9yYXdyZCk7IC8vIFBsYXllciBPbmUgT25seVxuICAgICAgICAgICAgICAgIGNvbnN0IGZvcndhcmRLZXlib2FyZDpib29sZWFuID0gQkFCWUxPTi5TY2VuZU1hbmFnZXIuR2V0S2V5Ym9hcmRJbnB1dCh0aGlzLmtleWJvYXJkRm9yYXdyZCk7IC8vIFBsYXllciBPbmUgT25seVxuICAgICAgICAgICAgICAgIGNvbnN0IGZvcndhcmRUcmlnZ2VyOm51bWJlciA9IEJBQllMT04uU2NlbmVNYW5hZ2VyLkdldEdhbWVwYWRUcmlnZ2VySW5wdXQodGhpcy50cmlnZ2VyRm9yd2FyZCwgdGhpcy5wbGF5ZXJOdW1iZXIpO1xuICAgICAgICAgICAgICAgIGNvbnN0IGF1eEJhY2t3YXJkS2V5Ym9hcmQ6Ym9vbGVhbiA9IEJBQllMT04uU2NlbmVNYW5hZ2VyLkdldEtleWJvYXJkSW5wdXQodGhpcy5hdXhLZXlib2FyZEJhY2t3YXJkcyk7IC8vIFBsYXllciBPbmUgT25seVxuICAgICAgICAgICAgICAgIGNvbnN0IGJhY2t3YXJkS2V5Ym9hcmQ6Ym9vbGVhbiA9IEJBQllMT04uU2NlbmVNYW5hZ2VyLkdldEtleWJvYXJkSW5wdXQodGhpcy5rZXlib2FyZEJhY2t3YXJkcyk7IC8vIFBsYXllciBPbmUgT25seVxuICAgICAgICAgICAgICAgIGNvbnN0IGJhY2t3YXJkVHJpZ2dlcjpudW1iZXIgPSBCQUJZTE9OLlNjZW5lTWFuYWdlci5HZXRHYW1lcGFkVHJpZ2dlcklucHV0KHRoaXMudHJpZ2dlckJhY2t3YXJkcywgdGhpcy5wbGF5ZXJOdW1iZXIpO1xuICAgICAgICAgICAgICAgIGNvbnN0IGhhbmRicmFrZUtleWJvYXJkOmJvb2xlYW4gPSBCQUJZTE9OLlNjZW5lTWFuYWdlci5HZXRLZXlib2FyZElucHV0KHRoaXMua2V5Ym9hcmRIYW5kYnJha2UpOyAvLyBQbGF5ZXIgT25lIE9ubHlcbiAgICAgICAgICAgICAgICBjb25zdCBoYW5kYnJha2VCdXR0b246Ym9vbGVhbiA9IEJBQllMT04uU2NlbmVNYW5hZ2VyLkdldEdhbWVwYWRCdXR0b25JbnB1dCh0aGlzLmJ1dHRvbkhhbmRicmFrZSwgdGhpcy5wbGF5ZXJOdW1iZXIpO1xuXG4gICAgICAgICAgICAgICAgLy8gUmVzZXQgUGxheWVyIE1vdmVtZW50XG4gICAgICAgICAgICAgICAgbGV0IHBsYXllck1vdmVtZW50Om51bWJlciA9IDA7XG4gICAgICAgICAgICAgICAgbGV0IHBsYXllclN0ZWVyaW5nOm51bWJlciA9IDA7XG4gICAgICAgICAgICAgICAgbGV0IHBsYXllckhhbmRicmFrZTpib29sZWFuID0gZmFsc2U7XG5cbiAgICAgICAgICAgICAgICAvLyBQcmltYXJ5IEFjY2VsZXJhdHRpb25cbiAgICAgICAgICAgICAgICBpZiAoZm9yd2FyZFRyaWdnZXIgPiAwLjIpIHBsYXllck1vdmVtZW50ID0gZm9yd2FyZFRyaWdnZXI7XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAodGhpcy5wbGF5ZXJOdW1iZXIgPT09IEJBQllMT04uUGxheWVyTnVtYmVyLk9uZSAmJiAoZm9yd2FyZEtleWJvYXJkID09PSB0cnVlIHx8IGF1eEZvcndhcmRLZXlib2FyZCA9PT0gdHJ1ZSkpIHBsYXllck1vdmVtZW50ID0gMTtcbiAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIC8vIEJyYWtpbmcgVGFrZXMgUHJlY2VkZW5jZVxuICAgICAgICAgICAgICAgIGlmIChiYWNrd2FyZFRyaWdnZXIgPiAwLjIpIHBsYXllck1vdmVtZW50ID0gLWJhY2t3YXJkVHJpZ2dlcjtcbiAgICAgICAgICAgICAgICBlbHNlIGlmICh0aGlzLnBsYXllck51bWJlciA9PT0gQkFCWUxPTi5QbGF5ZXJOdW1iZXIuT25lICYmIChiYWNrd2FyZEtleWJvYXJkID09PSB0cnVlIHx8IGF1eEJhY2t3YXJkS2V5Ym9hcmQgPT09IHRydWUpKSBwbGF5ZXJNb3ZlbWVudCA9IC0xO1xuICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgLy8gSW5jbHVkZXMgQUQgQW5kIEFycm93IEtleXNcbiAgICAgICAgICAgICAgICBwbGF5ZXJTdGVlcmluZyA9IHRoaXMucGxheWVyRGVsdGFYOyBcbiAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIC8vIFB1bGwgSGFyZCBIYW5kIEJyYWtlIExldmVyXG4gICAgICAgICAgICAgICAgcGxheWVySGFuZGJyYWtlID0gKGhhbmRicmFrZUtleWJvYXJkID09PSB0cnVlIHx8IGhhbmRicmFrZUJ1dHRvbiA9PT0gdHJ1ZSk7XG4gICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAvLyBEcml2ZSBTdGFuZGFyZCBDYXIgQ29udHJvbGxlclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLm1fc3RhbmRhcmRDYXJDb250cm9sbGVyICE9IG51bGwpIHRoaXMubV9zdGFuZGFyZENhckNvbnRyb2xsZXIuZHJpdmUocGxheWVyTW92ZW1lbnQsIHBsYXllclN0ZWVyaW5nLCBwbGF5ZXJIYW5kYnJha2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHByb3RlY3RlZCBzeW5jVmVoaWNsZUNvbnRyb2xsZXIoZm9sbG93OmJvb2xlYW4sIGxvb2s6Ym9vbGVhbik6IHZvaWQge1xuICAgICAgICAgICAgaWYgKHRoaXMuYXR0YWNoQ2FtZXJhID09PSB0cnVlICYmIHRoaXMubV9jYW1lcmFUcmFuc2Zvcm0gIT0gbnVsbCAmJiB0aGlzLm1fcmlnaWRib2R5UGh5c2ljcyAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgLy8gVXBkYXRlIEluZm9cbiAgICAgICAgICAgICAgICBjb25zdCBkZWx0YVRpbWU6bnVtYmVyID0gdGhpcy5nZXREZWx0YVNlY29uZHMoKTtcbiAgICAgICAgICAgICAgICB0aGlzLm1fcmlnaWRib2R5UGh5c2ljcy5nZXRUcmFuc2Zvcm1Qb3NpdGlvblRvUmVmKHRoaXMudGFyZ2V0UG9zaXRpb24pO1xuICAgICAgICAgICAgICAgIHRoaXMubV9yaWdpZGJvZHlQaHlzaWNzLmdldFRyYW5zZm9ybVJvdGF0aW9uVG9SZWYodGhpcy50YXJnZXRSb3RhdGlvbik7XG5cbiAgICAgICAgICAgICAgICAvLyBTbW9vdGggSGVpZ2h0XG4gICAgICAgICAgICAgICAgdGhpcy53YW50ZWRIZWlnaHQgPSB0aGlzLnRhcmdldFBvc2l0aW9uLnkgKyB0aGlzLmZvbGxvd0hlaWdodDtcbiAgICAgICAgICAgICAgICB0aGlzLmN1cnJlbnRIZWlnaHQgPSB0aGlzLm1fY2FtZXJhVHJhbnNmb3JtLnBvc2l0aW9uLnk7XG4gICAgICAgICAgICAgICAgdGhpcy5jdXJyZW50SGVpZ2h0ID0gQkFCWUxPTi5TY2FsYXIuTGVycCh0aGlzLmN1cnJlbnRIZWlnaHQsIHRoaXMud2FudGVkSGVpZ2h0LCB0aGlzLmhlaWdodERhbXBpbmcgKiBkZWx0YVRpbWUpO1xuXG4gICAgICAgICAgICAgICAgLy8gU21vb3RoIFJvdGF0aW9uXG4gICAgICAgICAgICAgICAgQkFCWUxPTi5VdGlsaXRpZXMuVG9FdWxlclRvUmVmKHRoaXMudGFyZ2V0Um90YXRpb24sIHRoaXMudGFyZ2V0QW5nbGVzKTtcbiAgICAgICAgICAgICAgICBCQUJZTE9OLlV0aWxpdGllcy5Ub0V1bGVyVG9SZWYodGhpcy5tX2NhbWVyYVRyYW5zZm9ybS5yb3RhdGlvblF1YXRlcm5pb24sIHRoaXMuY2FtZXJhQW5nbGVzKTtcbiAgICAgICAgICAgICAgICB0aGlzLndhbnRlZFJvdGF0aW9uQW5nbGUgPSB0aGlzLnRhcmdldEFuZ2xlcy55O1xuICAgICAgICAgICAgICAgIHRoaXMuY3VycmVudFJvdGF0aW9uQW5nbGUgPSB0aGlzLmNhbWVyYUFuZ2xlcy55O1xuICAgICAgICAgICAgICAgIHRoaXMuY3VycmVudFJvdGF0aW9uQW5nbGUgPSBCQUJZTE9OLlV0aWxpdGllcy5TbW9vdGhEYW1wQW5nbGUodGhpcy5jdXJyZW50Um90YXRpb25BbmdsZSwgdGhpcy53YW50ZWRSb3RhdGlvbkFuZ2xlLCB0aGlzLnJvdGF0aW9uU25hcFRpbWUsIE51bWJlci5NQVhfVkFMVUUsIGRlbHRhVGltZSwgdGhpcy55VmVsb2NpdHkpO1xuXG4gICAgICAgICAgICAgICAgLy8gU21vb3RoIFBvc2l0aW9uXG4gICAgICAgICAgICAgICAgdGhpcy53YW50ZWRQb3NpdGlvbi5jb3B5RnJvbSh0aGlzLnRhcmdldFBvc2l0aW9uKTtcbiAgICAgICAgICAgICAgICB0aGlzLndhbnRlZFBvc2l0aW9uLnkgPSB0aGlzLmN1cnJlbnRIZWlnaHQ7XG4gICAgICAgICAgICAgICAgdGhpcy51c2VkRGlzdGFuY2UgPSBCQUJZTE9OLlV0aWxpdGllcy5TbW9vdGhEYW1wQW5nbGUodGhpcy51c2VkRGlzdGFuY2UsIHRoaXMuZm9sbG93RGlzdGFuY2UgKyAodGhpcy5tX3JpZ2lkYm9keVBoeXNpY3MuZ2V0TGluZWFyVmVsb2NpdHkoKS5sZW5ndGgoKSAqIHRoaXMuZGlzdGFuY2VNdWx0aXBsaWVyKSwgdGhpcy5kaXN0YW5jZVNuYXBUaW1lLCBOdW1iZXIuTUFYX1ZBTFVFLCBkZWx0YVRpbWUsIHRoaXMuelZlbG9jaXR5KTsgXG5cbiAgICAgICAgICAgICAgICAvLyBTZXQgV2FudGVkIFBvc2l0aW9uXG4gICAgICAgICAgICAgICAgdGhpcy5kaXN0YW5jZVZlYy5zZXQoMCwgMCwgLXRoaXMudXNlZERpc3RhbmNlKTtcbiAgICAgICAgICAgICAgICBCQUJZTE9OLlV0aWxpdGllcy5Gcm9tRXVsZXJUb1JlZigwLCB0aGlzLmN1cnJlbnRSb3RhdGlvbkFuZ2xlLCAwLCB0aGlzLnJvdGF0aW9uUXVhdCk7XG4gICAgICAgICAgICAgICAgQkFCWUxPTi5VdGlsaXRpZXMuTXVsdGlwbHlRdWF0ZXJuaW9uQnlWZWN0b3JUb1JlZih0aGlzLnJvdGF0aW9uUXVhdCwgdGhpcy5kaXN0YW5jZVZlYywgdGhpcy5yb3RhdGlvblZlYyk7XG4gICAgICAgICAgICAgICAgdGhpcy53YW50ZWRQb3NpdGlvbi5hZGRJblBsYWNlKHRoaXMucm90YXRpb25WZWMpO1xuXG4gICAgICAgICAgICAgICAgLy8gU2V0IExvb2sgQXQgUG9zaXRpb25cbiAgICAgICAgICAgICAgICB0aGlzLmxvb2tBdFZlY3Rvci5zZXQoMCwgdGhpcy5sb29rQXRIZWlnaHQsIDApO1xuICAgICAgICAgICAgICAgIHRoaXMudGFyZ2V0UG9zaXRpb24uYWRkVG9SZWYodGhpcy5sb29rQXRWZWN0b3IsIHRoaXMubG9va0F0UG9zaXRpb24pO1xuXG4gICAgICAgICAgICAgICAgLy8gVXBkYXRlIEZvbGxvdyBDYW1lcmFcbiAgICAgICAgICAgICAgICBpZiAoZm9sbG93ID09PSB0cnVlKSB0aGlzLm1fY2FtZXJhVHJhbnNmb3JtLnBvc2l0aW9uLmNvcHlGcm9tKHRoaXMud2FudGVkUG9zaXRpb24pO1xuICAgICAgICAgICAgICAgIGlmIChsb29rID09PSB0cnVlKSB0aGlzLm1fY2FtZXJhVHJhbnNmb3JtLmxvb2tBdCh0aGlzLmxvb2tBdFBvc2l0aW9uKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBwcm90ZWN0ZWQgZGVzdHJveVZlaGljbGVDb250cm9sbGVyKCk6dm9pZCB7XG4gICAgICAgICAgICB0aGlzLm1fY2FtZXJhVHJhbnNmb3JtID0gbnVsbDtcbiAgICAgICAgICAgIHRoaXMubV9yaWdpZGJvZHlQaHlzaWNzID0gbnVsbDtcbiAgICAgICAgICAgIHRoaXMubV9zdGFuZGFyZENhckNvbnRyb2xsZXIgPSBudWxsO1xuICAgICAgICB9XG4gICAgfVxufSIsIm1vZHVsZSBQUk9KRUNUIHtcbiAgICAvKipcbiAgICAgKiBCYWJ5bG9uIFNjcmlwdCBDb21wb25lbnRcbiAgICAgKiBAY2xhc3MgSXRlbVJvdGF0b3JcbiAgICAgKi9cbiAgICBleHBvcnQgY2xhc3MgSXRlbVJvdGF0b3IgZXh0ZW5kcyBCQUJZTE9OLlNjcmlwdENvbXBvbmVudCB7XG4gICAgICAgIHByaXZhdGUgcm90YXRlU3BlZWQ6bnVtYmVyID0gMS4wO1xuICAgICAgICBwdWJsaWMgY29uc3RydWN0b3IodHJhbnNmb3JtOiBCQUJZTE9OLlRyYW5zZm9ybU5vZGUsIHNjZW5lOiBCQUJZTE9OLlNjZW5lLCBwcm9wZXJ0aWVzOiBhbnkgPSB7fSkge1xuICAgICAgICAgICAgc3VwZXIodHJhbnNmb3JtLCBzY2VuZSwgcHJvcGVydGllcyk7XG4gICAgICAgICAgICB0aGlzLnJvdGF0ZVNwZWVkID0gdGhpcy5nZXRFZGl0b3JQcm9wZXJ0eShcInJvdGF0ZVNwZWVkXCIsIHRoaXMucm90YXRlU3BlZWQpO1xuICAgICAgICB9XG5cbiAgICAgICAgcHJvdGVjdGVkIHN0YXJ0KCk6IHZvaWQge1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCI9PT0+IFN0YXJ0aW5nIGl0ZW0gcm90YXRvciBmb3I6IFwiICsgdGhpcy50cmFuc2Zvcm0ubmFtZSk7XG4gICAgICAgIH1cblxuICAgICAgICBwcm90ZWN0ZWQgdXBkYXRlKCk6IHZvaWQge1xuICAgICAgICAgICAgY29uc3QgZGVsdGE6bnVtYmVyID0gdGhpcy5nZXREZWx0YVNlY29uZHMoKTtcbiAgICAgICAgICAgIHRoaXMudHJhbnNmb3JtLmFkZFJvdGF0aW9uKDAsICh0aGlzLnJvdGF0ZVNwZWVkICogZGVsdGEpLCAwKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHByb3RlY3RlZCBkZXN0cm95KCk6IHZvaWR7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIj09PT4gRGVzdHJveWluZyBpdGVtIHJvdGF0b3IgZm9yOiBcIiArIHRoaXMudHJhbnNmb3JtLm5hbWUpO1xuICAgICAgICB9XG4gICAgfVxufSIsIm1vZHVsZSBQUk9KRUNUIHtcbiAgICAvKipcbiAgICAgKiBCYWJ5bG9uIFNjcmlwdCBDb21wb25lbnRcbiAgICAgKiBAY2xhc3MgVGVzdEFuaW1hdGlvblxuICAgICAqL1xuICAgIGV4cG9ydCBjbGFzcyBUZXN0QW5pbWF0aW9uIGV4dGVuZHMgQkFCWUxPTi5TY3JpcHRDb21wb25lbnQge1xuICAgICAgICAvL3ByaXZhdGUgYW5pbWF0b3I6QkFCWUxPTi5BbmltYXRpb25TdGF0ZSA9IG51bGw7XG4gICAgICAgIHByaXZhdGUgYW5pbWF0b3I6YW55ID0gbnVsbDtcbiAgICAgICAgcHVibGljIGNvbnN0cnVjdG9yKHRyYW5zZm9ybTogQkFCWUxPTi5UcmFuc2Zvcm1Ob2RlLCBzY2VuZTogQkFCWUxPTi5TY2VuZSwgcHJvcGVydGllczogYW55ID0ge30pIHtcbiAgICAgICAgICAgIHN1cGVyKHRyYW5zZm9ybSwgc2NlbmUsIHByb3BlcnRpZXMpO1xuICAgICAgICB9XG5cbiAgICAgICAgcHJvdGVjdGVkIHN0YXJ0KCk6IHZvaWQge1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCI9PT0+IFN0YXJ0aW5nIGFuaW1hdGlvbiB0ZXN0IGZvcjogXCIgKyB0aGlzLnRyYW5zZm9ybS5uYW1lKTtcbiAgICAgICAgICAgIHRoaXMuYW5pbWF0b3IgPSB0aGlzLmdldENvbXBvbmVudChcIkJBQllMT04uQW5pbWF0aW9uU3RhdGVcIik7XG4gICAgICAgICAgICBpZiAodGhpcy5hbmltYXRvciA9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgQkFCWUxPTi5Ub29scy5XYXJuKFwiRmFpbGVkIHRvIGdldCBhbmltYXRpb24gc3RhdGUgY29tcG9uZW50OiBcIiArIHRoaXMudHJhbnNmb3JtLm5hbWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcHJvdGVjdGVkIHVwZGF0ZSgpOiB2b2lkIHtcbiAgICAgICAgICAgIC8vIFVwZGF0ZSByZW5kZXIgbG9vcCBmdW5jdGlvblxuICAgICAgICB9XG5cbiAgICAgICAgcHJvdGVjdGVkIGFmdGVyKCk6IHZvaWQge1xuICAgICAgICAgICAgLy8gQWZ0ZXIgcmVuZGVyIGxvb3AgZnVuY3Rpb25cbiAgICAgICAgfVxuXG4gICAgICAgIHByb3RlY3RlZCBkZXN0cm95KCk6IHZvaWQge1xuICAgICAgICAgICAgLy8gRGVzdHJveSBjb21wb25lbnQgZnVuY3Rpb25cbiAgICAgICAgfVxuICAgIH1cbn0iLCJtb2R1bGUgUFJPSkVDVCB7XG4gICAgLyoqXG4gICAgICogQmFieWxvbiBTY3JpcHQgQ29tcG9uZW50XG4gICAgICogQGNsYXNzIFRlc3RDb2xsaXNpb25cbiAgICAgKi9cbiAgICBleHBvcnQgY2xhc3MgVGVzdENvbGxpc2lvbiBleHRlbmRzIEJBQllMT04uU2NyaXB0Q29tcG9uZW50IHtcblxuICAgICAgICBwcml2YXRlIHJpZ2lkYm9keTpCQUJZTE9OLlJpZ2lkYm9keVBoeXNpY3MgPSBudWxsO1xuXG4gICAgICAgIHB1YmxpYyBjb25zdHJ1Y3Rvcih0cmFuc2Zvcm06IEJBQllMT04uVHJhbnNmb3JtTm9kZSwgc2NlbmU6IEJBQllMT04uU2NlbmUsIHByb3BlcnRpZXM6IGFueSA9IHt9KSB7XG4gICAgICAgICAgICBzdXBlcih0cmFuc2Zvcm0sIHNjZW5lLCBwcm9wZXJ0aWVzKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHByb3RlY3RlZCBzdGFydCgpOiB2b2lkIHtcbiAgICAgICAgICAgIC8vIFN0YXJ0IHJlbmRlciBsb29wIGZ1bmN0aW9uXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIlRlc3QgY29sbGlzaW9uIGZvcjogXCIgKyB0aGlzLnRyYW5zZm9ybS5uYW1lKTtcbiAgICAgICAgICAgIHRoaXMucmlnaWRib2R5ID0gdGhpcy5nZXRDb21wb25lbnQoXCJCQUJZTE9OLlJpZ2lkYm9keVBoeXNpY3NcIik7XG4gICAgICAgICAgICBpZiAodGhpcy5yaWdpZGJvZHkgIT0gbnVsbCkge1xuXG4gICAgICAgICAgICAgICAgdGhpcy5yaWdpZGJvZHkucmVnaXN0ZXJPbkNvbGxpc2lvbkVudGVyKChtZXNoOkJBQllMT04uQWJzdHJhY3RNZXNoKT0+e1xuICAgICAgICAgICAgICAgICAgICBjb25zdCB0YWc6c3RyaW5nID0gQkFCWUxPTi5TY2VuZU1hbmFnZXIuR2V0VHJhbnNmb3JtVGFnKG1lc2gpO1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIiMjIzogXCIgKyB0aGlzLnRyYW5zZm9ybS5uYW1lICsgXCI6IEJlZ2luIENvbnRhY3QgV2l0aDogXCIgKyBtZXNoLm5hbWUpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIHRoaXMucmlnaWRib2R5LnJlZ2lzdGVyT25Db2xsaXNpb25TdGF5KChtZXNoOkJBQllMT04uQWJzdHJhY3RNZXNoKT0+e1xuICAgICAgICAgICAgICAgICAgICBjb25zdCB0YWc6c3RyaW5nID0gQkFCWUxPTi5TY2VuZU1hbmFnZXIuR2V0VHJhbnNmb3JtVGFnKG1lc2gpO1xuICAgICAgICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKFwiIyMjOiBcIiArIHRoaXMudHJhbnNmb3JtLm5hbWUgKyBcIjogVXBkYXRlIENvbnRhY3QgV2l0aDogXCIgKyBtZXNoLm5hbWUpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIHRoaXMucmlnaWRib2R5LnJlZ2lzdGVyT25Db2xsaXNpb25FeGl0KChtZXNoOkJBQllMT04uQWJzdHJhY3RNZXNoKT0+e1xuICAgICAgICAgICAgICAgICAgICBjb25zdCB0YWc6c3RyaW5nID0gQkFCWUxPTi5TY2VuZU1hbmFnZXIuR2V0VHJhbnNmb3JtVGFnKG1lc2gpO1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oXCIjIyM6IFwiICsgdGhpcy50cmFuc2Zvcm0ubmFtZSArIFwiOiBFbmQgQ29udGFjdCBXaXRoOiBcIiArIG1lc2gubmFtZSk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybihcIkZhaWxlZCB0byBsb2NhdGUgcmlnaWRib2R5IGNvbXBvbmVudCBmb3I6IFwiICsgdGhpcy50cmFuc2Zvcm0ubmFtZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBwcm90ZWN0ZWQgdXBkYXRlKCk6IHZvaWQge1xuICAgICAgICAgICAgLy8gVXBkYXRlIHJlbmRlciBsb29wIGZ1bmN0aW9uXG4gICAgICAgIH1cblxuICAgICAgICBwcm90ZWN0ZWQgYWZ0ZXIoKTogdm9pZCB7XG4gICAgICAgICAgICAvLyBBZnRlciByZW5kZXIgbG9vcCBmdW5jdGlvblxuICAgICAgICB9XG5cbiAgICAgICAgcHJvdGVjdGVkIGRlc3Ryb3koKTogdm9pZCB7XG4gICAgICAgICAgICAvLyBEZXN0cm95IGNvbXBvbmVudCBmdW5jdGlvblxuICAgICAgICB9XG4gICAgfVxufSIsIm1vZHVsZSBQUk9KRUNUIHtcbiAgICAvKipcbiAgICAgKiBCYWJ5bG9uIFNjcmlwdCBDb21wb25lbnRcbiAgICAgKiBAY2xhc3MgVGVzdENvbnRyb2xsZXJcbiAgICAgKi9cbiAgICBleHBvcnQgY2xhc3MgVGVzdENvbnRyb2xsZXIgZXh0ZW5kcyBCQUJZTE9OLlNjcmlwdENvbXBvbmVudCB7XG4gICAgICAgIHByaXZhdGUgdGVzdFRleHR1cmU6YW55ID0gbnVsbDtcbiAgICAgICAgcHJpdmF0ZSBtX3BoeXNpY3NXb3JsZDphbnkgPSBudWxsO1xuICAgICAgICBwcm90ZWN0ZWQgbV9waHlzaWNzRW5naW5lOkJBQllMT04uSVBoeXNpY3NFbmdpbmUgPSBudWxsO1xuICAgICAgICBwdWJsaWMgY29uc3RydWN0b3IodHJhbnNmb3JtOiBCQUJZTE9OLlRyYW5zZm9ybU5vZGUsIHNjZW5lOiBCQUJZTE9OLlNjZW5lLCBwcm9wZXJ0aWVzOiBhbnkgPSB7fSkge1xuICAgICAgICAgICAgc3VwZXIodHJhbnNmb3JtLCBzY2VuZSwgcHJvcGVydGllcyk7XG4gICAgICAgICAgICB0aGlzLnRlc3RUZXh0dXJlID0gdGhpcy5nZXRFZGl0b3JQcm9wZXJ0eShcInRlc3RUZXh0dXJlXCIsIHRoaXMudGVzdFRleHR1cmUpO1xuICAgICAgICB9XG5cbiAgICAgICAgcHJvdGVjdGVkIGFzeW5jIHN0YXJ0KCk6IFByb21pc2U8dm9pZD4ge1xuICAgICAgICAgICAgLy8gU3RhcnQgcmVuZGVyIGxvb3AgZnVuY3Rpb25cbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiPT09PiBTdGFydGluZyB0ZXN0IGNvbnRyb2xsZXIuLi5cIik7XG4gICAgICAgICAgICB0aGlzLm1fcGh5c2ljc1dvcmxkID0gQkFCWUxPTi5TY2VuZU1hbmFnZXIuR2V0UGh5c2ljc1dvcmxkKHRoaXMuc2NlbmUpO1xuICAgICAgICAgICAgdGhpcy5tX3BoeXNpY3NFbmdpbmUgPSBCQUJZTE9OLlNjZW5lTWFuYWdlci5HZXRQaHlzaWNzRW5naW5lKHRoaXMuc2NlbmUpO1xuXG4gICAgICAgICAgICAvKlxuICAgICAgICAgICAgY29uc29sZS5sb2coXCI9PT0+IFRlc3QgVGV4dHVyZVwiKTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKHRoaXMudGVzdFRleHR1cmUpO1xuICAgICAgICAgICAgY29uc3QgYmFieWxvblRleHR1cmU6QkFCWUxPTi5UZXh0dXJlID0gQkFCWUxPTi5VdGlsaXRpZXMuUGFyc2VUZXh0dXJlKHRoaXMudGVzdFRleHR1cmUsIHRoaXMuc2NlbmUpO1xuICAgICAgICAgICAgY29uc29sZS5sb2coYmFieWxvblRleHR1cmUpO1xuICAgICAgICAgICAgY29uc3QgdGVzdFByb2plY3RvcjpCQUJZTE9OLkFic3RyYWN0TWVzaCA9IEJBQllMT04uU2NlbmVNYW5hZ2VyLkdldEFic3RyYWN0TWVzaCh0aGlzLnNjZW5lLCBcIlRlc3RQcm9qZWN0b3JcIik7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oXCIqKiogRk9VTkQgVEVTVCBQUk9KRUNUT1IgKioqXCIpO1xuICAgICAgICAgICAgY29uc29sZS5sb2codGVzdFByb2plY3Rvcik7XG4gICAgICAgICAgICBsZXQgYW5nbGU6bnVtYmVyID0gTWF0aC5QSSAvIDM7XG4gICAgICAgICAgICBsZXQgbGlnaHQgPSBuZXcgQkFCWUxPTi5TcG90TGlnaHQoXG4gICAgICAgICAgICAgICAgXCJMaWdodFwiLFxuICAgICAgICAgICAgICAgIHRlc3RQcm9qZWN0b3IucG9zaXRpb24uY2xvbmUoKSxcbiAgICAgICAgICAgICAgICBuZXcgQkFCWUxPTi5WZWN0b3IzKDAsIC0xLCAwKSxcbiAgICAgICAgICAgICAgICBhbmdsZSxcbiAgICAgICAgICAgICAgICAxLFxuICAgICAgICAgICAgICAgIHRoaXMuc2NlbmVcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgICBsaWdodC5kaWZmdXNlLmNvcHlGcm9tRmxvYXRzKDEsIDEsIDEpO1xuICAgICAgICAgICAgbGlnaHQuc3BlY3VsYXIuY29weUZyb21GbG9hdHMoMC4wMSwgMC4wMSwgMC4wMSk7XG4gICAgICAgICAgICBsaWdodC5pbnRlbnNpdHkgPSA1MDtcbiAgICAgICAgICAgIGxpZ2h0LnByb2plY3Rpb25UZXh0dXJlID0gYmFieWxvblRleHR1cmU7XG4gICAgICAgICAgICAvL2xldCBkeW5UZXh0dXJlID0gbmV3IEJBQllMT04uRHluYW1pY1RleHR1cmUoXCJUZXh0dXJlXCIsIHt3aWR0aDogNTEyLCBoZWlnaHQ6IDUxMn0sIHRoaXMuc2NlbmUsIHRydWUpO1xuICAgICAgICAgICAgLy9keW5UZXh0dXJlLmRyYXdUZXh0KFwiVEVTVFwiLCA4MCwgMjU2LCBcImJvbGQgMTAwcHggQXJpYWxcIiwgXCJ3aGl0ZVwiLCBcImJsYWNrXCIsIHRydWUsIHRydWUpO1xuICAgICAgICAgICAgLy9saWdodC5wcm9qZWN0aW9uVGV4dHVyZSA9IGR5blRleHR1cmU7ICAgIFxuICAgICAgICAgICAgKi9cblxuICAgICAgICAgICAgLy9CQUJZTE9OLlNjZW5lTG9hZGVyLkltcG9ydE1lc2goXCJcIiwgXCJzY2VuZXMvXCIsIFwiQUJvdC5iYWJ5bG9uXCIsIHRoaXMuc2NlbmUsIGZ1bmN0aW9uIChuZXdNZXNoZXM6QkFCWUxPTi5BYnN0cmFjdE1lc2hbXSkge1xuICAgICAgICAgICAgLy8gICAgY29uc29sZS53YXJuKFwiKioqIExPQURFRCBORVcgTUVTSEVTICoqKlwiKTtcbiAgICAgICAgICAgIC8vICAgIGNvbnNvbGUubG9nKG5ld01lc2hlcyk7XG4gICAgICAgICAgICAvL30pO1xuXG4gICAgICAgICAgICAvL3ZhciBwbTpCQUJZTE9OLlBCUk1hdGVyaWFsO1xuICAgICAgICAgICAgLy92YXIgc206QkFCWUxPTi5TdGFuZGFyZE1hdGVyaWFsO1xuXG4gICAgICAgICAgICAvKlxuICAgICAgICAgICAgY29uc29sZS5sb2coXCI9PT0+IENyZWF0ZSB0ZXN0IHByZWZhYnMuLi5cIik7XG4gICAgICAgICAgICBjb25zdCByb290OkJBQllMT04uVHJhbnNmb3JtTm9kZSA9IEJBQllMT04uU2NlbmVNYW5hZ2VyLkdldE1lc2godGhpcy5zY2VuZSwgXCJfX3Jvb3RfX1wiKTtcbiAgICAgICAgICAgIEJBQllMT04uU2NlbmVNYW5hZ2VyLkluc3RhbnRpYXRlUHJlZmFiKHRoaXMuc2NlbmUsIFwiUmVteSAxXCIsIFwiTmV3IFJlbXkgMVwiLCByb290KTtcbiAgICAgICAgICAgIEJBQllMT04uU2NlbmVNYW5hZ2VyLkluc3RhbnRpYXRlUHJlZmFiKHRoaXMuc2NlbmUsIFwiUmVteSAyXCIsIFwiTmV3IFJlbXkgMlwiLCByb290KTtcbiAgICAgICAgICAgIEJBQllMT04uU2NlbmVNYW5hZ2VyLkluc3RhbnRpYXRlUHJlZmFiKHRoaXMuc2NlbmUsIFwiQ3ViZSAxXCIsIFwiTmV3IEN1YmUgMVwiLCByb290KTtcbiAgICAgICAgICAgIEJBQllMT04uU2NlbmVNYW5hZ2VyLkluc3RhbnRpYXRlUHJlZmFiKHRoaXMuc2NlbmUsIFwiQ3ViZSAyXCIsIFwiTmV3IEN1YmUgMlwiLCByb290KTtcbiAgICAgICAgICAgIEJBQllMT04uU2NlbmVNYW5hZ2VyLkluc3RhbnRpYXRlUHJlZmFiKHRoaXMuc2NlbmUsIFwiU3BoZXJlIDFcIiwgXCJOZXcgU3BoZXJlIDFcIiwgcm9vdCk7XG4gICAgICAgICAgICBCQUJZTE9OLlNjZW5lTWFuYWdlci5JbnN0YW50aWF0ZVByZWZhYih0aGlzLnNjZW5lLCBcIlNwaGVyZSAyXCIsIFwiTmV3IFNwaGVyZSAyXCIsIHJvb3QpO1xuICAgICAgICAgICAgQkFCWUxPTi5TY2VuZU1hbmFnZXIuSW5zdGFudGlhdGVQcmVmYWIodGhpcy5zY2VuZSwgXCJDYXBzdWxlIDFcIiwgXCJOZXcgQ2Fwc3VsZSAxXCIsIHJvb3QpO1xuICAgICAgICAgICAgQkFCWUxPTi5TY2VuZU1hbmFnZXIuSW5zdGFudGlhdGVQcmVmYWIodGhpcy5zY2VuZSwgXCJDYXBzdWxlIDJcIiwgXCJOZXcgQ2Fwc3VsZSAyXCIsIHJvb3QpO1xuICAgICAgICAgICAgKi9cbiAgICAgICAgXG4gICAgICAgICAgICAvLyBJbXBvcnQgYXV0aG9yZWQgc2NlbmVcbiAgICAgICAgICAgIC8vdmFyIG5ld01lc2hlcyA9IChhd2FpdCBCQUJZTE9OLlNjZW5lTG9hZGVyLkltcG9ydE1lc2hBc3luYyhcIlwiLCBcImh0dHBzOi8vbWFja2V5azI0LmdpdGh1Yi5pby90ZW1wL1Rlc3RQaHlzaWNzLmdsYlwiLCBcIlwiLCB0aGlzLnNjZW5lKSkubWVzaGVzO1xuICAgICAgICAgICAgLy9jb25zb2xlLndhcm4oXCJXVEY6IFRoYXQgV29ya2VkXCIpO1xuICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhuZXdNZXNoZXMpO1xuXG4gICAgICAgICAgICAvLyBMb2FkIFRlc3QgUmVteSBNZXNoZXNcbiAgICAgICAgICAgIC8vQkFCWUxPTi5TY2VuZUxvYWRlci5JbXBvcnRNZXNoKFwiXCIsIFwic2NlbmVzL1wiLCBcIlJlbXkuZ2x0ZlwiLCB0aGlzLnNjZW5lLCBmdW5jdGlvbiAobmV3TWVzaGVzOkJBQllMT04uQWJzdHJhY3RNZXNoW10pIHtcbiAgICAgICAgICAgIC8vICAgIGNvbnNvbGUud2FybihcIioqKiBMT0FERUQgTkVXIE1FU0hFUyAqKipcIik7XG4gICAgICAgICAgICAvLyAgICBjb25zb2xlLmxvZyhuZXdNZXNoZXMpO1xuICAgICAgICAgICAgLy99KTsgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vbGV0IGJveCA9IEJBQllMT04uTWVzaC5DcmVhdGVCb3goXCJUZXN0IEJveFwiLCAxLCB0aGlzLnNjZW5lKTtcbiAgICAgICAgICAgIC8vYm94LnBvc2l0aW9uLnggKz0gMjtcbiAgICAgICAgICAgIC8vYm94LnBvc2l0aW9uLnkgKz0gMjtcblxuICAgICAgICAgICAgLypcbiAgICAgICAgICAgIHZhciBmb250X25hbWVzOnN0cmluZ1tdID0gW1wiQXJpYWxcIiwgXCJIZWx2ZXRpY2FcIiwgXCJTYW5zLVNlcmlmXCIsIFwiQ29taWNTYW5zXCIsIFwiSnVyYVwiLCBcIkhpcnVrb1Byby1Cb29rXCIsIFwiV2ViR0wtRGluZ3NcIl07XG4gICAgICAgICAgICB2YXIgbGluZV9oZWlnaHQ6bnVtYmVyID0gMTtcbiAgICAgICAgICAgIHZhciB1cHBlcl9vZmZzZXQ6bnVtYmVyID0gKGxpbmVfaGVpZ2h0ICogLTEuMCk7XG4gICAgICAgICAgICB2YXIgbWlkZGxlX29mZnNldDpudW1iZXIgPSAobGluZV9oZWlnaHQgKiAtMC4zMyk7XG4gICAgICAgICAgICB2YXIgbG93ZXJfb2Zmc2V0Om51bWJlciA9IChsaW5lX2hlaWdodCAqIDAuMjUpO1xuICAgICAgICAgICAgdmFyIHlfcG9zaXRpb246bnVtYmVyID0gdXBwZXJfb2Zmc2V0O1xuICAgICAgICAgICAgdmFyIHpfcG9zaXRpb246bnVtYmVyID0gMDtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgdmFyIHduZDphbnkgPSB3aW5kb3c7XG4gICAgICAgICAgICB2YXIgV3JpdGVyID0gd25kLkJBQllMT04uTWVzaFdyaXRlcih0aGlzLnNjZW5lLCB7c2NhbGU6IDEuMH0pO1xuICAgICAgICAgICAgdmFyIHRleHQxICA9IG5ldyBXcml0ZXIoXCJIZWxsbyBXb3JsZFwiLCB7XG4gICAgICAgICAgICAgICAgICAgIFwiYW5jaG9yXCI6IFwibGVmdFwiLFxuICAgICAgICAgICAgICAgICAgICBcImZvbnQtZmFtaWx5XCIgOiBcIkFyaWFsXCIsIFxuICAgICAgICAgICAgICAgICAgICBcImxldHRlci1oZWlnaHRcIjogbGluZV9oZWlnaHQsXG4gICAgICAgICAgICAgICAgICAgIFwibGV0dGVyLXRoaWNrbmVzc1wiOiAwLjAxLFxuICAgICAgICAgICAgICAgICAgICBcInBvc2l0aW9uXCIgOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBcInlcIiA6IHlfcG9zaXRpb24sXG4gICAgICAgICAgICAgICAgICAgICAgICBcInpcIiA6IHpfcG9zaXRpb25cbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgXCJhbHBoYVwiIDogMSxcbiAgICAgICAgICAgICAgICAgICAgXCJjb2xvcnNcIiA6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiZGlmZnVzZVwiOiBcIiNGMEYwRjBcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiYW1iaWVudFwiIDogXCIjRjBGMEYwXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBcInNwZWN1bGFyXCIgOiBcIiMwMDAwMDBcIiwgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJlbWlzc2l2ZVwiOiBcIiM4MDgwODBcIixcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICk7IFxuICAgICAgICAgICAgdmFyIG5wOkJBQllMT04uQWJzdHJhY3RNZXNoID0gQkFCWUxPTi5TY2VuZU1hbmFnZXIuR2V0TWVzaCh0aGlzLnNjZW5lLCBcIk5ldyBUZXh0XCIpO1xuICAgICAgICAgICAgdmFyIG14OkJBQllMT04uQWJzdHJhY3RNZXNoID0gdGV4dDEuZ2V0TWVzaCgpO1xuICAgICAgICAgICAgbXgucm90YXRpb24gPSBuZXcgQkFCWUxPTi5WZWN0b3IzKC1NYXRoLlBJLzIsIE1hdGguUEkvMiwgLU1hdGguUEkvMik7XG4gICAgICAgICAgICBteC5wYXJlbnQgPSBucDtcbiAgICAgICAgICAgICovXG4gICAgICAgIH1cblxuICAgICAgICBwcml2YXRlIHJhbjpib29sZWFuID0gZmFsc2U7XG4gICAgICAgIHByb3RlY3RlZCB1cGRhdGUoKTogdm9pZCB7XG4gICAgICAgICAgICAvLyBVcGRhdGUgcmVuZGVyIGxvb3AgZnVuY3Rpb25cbiAgICAgICAgICAgIC8vIGNvbnN0IG51bV9tYW5pZm9sZHM6bnVtYmVyID0gdGhpcy5tX3BoeXNpY3NXb3JsZC5nZXRCcm9hZHBoYXNlKCkuZ2V0T3ZlcmxhcHBpbmdQYWlyQ2FjaGUoKS5nZXROdW1PdmVybGFwcGluZ1BhaXJzKCk7XG4gICAgICAgICAgICAvL2NvbnN0IG51bV9tYW5pZm9sZHM6bnVtYmVyID0gdGhpcy5tX3BoeXNpY3NXb3JsZC5nZXREaXNwYXRjaGVyKCkuZ2V0TnVtTWFuaWZvbGRzKCk7XG4gICAgICAgICAgICAvL2NvbnN0IG1zZyA9IFwiVG90YWwgT3ZlcmxhcHBpbmcgUGFyaXM6IFwiICsgbnVtX21hbmlmb2xkcztcbiAgICAgICAgICAgIC8vQkFCWUxPTi5VdGlsaXRpZXMuUHJpbnRUb1NjcmVlbihtc2cpOyAgIFxuICAgICAgICAgICAgLy8gVGVzdCBSdW5uaW5nIExvb3BcbiAgICAgICAgICAgIC8vaWYgKHRoaXMucmFuID09PSBmYWxzZSkge1xuICAgICAgICAgICAgLy8gICAgdGhpcy5yYW4gPSB0cnVlO1xuICAgICAgICAgICAgLy8gICAgXG4gICAgICAgICAgICAvL31cbiAgICAgICAgfVxuXG4gICAgICAgIHByb3RlY3RlZCBhZnRlcigpOiB2b2lkIHtcbiAgICAgICAgICAgIC8vIEFmdGVyIHJlbmRlciBsb29wIGZ1bmN0aW9uXG4gICAgICAgIH1cblxuICAgICAgICBwcm90ZWN0ZWQgZGVzdHJveSgpOiB2b2lkIHtcbiAgICAgICAgICAgIC8vIERlc3Ryb3kgY29tcG9uZW50IGZ1bmN0aW9uXG4gICAgICAgIH1cbiAgICB9XG59Il19

// Project Data Store
if (navigator.dataStore == null) navigator.dataStore = {};

navigator.dataStore['manifest'] = JSON.parse(window.atob("ewogICJuYW1lIjogIiMjI1RJVExFIyMjIiwKICAic2hvcnRfbmFtZSI6ICIjIyNTSE9SVCMjIyIsCiAgInRoZW1lX2NvbG9yIjogIiMjI1NQTEFTSCMjIyIsCiAgImJhY2tncm91bmRfY29sb3IiOiAiIyMjU1BMQVNIIyMjIiwKICAib3JpZW50YXRpb24iOiAiIyMjT1JJRU5UIyMjIiwgIAogICJkaXNwbGF5IjogIiMjI0RJU1BMQVkjIyMiLAogICJzdGFydF91cmwiOiAiIyMjU1RBUlQjIyMiLAogICJpY29ucyI6IFsKICAgIHsKICAgICAgInNyYyI6ICJpY29ucy9pY29uLTcyeDcyLnBuZyIsCiAgICAgICJzaXplcyI6ICI3Mng3MiIsCiAgICAgICJ0eXBlIjogImltYWdlL3BuZyIKICAgIH0sCiAgICB7CiAgICAgICJzcmMiOiAiaWNvbnMvaWNvbi05Nng5Ni5wbmciLAogICAgICAic2l6ZXMiOiAiOTZ4OTYiLAogICAgICAidHlwZSI6ICJpbWFnZS9wbmciCiAgICB9LAogICAgewogICAgICAic3JjIjogImljb25zL2ljb24tMTI4eDEyOC5wbmciLAogICAgICAic2l6ZXMiOiAiMTI4eDEyOCIsCiAgICAgICJ0eXBlIjogImltYWdlL3BuZyIKICAgIH0sCiAgICB7CiAgICAgICJzcmMiOiAiaWNvbnMvaWNvbi0xNDR4MTQ0LnBuZyIsCiAgICAgICJzaXplcyI6ICIxNDR4MTQ0IiwKICAgICAgInR5cGUiOiAiaW1hZ2UvcG5nIgogICAgfSwKICAgIHsKICAgICAgInNyYyI6ICJpY29ucy9pY29uLTE1MngxNTIucG5nIiwKICAgICAgInNpemVzIjogIjE1MngxNTIiLAogICAgICAidHlwZSI6ICJpbWFnZS9wbmciCiAgICB9LAogICAgewogICAgICAic3JjIjogImljb25zL2ljb24tMTkyeDE5Mi5wbmciLAogICAgICAic2l6ZXMiOiAiMTkyeDE5MiIsCiAgICAgICJ0eXBlIjogImltYWdlL3BuZyIKICAgIH0sCiAgICB7CiAgICAgICJzcmMiOiAiaWNvbnMvaWNvbi0zODR4Mzg0LnBuZyIsCiAgICAgICJzaXplcyI6ICIzODR4Mzg0IiwKICAgICAgInR5cGUiOiAiaW1hZ2UvcG5nIgogICAgfSwKICAgIHsKICAgICAgInNyYyI6ICJpY29ucy9pY29uLTUxMng1MTIucG5nIiwKICAgICAgInNpemVzIjogIjUxMng1MTIiLAogICAgICAidHlwZSI6ICJpbWFnZS9wbmciCiAgICB9CiAgXQp9"));


// Project Shader Store
// Project Shader Chunks
