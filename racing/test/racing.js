window.BabylonToolkitLicense = "I-ABCDEF12345";

// Xbox Project Shim Services
var EnableXboxLiveServices = true;

// babylon.toolkit.js
var BABYLON;!function(e){var t=function(){function e(e){this.motion=e.motion,this.posX=e.posX||0,this.posY=e.posY,this.weight=e.weight||0}return e.GetIdleBlendTree=function(e){for(var t=0,i=e;t<i.length;t++){var r=i[t];if(0===r.posX&&0===r.posY)return r}return null},e.GetDefaultIdleBlendTree=function(){return e.DefaultIdleBlendTree},e.DefaultIdleBlendTree=new e({motion:"Idle",posX:0,posY:0}),e}();e.BlendTreeValue=t;var i=function(){function t(){}return t.ZCross=function(e,t){return e.x*t.y-t.x*e.y},t.ClampValue=function(e,t,i){return e<=t?t:e>=i?i:e},t.ClampVector=function(i,r,s){var o=e.Vector3.Zero();return t.ClampVectorToRef(i,r,s,o),o},t.ClampVectorToRef=function(e,i,r,s){null!=s&&(s.x=t.ClampValue(e.x,i,r),s.y=t.ClampValue(e.y,i,r),s.z=t.ClampValue(e.z,i,r))},t.GetSignedAngle=function(e,t){return Math.atan2(e.x*t.y-e.y*t.x,e.x*t.x+e.y*t.y)},t.GetBarycentricVector=function(i,r,s,o){var n=e.Vector3.Zero();return t.GetBarycentricVectorToRef(i,r,s,o,n),n},t.GetBarycentricVectorToRef=function(e,i,r,s,o){t.TempVector2_AB.set(0,0),t.TempVector2_AB.set(0,0),t.TempVector2_AB.set(0,0),r.subtractToRef(i,t.TempVector2_AB),s.subtractToRef(i,t.TempVector2_AC),e.subtractToRef(i,t.TempVector2_AP);var n=1/t.ZCross(t.TempVector2_AB,t.TempVector2_AC),a=n*t.ZCross(t.TempVector2_AB,t.TempVector2_AP),l=n*t.ZCross(t.TempVector2_AP,t.TempVector2_AC),h=1-a-l;null!=o&&(o.x=h,o.y=a,o.z=l)},t.GetLinearInterpolation=function(e,t,i,r,s){return t+(s-e)*((r-t)/(i-e))},t.TempVector2_AB=new e.Vector2(0,0),t.TempVector2_AC=new e.Vector2(0,0),t.TempVector2_AP=new e.Vector2(0,0),t}();e.BlendTreeUtils=i;var r=function(){function r(){}return r.Calculate1DSimpleBlend=function(e,t){var s=t[0],o=t[t.length-1];if(e<=s.posY)s.weight=1;else if(e>=o.posY)o.weight=1;else{var n=r.GetRightNeighbourBlendTreeIndex(e,t),a=t[n-1],l=t[n],h=i.GetLinearInterpolation(a.posY,1,l.posY,0,e);a.weight=h,l.weight=1-a.weight}},r.Calculate2DSimpleDirectional=function(e,s,o){r.TempVector2_IP.set(e,s),r.TempVector2_TA.set(0,0),r.TempVector2_TB.set(0,0),r.TempVector2_TC.set(0,0),r.TempVector3_BARY.set(0,0,0);var n=!0,a=t.GetIdleBlendTree(o);if(a){var l=o.indexOf(a);o.splice(l,1)}else n=!1,a=t.GetDefaultIdleBlendTree();o.sort(function(e,t){return Math.atan2(e.posY,e.posX)-Math.atan2(t.posY,t.posX)}),o.unshift(a);for(var h=0,u=2;u<o.length;++u)r.TempVector2_TB.set(o[u-1].posX,o[u-1].posY),r.TempVector2_TC.set(o[u].posX,o[u].posY),i.GetBarycentricVectorToRef(r.TempVector2_IP,r.TempVector2_TA,r.TempVector2_TB,r.TempVector2_TC,r.TempVector3_BARY),i.ClampVectorToRef(r.TempVector3_BARY,0,1,r.TempVector3_BARY),r.TempVector3_BARY.z>0&&r.TempVector3_BARY.y>0&&(o[0].weight+=r.TempVector3_BARY.x,o[u-1].weight+=r.TempVector3_BARY.z,o[u].weight+=r.TempVector3_BARY.y,h+=r.TempVector3_BARY.x+r.TempVector3_BARY.y+r.TempVector3_BARY.z);r.TempVector2_TB.set(o[o.length-1].posX,o[o.length-1].posY),r.TempVector2_TC.set(o[1].posX,o[1].posY),i.GetBarycentricVectorToRef(r.TempVector2_IP,r.TempVector2_TA,r.TempVector2_TB,r.TempVector2_TC,r.TempVector3_BARY),i.ClampVectorToRef(r.TempVector3_BARY,0,1,r.TempVector3_BARY),r.TempVector3_BARY.z>0&&r.TempVector3_BARY.y>0&&(o[0].weight+=r.TempVector3_BARY.x,o[o.length-1].weight+=r.TempVector3_BARY.z,o[1].weight+=r.TempVector3_BARY.y,h+=r.TempVector3_BARY.x+r.TempVector3_BARY.y+r.TempVector3_BARY.z);for(var m=0,c=o;m<c.length;m++){var p=c[m];p.weight/=h}if(!n){o.shift();for(var f=a.weight/o.length,_=0,d=o;_<d.length;_++){var p=d[_];p.weight+=f}}},r.Calculate2DFreeformDirectional=function(t,s,o){r.TempVector2_IP.set(t,s),r.TempVector2_POSI.set(0,0),r.TempVector2_POSJ.set(0,0),r.TempVector2_POSIP.set(0,0),r.TempVector2_POSIJ.set(0,0);for(var n=2,a=0,l=r.TempVector2_IP.length(),h=0;h<o.length;++h){var u=o[h];r.TempVector2_POSI.set(u.posX,u.posY);for(var m=r.TempVector2_POSI.length(),c=l-m,p=i.GetSignedAngle(r.TempVector2_POSI,r.TempVector2_IP),f=1,_=0;_<o.length;++_)if(_!==h){r.TempVector2_POSJ.set(o[_].posX,o[_].posY);var d=r.TempVector2_POSJ.length(),y=(m+d)/2,v=c/y,g=(d-m)/y,C=i.GetSignedAngle(r.TempVector2_POSI,r.TempVector2_POSJ);r.TempVector2_POSIP.set(v,p*n),r.TempVector2_POSIJ.set(g,C*n);var S=r.TempVector2_POSIJ.lengthSquared(),b=e.Vector2.Dot(r.TempVector2_POSIP,r.TempVector2_POSIJ)/S;b=1-b,b=i.ClampValue(b,0,1),f=Math.min(b,f)}u.weight=f,a+=f}for(var x=0,T=o;x<T.length;x++){var u=T[x];u.weight/=a}},r.Calculate2DFreeformCartesian=function(t,s,o){r.TempVector2_IP.set(t,s),r.TempVector2_POSI.set(0,0),r.TempVector2_POSJ.set(0,0),r.TempVector2_POSIP.set(0,0),r.TempVector2_POSIJ.set(0,0);for(var n=0,a=0;a<o.length;++a){var l=o[a];r.TempVector2_POSI.set(l.posX,l.posY),r.TempVector2_IP.subtractToRef(r.TempVector2_POSI,r.TempVector2_POSIP);for(var h=1,u=0;u<o.length;++u)if(u!==a){r.TempVector2_POSJ.set(o[u].posX,o[u].posY),r.TempVector2_POSJ.subtractToRef(r.TempVector2_POSI,r.TempVector2_POSIJ);var m=r.TempVector2_POSIJ.lengthSquared(),c=e.Vector2.Dot(r.TempVector2_POSIP,r.TempVector2_POSIJ)/m;c=1-c,c=i.ClampValue(c,0,1),h=Math.min(h,c)}l.weight=h,n+=h}for(var p=0,f=o;p<f.length;p++){var l=f[p];l.weight/=n}},r.GetRightNeighbourBlendTreeIndex=function(e,t){t.sort(function(e,t){return e.posY-t.posY});for(var i=0;i<t.length;++i)if(t[i].posY>e)return i;return-1},r.TempVector2_IP=new e.Vector2(0,0),r.TempVector2_TA=new e.Vector2(0,0),r.TempVector2_TB=new e.Vector2(0,0),r.TempVector2_TC=new e.Vector2(0,0),r.TempVector2_POSI=new e.Vector2(0,0),r.TempVector2_POSJ=new e.Vector2(0,0),r.TempVector2_POSIP=new e.Vector2(0,0),r.TempVector2_POSIJ=new e.Vector2(0,0),r.TempVector3_BARY=new e.Vector3(0,0,0),r}();e.BlendTreeSystem=r}(BABYLON||(BABYLON={}));var __extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function r(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(r.prototype=i.prototype,new r)}}(),BABYLON;!function(e){var t=function(e){function t(t,i,r){return void 0===r&&(r={}),e.call(this,t,i,r)||this}return __extends(t,e),t.prototype.start=function(){this.initAnimationState()},t.prototype.update=function(){},t.prototype.after=function(){},t.prototype.destroy=function(){},t.prototype.initAnimationState=function(){console.warn("Dump Animation State Machine: "+this.transform.name),console.log(this)},t}(e.ScriptComponent);e.AnimationState=t}(BABYLON||(BABYLON={}));var __extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function r(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(r.prototype=i.prototype,new r)}}(),BABYLON;!function(e){var t=function(t){function i(e,i,r){void 0===r&&(r={});var s=t.call(this,e,i,r)||this;return s._audio=null,s._name=null,s._file=null,s._loop=!1,s._mute=!1,s._volume=1,s._pitch=1,s._priority=128,s._panstereo=0,s._mindistance=1,s._maxdistance=50,s._rolloffmode="linear",s._rollofffactor=1,s._playonawake=!0,s._spatialblend=0,s._reverbzonemix=1,s._bypasseffects=!1,s._bypassreverbzones=!1,s._bypasslistenereffects=!1,s._name=s.getEditorProperty("name",s._name),s._file=s.getEditorProperty("file",s._file),s._loop=s.getEditorProperty("loop",s._loop),s._mute=s.getEditorProperty("mute",s._mute),s._volume=s.getEditorProperty("volume",s._volume),s._pitch=s.getEditorProperty("pitch",s._pitch),s._priority=s.getEditorProperty("priority",s._priority),s._panstereo=s.getEditorProperty("panstereo",s._panstereo),s._playonawake=s.getEditorProperty("playonawake",s._playonawake),s._mindistance=s.getEditorProperty("mindistance",s._mindistance),s._maxdistance=s.getEditorProperty("maxdistance",s._maxdistance),s._rolloffmode=s.getEditorProperty("rolloffmode",s._rolloffmode),s._rollofffactor=s.getEditorProperty("rollofffactor",s._rollofffactor),s._spatialblend=s.getEditorProperty("spatialblend",s._spatialblend),s._reverbzonemix=s.getEditorProperty("reverbzonemix",s._reverbzonemix),s._bypasseffects=s.getEditorProperty("bypasseffects",s._bypasseffects),s._bypassreverbzones=s.getEditorProperty("bypassreverbzones",s._bypassreverbzones),s._bypasslistenereffects=s.getEditorProperty("bypasslistenereffects",s._bypasslistenereffects),s}return __extends(i,t),i.prototype.getSoundClip=function(){return this._audio},i.prototype.start=function(){this.initAudioSource()},i.prototype.destroy=function(){this.destroyAudioSource()},i.prototype.initAudioSource=function(){var t=this;if(null!=this._name&&""!==this._name||(this._name="Unknown"),null!=this._file&&""!==this._file){var i=e.SceneManager.GetRootUrl(this.scene),r=this._spatialblend>=.1,s="logarithmic"===this._rolloffmode?"exponential":"linear";this._audio=new e.Sound(this._name,i+this._file,this.scene,function(){t._audio.setVolume(t._mute===!0?0:t._volume),t._audio.setPlaybackRate(t._pitch)},{loop:this._loop,autoplay:this._playonawake,refDistance:this._mindistance,maxDistance:this._maxdistance,rolloffFactor:this._rollofffactor,spatialSound:r,distanceModel:s}),this._audio.setPosition(this.transform.position.clone()),r===!0&&this._audio.attachToMesh(this.transform)}},i.prototype.destroyAudioSource=function(){null!=this._audio&&(this._audio.dispose(),this._audio=null)},i}(e.ScriptComponent);e.AudioSource=t}(BABYLON||(BABYLON={}));var __extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function r(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(r.prototype=i.prototype,new r)}}(),BABYLON;!function(e){var t=function(t){function i(i,r,s){void 0===s&&(s={});var o=t.call(this,i,r,s)||this;return o.cameraType=0,o.mainCamera=!1,o.virtualReality=null,o.multiPlayerSetup=null,o.m_cameraRig=null,o.mainCamera="MainCamera"===o.getTransformTag(),o.cameraType=o.getEditorProperty("mainCameraType",o.cameraType),o.virtualReality=o.getEditorProperty("webVirtualReality",o.virtualReality),o.multiPlayerSetup=o.getEditorProperty("multiPlayerSetup",o.multiPlayerSetup),null!=o.multiPlayerSetup&&(e.UniversalCameraSystem.startupMode=o.multiPlayerSetup.playerStartupMode,e.UniversalCameraSystem.stereoCameras=o.multiPlayerSetup.stereoSideBySide),o}return __extends(i,t),i.prototype.isMainCamera=function(){return this.mainCamera},i.prototype.getCameraType=function(){return this.cameraType},i.prototype.start=function(){this.initCameraSystemState()},i.prototype.update=function(){this.updateCameraSystemState()},i.prototype.destroy=function(){this.destroyCameraSystemState()},i.prototype.initCameraSystemState=function(){if(e.Utilities.ValidateTransformQuaternion(this.transform),this.m_cameraRig=this.getCameraRig(),null!=this.m_cameraRig)if(0===this.cameraType)null==e.UniversalCameraSystem.PlayerOneCamera&&(e.UniversalCameraSystem.PlayerOneCamera=this.m_cameraRig);else if(1===this.cameraType){if(null!=this.virtualReality&&this.virtualReality.experienceHelper===!0){var t=!1,i=null;if(this.virtualReality.useCustomButton===!0&&null!=this.virtualReality.buttonElementID&&""!==this.virtualReality.buttonElementID){var r=document.getElementById(this.virtualReality.buttonElementID);null!=r?(t=!0,i=r):e.Tools.Warn("Babylon.js failed to locate webvr button element id: "+this.virtualReality.buttonElementID)}var s=null,o=null;null!=this.virtualReality.floorMeshesTags&&""!==this.virtualReality.floorMeshesTags||(this.virtualReality.floorMeshesTags="Navigation"),this.virtualReality.enableTeleportation===!0&&(o=this.scene.getMeshesByTags(this.virtualReality.floorMeshesTags)),s=this.virtualReality.enableTeleportation===!0&&null!=o&&o.length>0?{createDeviceOrientationCamera:1===this.virtualReality.defaultCamera,createFallbackVRDeviceOrientationFreeCamera:this.virtualReality.fallbackCamera,laserToggle:this.virtualReality.displayLaserBeam,useCustomVRButton:t,customVRButton:i,rayLength:this.virtualReality.rayCastLength,defaultHeight:this.virtualReality.defaultHeight,positionScale:this.virtualReality.positionScale,floorMeshes:o}:{createDeviceOrientationCamera:1===this.virtualReality.defaultCamera,createFallbackVRDeviceOrientationFreeCamera:this.virtualReality.fallbackCamera,laserToggle:this.virtualReality.displayLaserBeam,useCustomVRButton:t,customVRButton:i,rayLength:this.virtualReality.rayCastLength,defaultHeight:this.virtualReality.defaultHeight,positionScale:this.virtualReality.positionScale},e.UniversalCameraSystem.DefaultControllers=!0;var n=this.scene.createDefaultVRExperience(s);null!=n&&(n.displayGaze=this.virtualReality.displayGazeIcon,this.virtualReality.enableInteractions===!0&&n.enableInteractions(),n.onControllerMeshLoadedObservable.add(function(t,i){"left"===t.hand?e.UniversalCameraSystem.LeftControllerStick=t:"right"===t.hand&&(e.UniversalCameraSystem.RightControllerStick=t)})),e.UniversalCameraSystem.VrCameraHelper=n}}else if(2===this.cameraType){var a=this.m_cameraRig.name;if(null==e.UniversalCameraSystem.PlayerOneCamera){var l=a+".1",h=this.m_cameraRig.clone(l);h.name=l,h.parent=null,h.position=this.transform.position.clone(),h.rotationQuaternion=this.transform.rotationQuaternion.clone(),h.viewport=new e.Viewport(0,0,0,0),h.setEnabled(!1),e.UniversalCameraSystem.PlayerOneCamera=h}if(null==e.UniversalCameraSystem.PlayerTwoCamera){var u=a+".2",m=this.m_cameraRig.clone(u);m.name=u,m.parent=null,m.position=this.transform.position.clone(),m.rotationQuaternion=this.transform.rotationQuaternion.clone(),m.viewport=new e.Viewport(0,0,0,0),m.setEnabled(!1),e.UniversalCameraSystem.PlayerTwoCamera=m}if(null==e.UniversalCameraSystem.PlayerThreeCamera){var c=a+".3",p=this.m_cameraRig.clone(c);p.name=c,p.parent=null,p.position=this.transform.position.clone(),p.rotationQuaternion=this.transform.rotationQuaternion.clone(),p.viewport=new e.Viewport(0,0,0,0),p.setEnabled(!1),e.UniversalCameraSystem.PlayerThreeCamera=p}if(null==e.UniversalCameraSystem.PlayerFourCamera){var f=a+".4",_=this.m_cameraRig.clone(f);_.name=f,_.parent=null,_.position=this.transform.position.clone(),_.rotationQuaternion=this.transform.rotationQuaternion.clone(),_.viewport=new e.Viewport(0,0,0,0),_.setEnabled(!1),e.UniversalCameraSystem.PlayerFourCamera=_}e.UniversalCameraSystem.multiPlayerView=!0,e.UniversalCameraSystem.SetMultiPlayerViewLayout(this.scene,e.UniversalCameraSystem.startupMode)}},i.prototype.updateCameraSystemState=function(){null!=this.m_cameraRig&&(0===this.cameraType||1===this.cameraType||2===this.cameraType)},i.prototype.destroyCameraSystemState=function(){this.virtualReality=null},i.GetPlayerCamera=function(t){return e.UniversalCameraSystem.IsMultiPlayerView()?t===e.PlayerNumber.One?e.UniversalCameraSystem.PlayerOneCamera:t===e.PlayerNumber.Two?e.UniversalCameraSystem.PlayerTwoCamera:t===e.PlayerNumber.Three?e.UniversalCameraSystem.PlayerThreeCamera:t===e.PlayerNumber.Four?e.UniversalCameraSystem.PlayerFourCamera:null:t===e.PlayerNumber.One?null!=e.UniversalCameraSystem.WebVR?e.UniversalCameraSystem.WebVR.currentVRCamera:e.UniversalCameraSystem.PlayerOneCamera:(e.Tools.Warn("Babylon.js multi player camera not available for player: "+t),null)},Object.defineProperty(i,"WebVR",{get:function(){return e.UniversalCameraSystem.VrCameraHelper},enumerable:!0,configurable:!0}),i.GetWebVRLeftController=function(){return e.UniversalCameraSystem.LeftControllerStick},i.GetWebVRRightController=function(){return e.UniversalCameraSystem.RightControllerStick},i.GetWebVRLeftControllerPrefab=function(){return e.UniversalCameraSystem.LeftControllerPrefab},i.GetWebVRRightControllerPrefab=function(){return e.UniversalCameraSystem.RightControllerPrefab},i.ShowWebVRDefaultControllers=function(t,i){void 0===t&&(t=null),void 0===i&&(i=null),null!=e.UniversalCameraSystem.LeftControllerStick&&(e.UniversalCameraSystem.LeftControllerStick.mesh.setEnabled(!1),e.UniversalCameraSystem.LeftControllerStick.attachToMesh(e.UniversalCameraSystem.LeftControllerStick.defaultModel),e.UniversalCameraSystem.LeftControllerStick.mesh.setEnabled(!0),e.UniversalCameraSystem.DefaultControllers=!0),null!=e.UniversalCameraSystem.RightControllerStick&&(e.UniversalCameraSystem.RightControllerStick.mesh.setEnabled(!1),e.UniversalCameraSystem.RightControllerStick.attachToMesh(e.UniversalCameraSystem.RightControllerStick.defaultModel),e.UniversalCameraSystem.RightControllerStick.mesh.setEnabled(!0),e.UniversalCameraSystem.DefaultControllers=!0),null!=e.UniversalCameraSystem.WebVR&&(null!=t&&(e.UniversalCameraSystem.WebVR.displayGaze=t),null!=i&&(e.UniversalCameraSystem.WebVR.displayLaserPointer=i))},i.ShowWebVRCustomControllers=function(t,i){void 0===t&&(t=null),void 0===i&&(i=null),null!=e.UniversalCameraSystem.LeftControllerStick&&(e.UniversalCameraSystem.LeftControllerStick.mesh.setEnabled(!1),e.UniversalCameraSystem.LeftControllerStick.attachToMesh(e.UniversalCameraSystem.LeftControllerPrefab),e.UniversalCameraSystem.LeftControllerStick.mesh.setEnabled(!0),e.UniversalCameraSystem.DefaultControllers=!1),null!=e.UniversalCameraSystem.RightControllerStick&&(e.UniversalCameraSystem.RightControllerStick.mesh.setEnabled(!1),e.UniversalCameraSystem.RightControllerStick.attachToMesh(e.UniversalCameraSystem.RightControllerPrefab),e.UniversalCameraSystem.RightControllerStick.mesh.setEnabled(!0),e.UniversalCameraSystem.DefaultControllers=!1),null!=e.UniversalCameraSystem.WebVR&&(null!=t&&(e.UniversalCameraSystem.WebVR.displayGaze=t),null!=i&&(e.UniversalCameraSystem.WebVR.displayLaserPointer=i))},i.IsStereoCameras=function(){return e.UniversalCameraSystem.stereoCameras},i.IsMultiPlayerView=function(){return e.UniversalCameraSystem.multiPlayerView},i.GetMultiPlayerCount=function(){return e.UniversalCameraSystem.multiPlayerCount},i.ActivateMultiPlayerCameras=function(t){var i=!1;return null!=e.UniversalCameraSystem.multiPlayerCameras&&e.UniversalCameraSystem.multiPlayerCameras.length>0&&(t.activeCameras=e.UniversalCameraSystem.multiPlayerCameras,i=!0),i},i.DisposeMultiPlayerCameras=function(){null!=e.UniversalCameraSystem.PlayerOneCamera&&(e.UniversalCameraSystem.PlayerOneCamera.dispose(),e.UniversalCameraSystem.PlayerOneCamera=null),null!=e.UniversalCameraSystem.PlayerTwoCamera&&(e.UniversalCameraSystem.PlayerTwoCamera.dispose(),e.UniversalCameraSystem.PlayerTwoCamera=null),null!=e.UniversalCameraSystem.PlayerThreeCamera&&(e.UniversalCameraSystem.PlayerThreeCamera.dispose(),e.UniversalCameraSystem.PlayerThreeCamera=null),null!=e.UniversalCameraSystem.PlayerFourCamera&&(e.UniversalCameraSystem.PlayerFourCamera.dispose(),e.UniversalCameraSystem.PlayerFourCamera=null)},i.SetMultiPlayerViewLayout=function(t,i){var r=!1,s=e.Scalar.Clamp(i,1,4);return e.UniversalCameraSystem.IsMultiPlayerView()?(null!=e.UniversalCameraSystem.PlayerOneCamera&&null!=e.UniversalCameraSystem.PlayerTwoCamera&&null!=e.UniversalCameraSystem.PlayerThreeCamera&&null!=e.UniversalCameraSystem.PlayerFourCamera?(e.UniversalCameraSystem.multiPlayerCameras=[],1===s?(e.UniversalCameraSystem.PlayerOneCamera.viewport=new e.Viewport(0,0,1,1),e.UniversalCameraSystem.PlayerTwoCamera.viewport=new e.Viewport(0,0,0,0),e.UniversalCameraSystem.PlayerTwoCamera.setEnabled(!1),e.UniversalCameraSystem.PlayerThreeCamera.viewport=new e.Viewport(0,0,0,0),e.UniversalCameraSystem.PlayerThreeCamera.setEnabled(!1),e.UniversalCameraSystem.PlayerFourCamera.viewport=new e.Viewport(0,0,0,0),e.UniversalCameraSystem.PlayerFourCamera.setEnabled(!1),e.UniversalCameraSystem.multiPlayerCameras.push(e.UniversalCameraSystem.PlayerOneCamera)):2===s?(e.UniversalCameraSystem.stereoCameras===!0?(e.UniversalCameraSystem.PlayerOneCamera.viewport=new e.Viewport(0,0,.5,1),e.UniversalCameraSystem.PlayerTwoCamera.viewport=new e.Viewport(.5,0,.5,1)):(e.UniversalCameraSystem.PlayerOneCamera.viewport=new e.Viewport(0,.5,1,.5),e.UniversalCameraSystem.PlayerTwoCamera.viewport=new e.Viewport(0,0,1,.5)),e.UniversalCameraSystem.PlayerTwoCamera.setEnabled(!0),e.UniversalCameraSystem.PlayerThreeCamera.viewport=new e.Viewport(0,0,0,0),e.UniversalCameraSystem.PlayerThreeCamera.setEnabled(!1),e.UniversalCameraSystem.PlayerFourCamera.viewport=new e.Viewport(0,0,0,0),e.UniversalCameraSystem.PlayerFourCamera.setEnabled(!1),e.UniversalCameraSystem.multiPlayerCameras.push(e.UniversalCameraSystem.PlayerOneCamera),e.UniversalCameraSystem.multiPlayerCameras.push(e.UniversalCameraSystem.PlayerTwoCamera)):3===s?(e.UniversalCameraSystem.PlayerOneCamera.viewport=new e.Viewport(0,0,.5,1),e.UniversalCameraSystem.PlayerTwoCamera.viewport=new e.Viewport(.5,.5,.5,.5),e.UniversalCameraSystem.PlayerTwoCamera.setEnabled(!0),e.UniversalCameraSystem.PlayerThreeCamera.viewport=new e.Viewport(.5,0,.5,.5),e.UniversalCameraSystem.PlayerThreeCamera.setEnabled(!0),e.UniversalCameraSystem.PlayerFourCamera.viewport=new e.Viewport(0,0,0,0),e.UniversalCameraSystem.PlayerFourCamera.setEnabled(!1),e.UniversalCameraSystem.multiPlayerCameras.push(e.UniversalCameraSystem.PlayerOneCamera),e.UniversalCameraSystem.multiPlayerCameras.push(e.UniversalCameraSystem.PlayerTwoCamera),e.UniversalCameraSystem.multiPlayerCameras.push(e.UniversalCameraSystem.PlayerThreeCamera)):4===s?(e.UniversalCameraSystem.PlayerOneCamera.viewport=new e.Viewport(0,.5,.5,.5),e.UniversalCameraSystem.PlayerTwoCamera.viewport=new e.Viewport(0,0,.5,.5),e.UniversalCameraSystem.PlayerTwoCamera.setEnabled(!0),e.UniversalCameraSystem.PlayerThreeCamera.viewport=new e.Viewport(.5,.5,.5,.5),e.UniversalCameraSystem.PlayerThreeCamera.setEnabled(!0),e.UniversalCameraSystem.PlayerFourCamera.viewport=new e.Viewport(.5,0,.5,.5),e.UniversalCameraSystem.PlayerFourCamera.setEnabled(!0),e.UniversalCameraSystem.multiPlayerCameras.push(e.UniversalCameraSystem.PlayerOneCamera),e.UniversalCameraSystem.multiPlayerCameras.push(e.UniversalCameraSystem.PlayerTwoCamera),e.UniversalCameraSystem.multiPlayerCameras.push(e.UniversalCameraSystem.PlayerThreeCamera),e.UniversalCameraSystem.multiPlayerCameras.push(e.UniversalCameraSystem.PlayerFourCamera)):e.Tools.Warn("Babylon.js camera rig invalid player count specified: "+s)):e.Tools.Warn("Babylon.js camera rig failed to initialize multi player cameras"),e.UniversalCameraSystem.multiPlayerCount=s,r=e.UniversalCameraSystem.ActivateMultiPlayerCameras(t),r===!1&&e.Tools.Warn("Babylon.js camera rig failed to initialize multi player views")):e.Tools.Warn("Babylon.js camera rig multi player view option not enabled"),r},i.VrCameraHelper=null,i.DefaultControllers=!0,i.LeftControllerStick=null,i.RightControllerStick=null,i.LeftControllerPrefab=null,i.RightControllerPrefab=null,i.PlayerOneCamera=null,i.PlayerTwoCamera=null,i.PlayerThreeCamera=null,i.PlayerFourCamera=null,i.multiPlayerView=!1,i.multiPlayerCount=1,i.multiPlayerCameras=null,i.stereoCameras=!0,i.startupMode=1,i}(e.ScriptComponent);e.UniversalCameraSystem=t;var i=function(){function t(t,i){void 0===t&&(t=null),void 0===i&&(i=null),this._rotationMatrix=e.Matrix.Zero(),this._targetPosition=e.Vector3.Zero(),this._distanceVector=e.Vector3.Zero(),this.followDistance=10,this.lowerDistanceLimit=null,this.upperDistanceLimit=null,this.rotationOffset=180,this.lowerRotationOffsetLimit=null,this.upperRotationOffsetLimit=null,this.heightOffset=2,this.lowerHeightOffsetLimit=null,this.upperHeightOffsetLimit=null,this.followAcceleration=.05,this.maxFollowSpeed=100,this.transformNode=t,this.lockedTarget=i,null!=this.lockedTarget&&(this._targetPosition=this.lockedTarget.getAbsolutePosition())}return t.prototype.getTargetDistance=function(){return null==this.transformNode||null==this.lockedTarget?0:(this._targetPosition.subtractToRef(this.transformNode.getAbsolutePosition(),this._distanceVector),this._distanceVector.length())},t.prototype.update=function(e,t){void 0===e&&(e=!0),void 0===t&&(t=!0),null!=this.lockedTarget&&(this._targetPosition=this.lockedTarget.getAbsolutePosition()),this._checkLimits(),this._followTarget(e,t)},t.prototype.dispose=function(){this.transformNode=null,this.lockedTarget=null},t.prototype._checkLimits=function(){null!==this.lowerDistanceLimit&&this.followDistance<this.lowerDistanceLimit&&(this.followDistance=this.lowerDistanceLimit),null!==this.upperDistanceLimit&&this.followDistance>this.upperDistanceLimit&&(this.followDistance=this.upperDistanceLimit),null!==this.lowerHeightOffsetLimit&&this.heightOffset<this.lowerHeightOffsetLimit&&(this.heightOffset=this.lowerHeightOffsetLimit),null!==this.upperHeightOffsetLimit&&this.heightOffset>this.upperHeightOffsetLimit&&(this.heightOffset=this.upperHeightOffsetLimit),null!==this.lowerRotationOffsetLimit&&this.rotationOffset<this.lowerRotationOffsetLimit&&(this.rotationOffset=this.lowerRotationOffsetLimit),null!==this.upperRotationOffsetLimit&&this.rotationOffset>this.upperRotationOffsetLimit&&(this.rotationOffset=this.upperRotationOffsetLimit)},t.prototype._followTarget=function(t,i){if(null!=this.transformNode&&null!=this.lockedTarget){var r=0;this.lockedTarget.rotationQuaternion?(this.lockedTarget.rotationQuaternion.toRotationMatrix(this._rotationMatrix),r=Math.atan2(this._rotationMatrix.m[8],this._rotationMatrix.m[10])):r=this.lockedTarget.rotation.y;var s=e.Tools.ToRadians(this.rotationOffset)+r,o=this._targetPosition.x+Math.sin(s)*this.followDistance,n=this._targetPosition.z+Math.cos(s)*this.followDistance,a=o-this.transformNode.position.x,l=this._targetPosition.y+this.heightOffset-this.transformNode.position.y,h=n-this.transformNode.position.z,u=a*this.followAcceleration*2,m=l*this.followAcceleration,c=h*this.followAcceleration*2;(u>this.maxFollowSpeed||u<-this.maxFollowSpeed)&&(u=u<1?-this.maxFollowSpeed:this.maxFollowSpeed),(m>this.maxFollowSpeed||m<-this.maxFollowSpeed)&&(m=m<1?-this.maxFollowSpeed:this.maxFollowSpeed),(c>this.maxFollowSpeed||c<-this.maxFollowSpeed)&&(c=c<1?-this.maxFollowSpeed:this.maxFollowSpeed),t===!0&&this.transformNode.position.set(this.transformNode.position.x+u,this.transformNode.position.y+m,this.transformNode.position.z+c),i===!0&&this.transformNode.lookAt(this._targetPosition)}},t}();e.FollowTargetManager=i}(BABYLON||(BABYLON={}));var __extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function r(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(r.prototype=i.prototype,new r)}}(),BABYLON;!function(e){var t=function(t){function i(i,r,s){void 0===s&&(s={});var o=t.call(this,i,r,s)||this;return o._abstractMesh=null,o._avatarRadius=.5,o._avatarHeight=2,o._skinWidth=.08,o._stepOffset=.3,o._slopeLimit=45,o._minMoveDistance=.001,o._isPhysicsReady=!1,o._maxCollisions=4,o._useGhostSweepTest=!1,o._tmpAmmoQuaternion=null,o._tmpOriginQuaternion=null,o._tmpRotateQuaternion=null,o._tmpBabylonQuaternion=null,o._tmpBabylonEulerVector=null,o._tmpCollisionContacts=null,o.m_character=null,o.m_ghostShape=null,o.m_ghostObject=null,o.m_ghostCollision=null,o.m_ghostTransform=null,o.m_ghostPosition=null,o.m_ghostRotation=null,o.m_startPosition=null,o.m_startRotation=null,o.m_startTransform=null,o.m_walkDirection=null,o.m_warpPosition=null,o.m_turningRate=0,o.m_moveDeltaX=0,o.m_moveDeltaZ=0,o.m_physicsEngine=null,o._onCollisionEnterObservable=new e.Observable,o._onCollisionStayObservable=new e.Observable,o._onCollisionExitObservable=new e.Observable,o._abstractMesh=o.getAbstractMesh(),o._avatarRadius=o.getEditorProperty("avatarRadius",o._avatarRadius),o._avatarHeight=o.getEditorProperty("avatarHeight",o._avatarHeight),o._skinWidth=o.getEditorProperty("skinWidth",o._skinWidth),o._slopeLimit=o.getEditorProperty("slopeLimit",o._slopeLimit),o._stepOffset=o.getEditorProperty("stepOffset",o._stepOffset),o._minMoveDistance=o.getEditorProperty("minMoveDistance",o._minMoveDistance),o._useGhostSweepTest=o.getEditorProperty("useGhostSweepTest",o._useGhostSweepTest),o._tmpAmmoQuaternion=new Ammo.btQuaternion(0,0,0,1),o._tmpOriginQuaternion=new Ammo.btQuaternion(0,0,0,1),o._tmpRotateQuaternion=new Ammo.btQuaternion(0,0,0,1),o._tmpBabylonQuaternion=new e.Quaternion(0,0,0,1),o._tmpBabylonEulerVector=new e.Vector3(0,0,0),o._tmpBabylonQuaternion=new e.Quaternion(0,0,0,1),o.m_warpPosition=new Ammo.btVector3(0,0,0),o.m_walkDirection=new Ammo.btVector3(0,0,0),o.m_physicsEngine=e.SceneManager.GetPhysicsEngine(o.scene),o.setMaxNotifications(o._maxCollisions),o}return __extends(i,t),i.prototype.getAvatarRadius=function(){return this._avatarRadius},i.prototype.getAvatarHeight=function(){return this._avatarHeight},i.prototype.getSkinWidth=function(){return this._skinWidth},i.prototype.getStepOffset=function(){return this._stepOffset},i.prototype.getUseSweepTest=function(){return this._useGhostSweepTest},i.prototype.getMinMoveDistance=function(){return this._minMoveDistance},i.prototype.setMinMoveDistance=function(e){this._minMoveDistance=e},i.prototype.getVerticalVelocity=function(){return null!=this.m_character&&this.m_character.getVerticalVelocity?this.m_character.getVerticalVelocity():0},i.prototype.setMaxJumpHeight=function(e){null!=this.m_character&&this.m_character.setMaxJumpHeight(e)},i.prototype.setFallingSpeed=function(e){null!=this.m_character&&this.m_character.setFallSpeed(e)},i.prototype.getSlopeLimit=function(){return null!=this.m_character?this.m_character.getMaxSlope():0},i.prototype.setSlopeLimit=function(e){null!=this.m_character&&this.m_character.setMaxSlope(e)},i.prototype.setUpAxis=function(e){null!=this.m_character&&this.m_character.setUpAxis(e)},i.prototype.getGravity=function(){return null!=this.m_character?this.m_character.getGravity():0},i.prototype.setGravity=function(e){null!=this.m_character&&this.m_character.setGravity(e)},i.prototype.isGrounded=function(){return null!=this.m_character&&this.m_character.onGround()},i.prototype.isReady=function(){return null!=this.m_character},i.prototype.canJump=function(){return null!=this.m_character&&this.m_character.canJump()},i.prototype.internalWarp=function(e){null!=this.m_character&&this.m_character.warp(e)},i.prototype.internalJump=function(){null!=this.m_character&&this.m_character.jump()},i.prototype.internalSetJumpSpeed=function(e){null!=this.m_character&&this.m_character.setJumpSpeed(e)},i.prototype.internalSetWalkDirection=function(e){null!=this.m_character&&this.m_character.setWalkDirection(e)},i.prototype.internalSetVelocityForTimeInterval=function(e,t){null!=this.m_character&&this.m_character.setVelocityForTimeInterval(e,t)},i.prototype.start=function(){this.initMovementState()},i.prototype.update=function(){this.updateMovementState()},i.prototype.after=function(){this.afterMovementState()},i.prototype.destroy=function(){this.destroyMovementState()},i.prototype.initMovementState=function(){e.Utilities.ValidateTransformQuaternion(this.transform);var t=e.SceneManager.GetPhysicsWorld(this.scene);null!=t?(this.m_startPosition=new Ammo.btVector3(this.transform.position.x,this.transform.position.y,this.transform.position.z),this.m_startRotation=new Ammo.btQuaternion(this.transform.rotationQuaternion.x,this.transform.rotationQuaternion.y,this.transform.rotationQuaternion.z,this.transform.rotationQuaternion.w),this.m_startTransform=new Ammo.btTransform,this.m_startTransform.setIdentity(),this.m_startTransform.setOrigin(this.m_startPosition),this.m_startTransform.setRotation(this.m_startRotation),this.m_ghostShape=new Ammo.btCapsuleShape(this._avatarRadius,.5*this._avatarHeight),this.m_ghostShape.setMargin(this._skinWidth),this.m_ghostObject=new Ammo.btPairCachingGhostObject,this.m_ghostObject.setWorldTransform(this.m_startTransform),this.m_ghostObject.setCollisionShape(this.m_ghostShape),this.m_ghostObject.setCollisionFlags(e.CollisionFlags.CF_CHARACTER_OBJECT),this.m_ghostCollision=Ammo.castObject(this.m_ghostObject,Ammo.btCollisionObject),this.m_ghostCollision.setContactProcessingThreshold(0),this.m_ghostCollision.entity=this._abstractMesh,this.m_character=new Ammo.btKinematicCharacterController(this.m_ghostObject,this.m_ghostShape,this._stepOffset),
this.m_character.setUseGhostSweepTest(this._useGhostSweepTest),this.m_character.setUpInterpolate(!0),this.m_character.setMaxSlope(this._slopeLimit*e.System.Deg2Rad),this.m_character.setGravity(e.System.Gravity3G),t.addCollisionObject(this.m_ghostObject,e.CollisionFilters.CharacterFilter,e.CollisionFilters.StaticFilter|e.CollisionFilters.DefaultFilter|e.CollisionFilters.CharacterFilter),t.addAction(this.m_character)):e.Tools.Warn("Null physics world detected. Failed to create character controller: "+this.transform.name),this._isPhysicsReady=null!=this.m_physicsEngine&&null!=this._tmpCollisionContacts&&null!=this.m_ghostObject&&null!=this._abstractMesh,this.updateMovementState(),this.afterMovementState()},i.prototype.syncMovementState=function(){this._isPhysicsReady===!0&&(this.m_ghostTransform=this.m_ghostObject.getWorldTransform(),null!=this.m_ghostTransform?(this.m_ghostPosition=this.m_ghostTransform.getOrigin(),this.m_ghostRotation=this.m_ghostTransform.getRotation()):(this.m_ghostPosition=null,this.m_ghostRotation=null))},i.prototype.updateMovementState=function(){this.syncMovementState(),this._isPhysicsReady===!0&&(0!==this.m_turningRate&&null!=this.m_ghostTransform&&null!=this.m_ghostRotation&&(this._tmpBabylonQuaternion.set(this.m_ghostRotation.x(),this.m_ghostRotation.y(),this.m_ghostRotation.z(),this.m_ghostRotation.w()),e.Utilities.ToEulerToRef(this._tmpBabylonQuaternion,this._tmpBabylonEulerVector),this._tmpBabylonEulerVector.y+=this.m_turningRate,e.Utilities.FromEulerToRef(this._tmpBabylonEulerVector.x,this._tmpBabylonEulerVector.y,this._tmpBabylonEulerVector.z,this._tmpBabylonQuaternion),this._tmpAmmoQuaternion.setValue(this._tmpBabylonQuaternion.x,this._tmpBabylonQuaternion.y,this._tmpBabylonQuaternion.z,this._tmpBabylonQuaternion.w),this.m_ghostTransform.setRotation(this._tmpAmmoQuaternion),this.m_ghostObject.setWorldTransform(this.m_ghostTransform)),null!=this.m_walkDirection&&this.internalSetWalkDirection(this.m_walkDirection))},i.prototype.afterMovementState=function(){this.syncMovementState(),this._isPhysicsReady===!0&&(null!=this.m_ghostPosition&&this.transform.position.set(this.m_ghostPosition.x(),this.m_ghostPosition.y(),this.m_ghostPosition.z()),null!=this.m_ghostRotation&&this.transform.rotationQuaternion.set(this.m_ghostRotation.x(),this.m_ghostRotation.y(),this.m_ghostRotation.z(),this.m_ghostRotation.w())),this.parseGhostCollisionContacts()},i.prototype.parseGhostCollisionContacts=function(){if(this._isPhysicsReady===!0){var e=this._onCollisionEnterObservable.hasObservers(),t=this._onCollisionStayObservable.hasObservers(),i=this._onCollisionExitObservable.hasObservers();if(e||t||i){var r=0;for(r=0;r<this._tmpCollisionContacts.length;r++)this._tmpCollisionContacts[r].reset=!0;var s=this.m_ghostObject.getNumOverlappingObjects();if(s>this._maxCollisions&&(s=this._maxCollisions),s>0)for(r=0;r<s;r++){var o=this.m_ghostObject.getOverlappingObject(r);if(null!=o){var n=Ammo.castObject(o,Ammo.btCollisionObject);if(null!=n&&null!=n.entity&&n.isActive()){var a=-1,l=n.entity;for(r=0;r<this._tmpCollisionContacts.length;r++){var h=this._tmpCollisionContacts[r];if(null!=h.mesh&&h.mesh===l){h.state=1,h.reset=!1,a=r;break}}if(a===-1)for(r=0;r<this._tmpCollisionContacts.length;r++){var u=this._tmpCollisionContacts[r];if(null==u.mesh){u.mesh=l,u.state=0,u.reset=!1;break}}}}}for(r=0;r<this._tmpCollisionContacts.length;r++){var m=this._tmpCollisionContacts[r];m.reset===!0?(i&&null!=m.mesh&&this._onCollisionExitObservable.notifyObservers(m.mesh),m.mesh=null,m.state=0,m.reset=!1):0===m.state?e&&null!=m.mesh&&this._onCollisionEnterObservable.notifyObservers(m.mesh):t&&null!=m.mesh&&this._onCollisionStayObservable.notifyObservers(m.mesh)}}}},i.prototype.destroyMovementState=function(){this.m_physicsEngine=null,null!=this.m_character&&(Ammo.destroy(this.m_character),this.m_character=null),null!=this.m_ghostObject&&(Ammo.destroy(this.m_ghostObject),this.m_ghostObject=null),null!=this.m_ghostShape&&(Ammo.destroy(this.m_ghostShape),this.m_ghostShape=null),null!=this.m_ghostCollision&&(Ammo.destroy(this.m_ghostCollision),this.m_ghostCollision=null),null!=this.m_ghostPosition&&(Ammo.destroy(this.m_ghostPosition),this.m_ghostPosition=null),null!=this.m_ghostRotation&&(Ammo.destroy(this.m_ghostRotation),this.m_ghostRotation=null),null!=this.m_ghostTransform&&(Ammo.destroy(this.m_ghostTransform),this.m_ghostTransform=null),null!=this.m_startPosition&&(Ammo.destroy(this.m_startPosition),this.m_startPosition=null),null!=this.m_startRotation&&(Ammo.destroy(this.m_startRotation),this.m_startRotation=null),null!=this.m_startTransform&&(Ammo.destroy(this.m_startTransform),this.m_startTransform=null),null!=this.m_warpPosition&&(Ammo.destroy(this.m_warpPosition),this.m_warpPosition=null),null!=this.m_walkDirection&&(Ammo.destroy(this.m_walkDirection),this.m_walkDirection=null),null!=this._tmpAmmoQuaternion&&(Ammo.destroy(this._tmpAmmoQuaternion),this._tmpAmmoQuaternion=null),null!=this._tmpOriginQuaternion&&(Ammo.destroy(this._tmpOriginQuaternion),this._tmpOriginQuaternion=null),null!=this._tmpRotateQuaternion&&(Ammo.destroy(this._tmpRotateQuaternion),this._tmpRotateQuaternion=null),this._onCollisionEnterObservable.clear(),this._onCollisionEnterObservable=null,this._onCollisionStayObservable.clear(),this._onCollisionStayObservable=null,this._onCollisionExitObservable.clear(),this._onCollisionExitObservable=null,this._tmpCollisionContacts=null,this._abstractMesh=null},i.prototype.registerOnCollisionEnter=function(e){return this._onCollisionEnterObservable.add(e)},i.prototype.unregisterOnCollisionEnter=function(e){return this._onCollisionEnterObservable.remove(e)},i.prototype.registerOnCollisionStay=function(e){return this._onCollisionStayObservable.add(e)},i.prototype.unregisterOnCollisionStay=function(e){return this._onCollisionStayObservable.remove(e)},i.prototype.registerOnCollisionExit=function(e){return this._onCollisionExitObservable.add(e)},i.prototype.unregisterOnCollisionExit=function(e){return this._onCollisionExitObservable.remove(e)},i.prototype.setMaxNotifications=function(t){this._maxCollisions=t,this._tmpCollisionContacts=[];for(var i=0;i<this._maxCollisions;i++)this._tmpCollisionContacts.push(new e.CollisionContactInfo)},i.prototype.setActivationState=function(e){null!=this.m_ghostCollision&&this.m_ghostCollision.setActivationState&&this.m_ghostCollision.setActivationState(e)},i.prototype.getCollisionFilterGroup=function(){var e=-1;return null!=this.m_ghostCollision&&this.m_ghostCollision.getBroadphaseHandle&&(e=this.m_ghostCollision.getBroadphaseHandle().get_m_collisionFilterGroup()),e},i.prototype.setCollisionFilterGroup=function(e){null!=this.m_ghostCollision&&this.m_ghostCollision.getBroadphaseHandle&&this.m_ghostCollision.getBroadphaseHandle().set_m_collisionFilterGroup(e)},i.prototype.getCollisionFilterMask=function(){var e=-1;return null!=this.m_ghostCollision&&this.m_ghostCollision.getBroadphaseHandle&&(e=this.m_ghostCollision.getBroadphaseHandle().get_m_collisionFilterMask()),e},i.prototype.setCollisionFilterMask=function(e){null!=this.m_ghostCollision&&this.m_ghostCollision.getBroadphaseHandle&&this.m_ghostCollision.getBroadphaseHandle().set_m_collisionFilterMask(e)},i.prototype.getContactProcessingThreshold=function(){var e=-1;return null!=this.m_ghostCollision&&this.m_ghostCollision.getContactProcessingThreshold&&this.m_ghostCollision.getContactProcessingThreshold(),e},i.prototype.setContactProcessingThreshold=function(e){null!=this.m_ghostCollision&&this.m_ghostCollision.setContactProcessingThreshold&&this.m_ghostCollision.setContactProcessingThreshold(e)},i.prototype.setGhostWorldTransform=function(e,t){null!=this.m_ghostObject&&null!=this.m_ghostTransform&&(null!=this.m_ghostPosition&&null!=e&&(this.m_ghostPosition.setValue(e.x,e.y,e.z),this.m_ghostTransform.setOrigin(this.m_ghostPosition)),null!=this.m_ghostRotation&&null!=t&&(this.m_ghostRotation.setValue(t.x,t.y,t.z,t.w),this.m_ghostTransform.setRotation(this.m_ghostRotation)),this.m_ghostObject.setWorldTransform(this.m_ghostTransform))},i.prototype.move=function(e){null!=e&&(this.m_moveDeltaX=e.x,this.m_moveDeltaZ=e.z,Math.abs(e.x)<this._minMoveDistance&&(e.x>0?this.m_moveDeltaX=this._minMoveDistance:e.x<0&&(this.m_moveDeltaX=-this._minMoveDistance)),Math.abs(e.z)<this._minMoveDistance&&(e.z>0?this.m_moveDeltaZ=this._minMoveDistance:e.z<0&&(this.m_moveDeltaZ=-this._minMoveDistance)),null!=this.m_walkDirection&&this.m_walkDirection.setValue(this.m_moveDeltaX,0,this.m_moveDeltaZ))},i.prototype.turn=function(e){this.m_turningRate=e},i.prototype.jump=function(e){this.internalSetJumpSpeed(e),this.internalJump()},i.prototype.warp=function(e){null!=this.m_warpPosition&&(this.m_warpPosition.setValue(e.x,e.y,e.z),this.internalWarp(this.m_warpPosition))},i}(e.ScriptComponent);e.CharacterController=t}(BABYLON||(BABYLON={}));var __extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function r(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(r.prototype=i.prototype,new r)}}(),BABYLON;!function(e){var t=function(t){function i(e,i,r){return void 0===r&&(r={}),t.call(this,e,i,r)||this}return __extends(i,t),Object.defineProperty(i.prototype,"info",{get:function(){return this._info},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"hasAgentInfo",{get:function(){return null!=this.info},enumerable:!0,configurable:!0}),i.prototype.start=function(){},i.prototype.update=function(){},i.prototype.after=function(){},i.prototype.destroy=function(){},i.prototype.setDestination=function(t){this.hasAgentInfo||e.Tools.Warn("Null navigation agent metadata. Set agent destination ignored.")},i.GetNavigationMesh=function(t){return e.SceneManager.GetAbstractMesh(t,"NavigationMesh")},i.GetNavigationZone=function(){return"scene"},i.BuildNavigationNodes=function(t,i){void 0===i&&(i=null);var r=null,s=i||e.NavigationAgent.GetNavigationMesh(t);if(null!=s){r=new Navigation;var o=r.buildNodes(s);null!=o?r.setZoneData(e.NavigationAgent.GetNavigationZone(),o):e.Tools.Warn("Failed to build navigation zone nodes")}else e.Tools.Warn("Failed to locate scene navigation mesh");return r},i.FindNavigationPath=function(t,i,r){var s=e.NavigationAgent.GetNavigationZone(),o=t.getGroup(s,i);return t.findPath(i,r,s,o)},i}(e.ScriptComponent);e.NavigationAgent=t}(BABYLON||(BABYLON={}));var __extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function r(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(r.prototype=i.prototype,new r)}}(),BABYLON;!function(e){var t=function(e){function t(t,i,r){return void 0===r&&(r={}),e.call(this,t,i,r)||this}return __extends(t,e),t.prototype.start=function(){},t.prototype.update=function(){},t.prototype.after=function(){},t.prototype.destroy=function(){},t}(e.ScriptComponent);e.NetworkSystem=t}(BABYLON||(BABYLON={}));var __extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function r(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(r.prototype=i.prototype,new r)}}(),BABYLON;!function(e){var t=function(e){function t(t,i,r){return void 0===r&&(r={}),e.call(this,t,i,r)||this}return __extends(t,e),t.prototype.start=function(){},t.prototype.update=function(){},t.prototype.after=function(){},t.prototype.destroy=function(){},t}(e.ScriptComponent);e.ShurikenParticleSystem=t}(BABYLON||(BABYLON={}));var BABYLON;!function(e){var t=function(){function t(t,i,r,s){this._rightHanded=!1,this._centerMass=new e.Vector3(0,0,0),this._chassisMesh=null,this._tempVectorPos=new e.Vector3(0,0,0),this._tempQuaternion=new e.Quaternion(0,0,0,1),this._tempVectorScale=new e.Vector3(0,0,0),this.lockedWheelIndexes=null,this.m_vehicle=null,this.m_vehicleTuning=null,this.m_vehicleRaycaster=null,this.m_vehicleColliders=null,this.m_tempTransform=null,this.m_tempPosition=null,this.m_tempRotation=null,this.m_wheelDirectionCS0=null,this.m_wheelAxleCS=null,this._tempMatrixA=e.Matrix.Zero(),this._tempMatrixB=e.Matrix.Zero(),this._tempMatrixC=e.Matrix.Zero(),this._rightHanded=r,this._chassisMesh=t,this._centerMass=s,this.m_vehicleColliders=this._chassisMesh.metadata.wheels,this.m_vehicleTuning=new Ammo.btVehicleTuning,this.m_vehicleRaycaster=new Ammo.btSmoothVehicleRaycaster(i),this.m_vehicle=new Ammo.btRaycastVehicle(this.m_vehicleTuning,this._chassisMesh.physicsImpostor.physicsBody,this.m_vehicleRaycaster),this.m_vehicle.setCoordinateSystem(0,1,2),this.m_wheelDirectionCS0=new Ammo.btVector3(0,(-1),0),this.m_wheelAxleCS=new Ammo.btVector3((-1),0,0),this.m_tempPosition=null,this.m_tempRotation=null,this.m_tempTransform=null,i.addAction(this.m_vehicle),this.setupWheelInformation()}return t.prototype.getUpAxis=function(){if(null!=this.m_vehicle)return this.m_vehicle.getUpAxis()},t.prototype.getRightAxis=function(){if(null!=this.m_vehicle)return this.m_vehicle.getRightAxis()},t.prototype.getForwardAxis=function(){if(null!=this.m_vehicle)return this.m_vehicle.getForwardAxis()},t.prototype.getForwardVector=function(){if(null!=this.m_vehicle)return this.m_vehicle.getForwardVector()},t.prototype.getNumWheels=function(){if(null!=this.m_vehicle)return this.m_vehicle.getNumWheels()},t.prototype.getWheelInfo=function(e){if(null!=this.m_vehicle)return this.m_vehicle.getWheelInfo(e)},t.prototype.resetSuspension=function(){null!=this.m_vehicle&&this.m_vehicle.resetSuspension()},t.prototype.setPitchControl=function(e){null!=this.m_vehicle&&this.m_vehicle.setPitchControl(e)},t.prototype.setEngineForce=function(e,t){null!=this.m_vehicle&&this.m_vehicle.applyEngineForce(this._rightHanded?e*-1:e,t)},t.prototype.setBrakingForce=function(e,t){null!=this.m_vehicle&&this.m_vehicle.setBrake(this._rightHanded?1*e:e,t)},t.prototype.getSteeringAngle=function(e){if(null!=this.m_vehicle)return Math.abs(this.m_vehicle.getSteeringValue(e))},t.prototype.setSteeringAngle=function(e,t){null!=this.m_vehicle&&this.m_vehicle.setSteeringValue(this._rightHanded?e*-1:e,t)},t.prototype.getWheelTransform=function(e){if(null!=this.m_vehicle)return this.m_vehicle.getWheelTransformWS(e)},t.prototype.updateWheelTransform=function(e,t){null!=this.m_vehicle&&this.m_vehicle.updateWheelTransform(e,t)},t.prototype.getUserConstraintType=function(){if(null!=this.m_vehicle)return this.m_vehicle.getUserConstraintType()},t.prototype.setUserConstraintType=function(e){null!=this.m_vehicle&&this.m_vehicle.setUserConstraintType(e)},t.prototype.setUserConstraintId=function(e){null!=this.m_vehicle&&this.m_vehicle.setUserConstraintId(e)},t.prototype.getUserConstraintId=function(){if(null!=this.m_vehicle)return this.m_vehicle.getUserConstraintId()},t.prototype.getRawCurrentSpeedKph=function(){if(null!=this.m_vehicle)return this.m_vehicle.getCurrentSpeedKmHour()},t.prototype.getRawCurrentSpeedMph=function(){if(null!=this.m_vehicle)return this.m_vehicle.getCurrentSpeedKmHour()*e.System.Kph2Mph},t.prototype.getAbsCurrentSpeedKph=function(){if(null!=this.m_vehicle)return Math.abs(this.m_vehicle.getCurrentSpeedKmHour())},t.prototype.getAbsCurrentSpeedMph=function(){if(null!=this.m_vehicle)return Math.abs(this.m_vehicle.getCurrentSpeedKmHour())*e.System.Kph2Mph},t.prototype.getVehicleTuningSystem=function(){return this.m_vehicleTuning},t.prototype.getChassisWorldTransform=function(){if(null!=this.m_vehicle)return this.m_vehicle.getChassisWorldTransform()},t.prototype.dispose=function(){this.deleteWheelInformation(),null!=this.m_vehicle&&(Ammo.destroy(this.m_vehicle),this.m_vehicle=null),null!=this.m_vehicleTuning&&(Ammo.destroy(this.m_vehicleTuning),this.m_vehicleTuning=null),null!=this.m_vehicleRaycaster&&(Ammo.destroy(this.m_vehicleRaycaster),this.m_vehicleRaycaster=null),null!=this.m_wheelDirectionCS0&&(Ammo.destroy(this.m_wheelDirectionCS0),this.m_wheelDirectionCS0=null),null!=this.m_wheelAxleCS&&(Ammo.destroy(this.m_wheelAxleCS),this.m_wheelAxleCS=null),null!=this.m_tempPosition&&(Ammo.destroy(this.m_tempPosition),this.m_tempPosition=null),null!=this.m_tempRotation&&(Ammo.destroy(this.m_tempRotation),this.m_tempRotation=null),null!=this.m_tempTransform&&(Ammo.destroy(this.m_tempTransform),this.m_tempTransform=null),this.m_vehicleColliders=null},t.prototype.getCollisionFilterGroup=function(){var e=-1;return null!=this.m_vehicleRaycaster&&this.m_vehicleRaycaster.get_m_collisionFilterGroup&&(e=this.m_vehicleRaycaster.get_m_collisionFilterGroup()),e},t.prototype.setCollisionFilterGroup=function(e){null!=this.m_vehicleRaycaster&&this.m_vehicleRaycaster.set_m_collisionFilterGroup&&this.m_vehicleRaycaster.set_m_collisionFilterGroup(e)},t.prototype.getCollisionFilterMask=function(){var e=-1;return null!=this.m_vehicleRaycaster&&this.m_vehicleRaycaster.get_m_collisionFilterMask&&(e=this.m_vehicleRaycaster.get_m_collisionFilterMask()),e},t.prototype.setCollisionFilterMask=function(e){null!=this.m_vehicleRaycaster&&this.m_vehicleRaycaster.set_m_collisionFilterMask&&this.m_vehicleRaycaster.set_m_collisionFilterMask(e)},t.prototype.getInterpolateMeshNormals=function(){var e=-1;return null!=this.m_vehicleRaycaster&&this.m_vehicleRaycaster.get_m_interpolateMeshNormals&&(e=this.m_vehicleRaycaster.get_m_interpolateMeshNormals()),e},t.prototype.setInterpolateMeshNormals=function(e){null!=this.m_vehicleRaycaster&&this.m_vehicleRaycaster.set_m_interpolateMeshNormals&&this.m_vehicleRaycaster.set_m_interpolateMeshNormals(e)},t.prototype.getWheelIndexByID=function(e){var t=-1;if(null!=this.m_vehicleColliders&&this.m_vehicleColliders.length>0)for(var i=0;i<this.m_vehicleColliders.length;i++){var r=this.m_vehicleColliders[i];if(e.toLowerCase()===r.id.toLowerCase()){t=i;break}}return t},t.prototype.getWheelIndexByName=function(e){var t=-1;if(null!=this.m_vehicleColliders&&this.m_vehicleColliders.length>0)for(var i=0;i<this.m_vehicleColliders.length;i++){var r=this.m_vehicleColliders[i];if(e.toLowerCase()===r.name.toLowerCase()){t=i;break}}return t},t.prototype.getWheelColliderInfo=function(e){var t=-1;return null!=this.m_vehicleColliders&&this.m_vehicleColliders.length>0&&this.m_vehicleColliders.length>e&&(t=this.m_vehicleColliders[e]),t},t.prototype.setWheelTransformMesh=function(e,t){if(null!=t){var i=this.getWheelInfo(e);null!=i&&(i.transform=t)}},t.prototype.setupWheelInformation=function(){if(null!=this._chassisMesh&&null!=this._chassisMesh.physicsImpostor&&null!=this._chassisMesh.physicsImpostor.physicsBody&&this._chassisMesh.physicsImpostor.physicsBody.setActivationState(e.CollisionState.DISABLE_DEACTIVATION),null!=this.m_vehicle&&null!=this.m_vehicleColliders&&this.m_vehicleColliders.length>0){var t=-1;for(t=0;t<this.m_vehicleColliders.length;t++){var i=this.m_vehicleColliders[t],r=null!=i.name?i.name:"Unknown",s=null!=i.radius?i.radius:.5,o=null!=i.position&&i.position.length>=3?i.position[0]:1,n=null!=i.position&&i.position.length>=3?i.position[2]:-1,a=null!=i.suspensiondistance?i.suspensiondistance:.3,l=null!=i.suspensiontarget?i.suspensiontarget:.5,h=null!=i.forceapppointdistance?i.forceapppointdistance:0,u=null!=i.frontwheel||r.toLowerCase().indexOf("front")>=0;this.m_vehicle.addWheel(new Ammo.btVector3(o+-this._centerMass.x,a,n+-this._centerMass.z),this.m_wheelDirectionCS0,this.m_wheelAxleCS,l+h,s,this.m_vehicleTuning,u)}if(this.m_vehicle.getNumWheels()===this.m_vehicleColliders.length)for(t=0;t<this.m_vehicleColliders.length;t++){var i=this.m_vehicleColliders[t],m=6e3,c=500,p=null!=i.wheeldampingrate?.8*i.wheeldampingrate:.2,f=null!=i.forward_extremumvalue?10*i.forward_extremumvalue:10,_=null!=i.forward_stiffness?10*i.forward_stiffness:10,d=null!=i.suspensionspring?1e-4*i.suspensionspring:3.5,y=null!=i.suspensiondamper?.001*i.suspensiondamper:4.5,v=this.m_vehicle.getWheelInfo(t);null!=v&&(v.defaultFriction=f,v.set_m_frictionSlip(f),v.set_m_rollInfluence(p),v.set_m_maxSuspensionForce(m),v.set_m_maxSuspensionTravelCm(c),v.set_m_suspensionStiffness(_),v.set_m_wheelsDampingCompression(d),v.set_m_wheelsDampingRelaxation(y),v.set_m_wheelsRadiusScale&&v.set_m_wheelsRadiusScale(2))}else e.Tools.Warn("Failed to create proper number of wheels for: "+this._chassisMesh.name)}},t.prototype.updateWheelInformation=function(){var t=this.getNumWheels();if(t>0)for(var i=0;i<t;i++){var r=this.getWheelInfo(i);if(null!=r){var s=this.lockedWheelInformation(i);if(r.set_m_bIsWheelLocked&&r.set_m_bIsWheelLocked(s),this.updateWheelTransform(i,!1),this.m_tempTransform=this.getWheelTransform(i),this.m_tempPosition=this.m_tempTransform.getOrigin(),this.m_tempRotation=this.m_tempTransform.getRotation(),null!=r.transform){var o=r.transform;null!=o.parent?(this._tempMatrixA.reset(),this._tempMatrixB.reset(),this._tempMatrixC.reset(),this._tempVectorPos.set(this.m_tempPosition.x(),this.m_tempPosition.y(),this.m_tempPosition.z()),this._tempQuaternion.set(this.m_tempRotation.x(),this.m_tempRotation.y(),this.m_tempRotation.z(),this.m_tempRotation.w()),this._tempVectorScale.set(1,1,1),e.Matrix.ComposeToRef(this._tempVectorScale,this._tempQuaternion,this._tempVectorPos,this._tempMatrixA),o.parent.computeWorldMatrix(),o.parent.getWorldMatrix().invertToRef(this._tempMatrixB),this._tempMatrixA.multiplyToRef(this._tempMatrixB,this._tempMatrixC),this._tempMatrixC.decompose(this._tempVectorScale,o.rotationQuaternion,o.position),o.addRotation(0,Math.PI,0)):(o.position.set(this.m_tempPosition.x(),this.m_tempPosition.y(),this.m_tempPosition.z()),o.rotationQuaternion.set(this.m_tempRotation.x(),this.m_tempRotation.y(),this.m_tempRotation.z(),this.m_tempRotation.w()),o.addRotation(0,Math.PI,0))}}}},t.prototype.lockedWheelInformation=function(e){var t=!1;if(null!=this.lockedWheelIndexes&&this.lockedWheelIndexes.length>0)for(var i=0;i<this.lockedWheelIndexes.length;i++)if(this.lockedWheelIndexes[i]===e){t=!0;break}return t},t.prototype.deleteWheelInformation=function(){var e=this.getNumWheels();if(e>0)for(var t=0;t<e;t++){var i=this.getWheelInfo(t);null!=i&&(null!=i.transform&&delete i.transform,null!=i.defaultFriction&&delete i.defaultFriction)}},t}();e.RaycastVehicle=t}(BABYLON||(BABYLON={}));var __extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function r(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(r.prototype=i.prototype,new r)}}(),BABYLON;!function(e){var t=function(){function e(){this.mesh=null,this.state=0,this.reset=!1}return e}();e.CollisionContactInfo=t;var i=function(i){function r(t,r,s){void 0===s&&(s={});var o=i.call(this,t,r,s)||this;return o._abstractMesh=null,o._isKinematic=!1,o._maxCollisions=4,o._isPhysicsReady=!1,o._centerOfMass=new e.Vector3(0,0,0),o._raycastVehicle=null,o._tmpCollisionContacts=null,o.m_physicsWorld=null,o.m_physicsEngine=null,o._onCollisionEnterObservable=new e.Observable,o._onCollisionStayObservable=new e.Observable,o._onCollisionExitObservable=new e.Observable,o._abstractMesh=o.getAbstractMesh(),o._isKinematic=o.getEditorProperty("isKinematic",o._isKinematic),o.m_physicsWorld=e.SceneManager.GetPhysicsWorld(o.scene),o.m_physicsEngine=e.SceneManager.GetPhysicsEngine(o.scene),null!=o.transform.metadata&&null!=o.transform.metadata.unity&&null!=o.transform.metadata.unity.physics&&(o._centerOfMass=null!=o.transform.metadata.unity.physics.center?e.Utilities.ParseVector3(o.transform.metadata.unity.physics.center,o._centerOfMass):o._centerOfMass),o.setMaxNotifications(o._maxCollisions),o}return __extends(r,i),Object.defineProperty(r.prototype,"isKinematic",{get:function(){return this._isKinematic},enumerable:!0,configurable:!0}),r.prototype.start=function(){this.initRigidbodyState()},r.prototype.update=function(){this.updateRigidbodyState()},r.prototype.after=function(){this.afterRigidbodyState()},r.prototype.destroy=function(){this.destroyRigidbodyState()},r.prototype.initRigidbodyState=function(){e.Utilities.ValidateTransformQuaternion(this.transform),this._isPhysicsReady=null!=this.m_physicsEngine&&null!=this._tmpCollisionContacts&&null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody;var t=this._isKinematic===!0?e.CollisionFilters.StaticFilter:e.CollisionFilters.DefaultFilter,i=this._isKinematic===!0?e.CollisionFilters.AllFilter^e.CollisionFilters.StaticFilter:e.CollisionFilters.AllFilter;this.setContactProcessingThreshold(0),this.setCollisionFilterGroup(t),this.setCollisionFilterMask(i),this.resetBodyCollisionContacts()},r.prototype.updateRigidbodyState=function(){this.syncronizeVehicleController()},r.prototype.afterRigidbodyState=function(){this.parseBodyCollisionContacts(),this.resetBodyCollisionContacts()},r.prototype.destroyRigidbodyState=function(){this.m_physicsWorld=null,this.m_physicsEngine=null,null!=this._raycastVehicle&&(this._raycastVehicle.dispose(),this._raycastVehicle=null),this._onCollisionEnterObservable.clear(),this._onCollisionEnterObservable=null,this._onCollisionStayObservable.clear(),this._onCollisionStayObservable=null,this._onCollisionExitObservable.clear(),this._onCollisionExitObservable=null,this._tmpCollisionContacts=null,this._abstractMesh=null},r.prototype.syncronizeVehicleController=function(){null!=this._raycastVehicle&&this._raycastVehicle.updateWheelInformation()},r.prototype.parseBodyCollisionContacts=function(){if(this._isPhysicsReady===!0){var e=this._onCollisionEnterObservable.hasObservers(),t=this._onCollisionStayObservable.hasObservers(),i=this._onCollisionExitObservable.hasObservers();if(e||t||i){var r=0;for(r=0;r<this._tmpCollisionContacts.length;r++)this._tmpCollisionContacts[r].reset=!0;var s=0;if(null!=this._abstractMesh.physicsImpostor.tmpCollisionObjects){var o=this._abstractMesh.physicsImpostor.tmpCollisionObjects;for(var n in o){var a=-1,l=o[n];for(r=0;r<this._tmpCollisionContacts.length;r++){var h=this._tmpCollisionContacts[r];if(null!=h.mesh&&h.mesh===l){h.state=1,h.reset=!1,a=r;break}}if(a===-1)for(r=0;r<this._tmpCollisionContacts.length;r++){var u=this._tmpCollisionContacts[r];if(null==u.mesh){u.mesh=l,u.state=0,u.reset=!1;break}}if(s++,s>this._maxCollisions)break}}for(r=0;r<this._tmpCollisionContacts.length;r++){var m=this._tmpCollisionContacts[r];m.reset===!0?(i&&null!=m.mesh&&this._onCollisionExitObservable.notifyObservers(m.mesh),m.mesh=null,m.state=0,m.reset=!1):0===m.state?e&&null!=m.mesh&&this._onCollisionEnterObservable.notifyObservers(m.mesh):t&&null!=m.mesh&&this._onCollisionStayObservable.notifyObservers(m.mesh)}}}},r.prototype.resetBodyCollisionContacts=function(){if(this._isPhysicsReady===!0){var e=this._onCollisionEnterObservable.hasObservers(),t=this._onCollisionStayObservable.hasObservers(),i=this._onCollisionExitObservable.hasObservers();e||t||i?this._abstractMesh.physicsImpostor.tmpCollisionObjects={}:this._abstractMesh.physicsImpostor.tmpCollisionObjects=null}},r.prototype.registerOnCollisionEnter=function(e){return this._onCollisionEnterObservable.add(e)},r.prototype.unregisterOnCollisionEnter=function(e){return this._onCollisionEnterObservable.remove(e)},r.prototype.registerOnCollisionStay=function(e){return this._onCollisionStayObservable.add(e)},r.prototype.unregisterOnCollisionStay=function(e){return this._onCollisionStayObservable.remove(e)},r.prototype.registerOnCollisionExit=function(e){return this._onCollisionExitObservable.add(e)},r.prototype.unregisterOnCollisionExit=function(e){return this._onCollisionExitObservable.remove(e)},r.prototype.applyForce=function(e,t){null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=e&&this._abstractMesh.physicsImpostor.applyForce(e,t)},r.prototype.applyImpulse=function(e,t){null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=e&&this._abstractMesh.physicsImpostor.applyImpulse(e,t)},r.prototype.getMass=function(){var e=0;return null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&(e=this._abstractMesh.physicsImpostor.mass),e},r.prototype.setMass=function(e){null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&this._abstractMesh.physicsImpostor.mass!==e&&(this._abstractMesh.physicsImpostor.mass=e)},r.prototype.getFriction=function(){var e=0;return null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&(e=this._abstractMesh.physicsImpostor.friction),e},r.prototype.setFriction=function(e){null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&this._abstractMesh.physicsImpostor.friction!==e&&(this._abstractMesh.physicsImpostor.friction=e)},r.prototype.getRestitution=function(){var e=0;return null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&(e=this._abstractMesh.physicsImpostor.restitution),e},r.prototype.setRestitution=function(e){null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&this._abstractMesh.physicsImpostor.restitution!==e&&(this._abstractMesh.physicsImpostor.restitution=e)},r.prototype.getLinearVelocity=function(){var e=null;return null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&(e=this._abstractMesh.physicsImpostor.getLinearVelocity()),e},r.prototype.setLinearVelocity=function(e){null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=e&&this._abstractMesh.physicsImpostor.setLinearVelocity(e)},r.prototype.getAngularVelocity=function(){var e=null;return null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&(e=this._abstractMesh.physicsImpostor.getAngularVelocity()),e},r.prototype.setAngularVelocity=function(e){null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=e&&this._abstractMesh.physicsImpostor.setAngularVelocity(e)},r.prototype.getCenterMass=function(){return this._centerOfMass},r.prototype.getLinearFactor=function(){var e=0;return null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody&&this._abstractMesh.physicsImpostor.physicsBody.getLinearFactor&&(e=this._abstractMesh.physicsImpostor.physicsBody.getLinearFactor()),e},r.prototype.setLinearFactor=function(e){null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody&&this._abstractMesh.physicsImpostor.physicsBody.setLinearFactor&&this._abstractMesh.physicsImpostor.physicsBody.setLinearFactor(e)},r.prototype.getAngularFactor=function(){var e=0;return null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody&&this._abstractMesh.physicsImpostor.physicsBody.getAngularFactor&&(e=this._abstractMesh.physicsImpostor.physicsBody.getAngularFactor()),e},r.prototype.setAngularFactor=function(e){null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody&&this._abstractMesh.physicsImpostor.physicsBody.setAngularFactor&&this._abstractMesh.physicsImpostor.physicsBody.setAngularFactor(e)},r.prototype.getAngularDamping=function(){var e=0;return null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody&&this._abstractMesh.physicsImpostor.physicsBody.getAngularDamping&&(e=this._abstractMesh.physicsImpostor.physicsBody.getAngularDamping()),e},r.prototype.getLinearDamping=function(){var e=0;return null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody&&this._abstractMesh.physicsImpostor.physicsBody.getLinearDamping&&(e=this._abstractMesh.physicsImpostor.physicsBody.getLinearDamping()),e},r.prototype.setDamping=function(e,t){
null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody&&this._abstractMesh.physicsImpostor.physicsBody.setDamping&&this._abstractMesh.physicsImpostor.physicsBody.setDamping(e,t)},r.prototype.getGravity=function(){var e=null;return null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody&&this._abstractMesh.physicsImpostor.physicsBody.getGravity&&(e=this._abstractMesh.physicsImpostor.physicsBody.getGravity()),e},r.prototype.setGravity=function(e){null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody&&this._abstractMesh.physicsImpostor.physicsBody.setGravity&&null!=e&&this._abstractMesh.physicsImpostor.physicsBody.setGravity(e)},r.prototype.setMaxNotifications=function(e){this._maxCollisions=e,this._tmpCollisionContacts=[];for(var i=0;i<this._maxCollisions;i++)this._tmpCollisionContacts.push(new t)},r.prototype.setActivationState=function(e){if(null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody){var t=Ammo.castObject(this._abstractMesh.physicsImpostor.physicsBody,Ammo.btCollisionObject);null!=t&&t.setActivationState&&t.setActivationState(e)}},r.prototype.getCollisionFilterGroup=function(){var e=-1;return null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody&&this._abstractMesh.physicsImpostor.physicsBody.getBroadphaseProxy&&(e=this._abstractMesh.physicsImpostor.physicsBody.getBroadphaseProxy().get_m_collisionFilterGroup()),e},r.prototype.setCollisionFilterGroup=function(e){null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody&&this._abstractMesh.physicsImpostor.physicsBody.getBroadphaseProxy&&this._abstractMesh.physicsImpostor.physicsBody.getBroadphaseProxy().set_m_collisionFilterGroup(e)},r.prototype.getCollisionFilterMask=function(){var e=-1;return null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody&&this._abstractMesh.physicsImpostor.physicsBody.getBroadphaseProxy&&(e=this._abstractMesh.physicsImpostor.physicsBody.getBroadphaseProxy().get_m_collisionFilterMask()),e},r.prototype.setCollisionFilterMask=function(e){null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody&&this._abstractMesh.physicsImpostor.physicsBody.getBroadphaseProxy&&this._abstractMesh.physicsImpostor.physicsBody.getBroadphaseProxy().set_m_collisionFilterMask(e)},r.prototype.getCollisionShapeType=function(){var e=-1;if(null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody){var t=Ammo.castObject(this._abstractMesh.physicsImpostor.physicsBody,Ammo.btCollisionObject);if(null!=t){var i=t.getCollisionShape();null!=i&&i.getShapeType&&(e=i.getShapeType())}}return e},r.prototype.getCollisionShapeMargin=function(){var e=-1;if(null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody){var t=Ammo.castObject(this._abstractMesh.physicsImpostor.physicsBody,Ammo.btCollisionObject);if(null!=t){var i=t.getCollisionShape();null!=i&&i.getMargin&&(e=i.getMargin())}}return e},r.prototype.setCollisionShapeMargin=function(e){if(null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody){var t=Ammo.castObject(this._abstractMesh.physicsImpostor.physicsBody,Ammo.btCollisionObject);if(null!=t){var i=t.getCollisionShape();null!=i&&i.setMargin&&i.setMargin(e)}}},r.prototype.getContactProcessingThreshold=function(){var e=-1;if(null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody){var t=Ammo.castObject(this._abstractMesh.physicsImpostor.physicsBody,Ammo.btCollisionObject);null!=t&&t.getContactProcessingThreshold&&(e=t.getContactProcessingThreshold())}return e},r.prototype.setContactProcessingThreshold=function(e){if(null!=this._abstractMesh&&null!=this._abstractMesh.physicsImpostor&&null!=this._abstractMesh.physicsImpostor.physicsBody){var t=Ammo.castObject(this._abstractMesh.physicsImpostor.physicsBody,Ammo.btCollisionObject);null!=t&&t.setContactProcessingThreshold&&t.setContactProcessingThreshold(e)}},r.prototype.hasRaycastVehicle=function(){return this._isPhysicsReady===!0&&null!=this._abstractMesh.metadata&&null!=this._abstractMesh.metadata.wheels},r.prototype.getRaycastVehicle=function(){return null==this._raycastVehicle&&(this.hasRaycastVehicle()?this._raycastVehicle=new e.RaycastVehicle(this._abstractMesh,this.m_physicsWorld,this.scene.useRightHandedSystem,this._centerOfMass):e.Tools.Warn("No wheel collider metadata info for: "+this.transform.name)),this._raycastVehicle},r.SetupPhysicsComponent=function(t,i){var r=null!=i.metadata&&null!=i.metadata.unity?i.metadata.unity:null;if(null!=r&&null!=r.physics){var s=null!=r.physics.mass?r.physics.mass:0,o=null!=r.physics.center?e.Utilities.ParseVector3(r.physics.center,e.Vector3.Zero()):e.Vector3.Zero();if("rigidbody"===r.physics.type)if(null!=r.collision&&null!=r.collision.type&&"MeshCollider"===r.collision.type){var n=null!=r.collision.convexmesh&&r.collision.convexmesh,a=null!=r.collision.dynamicfriction?r.collision.dynamicfriction:.6,l=(null!=r.collision.staticfriction?r.collision.staticfriction:.6,null!=r.collision.restitution?r.collision.restitution:0),h=null!=r.collision.trigger&&r.collision.trigger,u=n===!0?e.PhysicsImpostor.ConvexHullImpostor:e.PhysicsImpostor.MeshImpostor;e.SceneManager.CreatePhysicsImpostor(t,i,u,{mass:s,friction:a,restitution:l}),e.RigidbodyPhysics.ConfigRigidbodyPhysics(t,i,!1,h,r.physics)}else{var m=0,c=0,p=0,f=!1,_=0,d=null,y=i.getChildren(null,!0);null!=y&&y.length>0&&y.forEach(function(e){e.position.subtractInPlace(o)});var v=i.getChildren(null,!1);null!=v&&v.length>0&&v.forEach(function(s){if(null!=s.metadata&&null!=s.metadata.unity&&null!=s.metadata.unity.collision){var o=s.metadata.unity.collision,n=null!=o.wheelinformation?o.wheelinformation:null;if(null!=n)null==d&&(d=[]),d.push(n);else{s.parent!==i&&s.setParent(i);var a=null!=o.dynamicfriction?o.dynamicfriction:.6,l=null!=o.staticfriction?o.staticfriction:.6,h=null!=o.restitution?o.restitution:0,u=null!=o.trigger&&o.trigger,y=null!=o.type?o.type:"BoxCollider",v=e.PhysicsImpostor.BoxImpostor;"MeshCollider"===y?v=e.PhysicsImpostor.ConvexHullImpostor:"CapsuleCollider"===y?v=e.PhysicsImpostor.CapsuleImpostor:"SphereCollider"===y?v=e.PhysicsImpostor.SphereImpostor:"BoxCollider"===y&&(v=e.PhysicsImpostor.BoxImpostor),a>m&&(m=a),l>c&&(c=l),h>p&&(p=h),1==u&&(f=!0),e.SceneManager.CreatePhysicsImpostor(t,s,v,{mass:0,friction:0,restitution:0}),e.RigidbodyPhysics.ConfigRigidbodyPhysics(t,s,!0,!1,r.physics),_++}}}),_>0&&(e.SceneManager.CreatePhysicsImpostor(t,i,e.PhysicsImpostor.NoImpostor,{mass:s,friction:m,restitution:p}),e.RigidbodyPhysics.ConfigRigidbodyPhysics(t,i,!1,f,r.physics)),null!=d&&d.length>0&&(i.metadata.wheels=d),v=null}}},r.ConfigRigidbodyPhysics=function(t,i,r,s,o){null==e.RigidbodyPhysics.TempAmmoVector&&(e.RigidbodyPhysics.TempAmmoVector=new Ammo.btVector3(0,0,0)),null!=i&&(null!=i.physicsImpostor?i.physicsImpostor.executeNativeFunction(function(r,n){var a=Ammo.castObject(n,Ammo.btCollisionObject);a.entity=i;var l=e.SceneManager.GetPhysicsWorld(t);if(null!=l&&l.generateInternalEdgeInfo){var h=a.getCollisionShape();if(null!=h&&h.getShapeType){var u=h.getShapeType();if(21===u){var m=Ammo.castObject(h,Ammo.btBvhTriangleMeshShape);a.triangleMapInfo=new Ammo.btTriangleInfoMap,l.generateInternalEdgeInfo(m,a.triangleMapInfo)}}}var c=null==o||null==o.gravity||o.gravity;if(c===!1&&(n.setGravity?(e.RigidbodyPhysics.TempAmmoVector.setValue(0,0,0),n.setGravity(e.RigidbodyPhysics.TempAmmoVector)):e.Tools.Warn("Physics engine set gravity override not supported for: "+i.name)),n.setDamping){var p=null!=o&&null!=o.ldrag?o.ldrag:0,f=null!=o&&null!=o.adrag?o.adrag:.05;n.setDamping(p,f)}else e.Tools.Warn("Physics engine set drag damping not supported for: "+i.name);n.setCollisionFlags&&n.getCollisionFlags?s===!0?n.setCollisionFlags(n.getCollisionFlags()|e.CollisionFlags.CF_NO_CONTACT_RESPONSE|e.CollisionFlags.CF_CUSTOM_MATERIAL_CALLBACK):n.setCollisionFlags(n.getCollisionFlags()|e.CollisionFlags.CF_CUSTOM_MATERIAL_CALLBACK):e.Tools.Warn("Physics engine set collision flags not supported for: "+i.name);var _=null!=o&&null!=o.freeze?o.freeze:null;if(null!=_){if(n.setLinearFactor){var d=null!=_.positionx&&_.positionx===!0?0:1,y=null!=_.positiony&&_.positiony===!0?0:1,v=null!=_.positionz&&_.positionz===!0?0:1;e.RigidbodyPhysics.TempAmmoVector.setValue(d,y,v),n.setLinearFactor(e.RigidbodyPhysics.TempAmmoVector)}else e.Tools.Warn("Physics engine set linear factor not supported for: "+i.name);if(n.setAngularFactor){var g=null!=_.rotationx&&_.rotationx===!0?0:1,C=null!=_.rotationy&&_.rotationy===!0?0:1,S=null!=_.rotationz&&_.rotationz===!0?0:1;e.RigidbodyPhysics.TempAmmoVector.setValue(g,C,S),n.setAngularFactor(e.RigidbodyPhysics.TempAmmoVector)}else e.Tools.Warn("Physics engine set angular factor not supported for: "+i.name)}}):e.Tools.Warn("No valid physics impostor to setup for "+i.name))},r.TempAmmoVector=null,r}(e.ScriptComponent);e.RigidbodyPhysics=i}(BABYLON||(BABYLON={}));var __extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function r(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(r.prototype=i.prototype,new r)}}(),__decorate=this&&this.__decorate||function(e,t,i,r){var s,o=arguments.length,n=o<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,i):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)n=Reflect.decorate(e,t,i,r);else for(var a=e.length-1;a>=0;a--)(s=e[a])&&(n=(o<3?s(n):o>3?s(t,i,n):s(t,i))||n);return o>3&&n&&Object.defineProperty(t,i,n),n},BABYLON;!function(e){var t=function(){function e(){this._defines={},this._defines={}}return e.prototype.getDefines=function(){return this._defines},e.prototype.defineBoolean=function(e){this._defines[e]=!0},e.prototype.defineNumeric=function(e,t){this._defines[e]=t},e.ShaderIndexer=0,e}();e.UniversalShaderDefines=t;var i=function(e){function t(){var t=e.call(this)||this;return t.DIFFUSE=!1,t.CLIPPLANE=!1,t.CLIPPLANE2=!1,t.CLIPPLANE3=!1,t.CLIPPLANE4=!1,t.ALPHATEST=!1,t.DEPTHPREPASS=!1,t.POINTSIZE=!1,t.FOG=!1,t.NORMAL=!1,t.UV1=!1,t.UV2=!1,t.VERTEXCOLOR=!1,t.VERTEXALPHA=!1,t.NUM_BONE_INFLUENCERS=0,t.BonesPerMesh=0,t.INSTANCES=!1,t.rebuild(),t}return __extends(t,e),t}(e.MaterialDefines);e.UniversalMaterialDefines=i;var r=function(){function e(){}return e}();e.UniversalAlbedoChunks=r;var s=function(){function e(){}return e}();e.UniversalDiffuseChunks=s;var o=function(t){function i(i,r){var s=t.call(this,i,r)||this;return s.diffuseColor=new e.Color3(1,1,1),s._disableLighting=!1,s._maxSimultaneousLights=4,s.universalMaterial=!0,s.locals=null,s._defines=null,s._uniforms=[],s._samplers=[],s._textures={},s._vectors4={},s._floats={},s.locals=new e.UniversalShaderDefines,s._defines=null,s.customShaderNameResolve=s._buildCustomShader,s}return __extends(i,t),i.prototype.getClassName=function(){return"UniversalPushMaterial"},i.prototype.getShaderName=function(){return"simple"},i.prototype.getShaderDefines=function(){return this._defines},i.prototype.needAlphaBlending=function(){return this.alpha<1},i.prototype.needAlphaTesting=function(){return!1},i.prototype.getAlphaTestTexture=function(){return null},i.prototype.getTexture=function(e){return this._textures[e]},i.prototype.getVector4=function(e){return this._vectors4[e]},i.prototype.getFloat=function(e){return this._floats[e]},i.prototype.setTexture=function(e,t,i){return void 0===i&&(i=!1),i===!0&&this.checkSampler(e),this._textures[e]=t,this},i.prototype.setVector4=function(e,t,i){return void 0===i&&(i=!1),i===!0&&this.checkUniform(e),this._vectors4[e]=t,this},i.prototype.setFloat=function(e,t,i){return void 0===i&&(i=!1),i===!0&&this.checkUniform(e),this._floats[e]=t,this},i.prototype.checkUniform=function(e){this._uniforms.indexOf(e)===-1&&(this._uniforms.push(e),this.locals.defineBoolean(e.toUpperCase()))},i.prototype.checkSampler=function(e){this._samplers.indexOf(e)===-1&&(this._samplers.push(e),this.locals.defineBoolean(e.toUpperCase()),this.checkUniform(e+"Infos"),this.checkUniform(e+"Matrix"))},i.prototype.isReadyForSubMesh=function(t,i,r){if(this.isFrozen&&this._wasPreviouslyReady&&i.effect)return!0;i._materialDefines||(i._materialDefines=new e.UniversalMaterialDefines);var s=i._materialDefines,o=this.getScene();if(!this.checkReadyOnEveryCall&&i.effect&&this._renderId===o.getRenderId())return!0;var n=o.getEngine();if(s._areTexturesDirty&&(s._needUVs=!1,o.texturesEnabled&&this._diffuseTexture&&e.MaterialFlags.DiffuseTextureEnabled)){if(!this._diffuseTexture.isReady())return!1;s._needUVs=!0,s.DIFFUSE=!0}if(e.MaterialHelper.PrepareDefinesForMisc(t,o,!1,this.pointsCloud,this.fogEnabled,this._shouldTurnAlphaTestOn(t),s),s._needNormals=e.MaterialHelper.PrepareDefinesForLights(o,t,s,!1,this._maxSimultaneousLights,this._disableLighting),e.MaterialHelper.PrepareDefinesForFrameBoundValues(o,n,s,!!r),e.MaterialHelper.PrepareDefinesForAttributes(t,s,!0,!0),s.isDirty){s.markAsProcessed(),o.resetCachedMaterial();var a=new e.EffectFallbacks;s.FOG&&a.addFallback(1,"FOG"),e.MaterialHelper.HandleFallbacksForShadows(s,a,this.maxSimultaneousLights),s.NUM_BONE_INFLUENCERS>0&&a.addCPUSkinningFallback(0,t);var l=[e.VertexBuffer.PositionKind];s.NORMAL&&l.push(e.VertexBuffer.NormalKind),s.UV1&&l.push(e.VertexBuffer.UVKind),s.UV2&&l.push(e.VertexBuffer.UV2Kind),s.VERTEXCOLOR&&l.push(e.VertexBuffer.ColorKind),e.MaterialHelper.PrepareAttributesForBones(l,t,s,a),e.MaterialHelper.PrepareAttributesForInstances(l,s);var h=["world","view","viewProjection","vEyePosition","vLightsType","vDiffuseColor","vFogInfos","vFogColor","pointSize","vDiffuseInfos","mBones","vClipPlane","vClipPlane2","vClipPlane3","vClipPlane4","diffuseMatrix"],u=["diffuseSampler"],m=new Array;e.MaterialHelper.PrepareUniformsAndSamplersList({uniformsNames:h,uniformBuffersNames:m,samplers:u,defines:s,maxSimultaneousLights:this.maxSimultaneousLights});var c=this.getShaderName();this.customShaderNameResolve&&(c=this.customShaderNameResolve(c,h,m,u,s));var p=s.toString();i.setEffect(o.getEngine().createEffect(c,{attributes:l,uniformsNames:h,uniformBuffersNames:m,samplers:u,defines:p,fallbacks:a,onCompiled:this.onCompiled,onError:this.onError,indexParameters:{maxSimultaneousLights:this._maxSimultaneousLights-1}},n),s)}return!(!i.effect||!i.effect.isReady())&&(this._renderId=o.getRenderId(),this._wasPreviouslyReady=!0,!0)},i.prototype.bindForSubMesh=function(t,i,r){var s=this.getScene(),o=r._materialDefines;if(o){var n=r.effect;n&&(this._activeEffect=n,this.bindOnlyWorldMatrix(t),this._activeEffect.setMatrix("viewProjection",s.getTransformMatrix()),e.MaterialHelper.BindBonesParameters(i,this._activeEffect),this._mustRebind(s,n)&&(this._diffuseTexture&&e.MaterialFlags.DiffuseTextureEnabled&&(this._activeEffect.setTexture("diffuseSampler",this._diffuseTexture),this._activeEffect.setFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),this._activeEffect.setMatrix("diffuseMatrix",this._diffuseTexture.getTextureMatrix())),e.MaterialHelper.BindClipPlane(this._activeEffect,s),this.pointsCloud&&this._activeEffect.setFloat("pointSize",this.pointSize),e.MaterialHelper.BindEyePosition(n,s)),this._activeEffect.setColor4("vDiffuseColor",this.diffuseColor,this.alpha*i.visibility),s.lightsEnabled&&!this.disableLighting&&e.MaterialHelper.BindLights(s,i,this._activeEffect,o,this.maxSimultaneousLights),s.fogEnabled&&i.applyFog&&s.fogMode!==e.Scene.FOGMODE_NONE&&this._activeEffect.setMatrix("view",s.getViewMatrix()),e.MaterialHelper.BindFogParameters(s,i,this._activeEffect),this._afterBind(i,this._activeEffect),this._attachAfterBind(i,this._activeEffect))}},i.prototype.getAnimatables=function(){var e=[];this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&e.push(this._diffuseTexture);for(var t in this._textures){var i=this._textures[t];i&&i.animations&&i.animations.length>0&&e.push(i)}return e},i.prototype.getActiveTextures=function(){var e=t.prototype.getActiveTextures.call(this);this._diffuseTexture&&e.push(this._diffuseTexture);for(var i in this._textures){var r=this._textures[i];r&&e.push(r)}return e},i.prototype.hasTexture=function(e){if(t.prototype.hasTexture.call(this,e))return!0;if(this.diffuseTexture===e)return!0;var i=!1;for(var r in this._textures){var s=this._textures[r];if(s===s){i=!0;break}}return i},i.prototype.dispose=function(e){this._diffuseTexture&&this._diffuseTexture.dispose();for(var i in this._textures){var r=this._textures[i];r&&r.dispose(),this._textures[i]=null}this._textures={},t.prototype.dispose.call(this,e)},i.prototype.clone=function(t){var i,r=this,s=e.SerializationHelper.Clone(function(){return new e.UniversalPushMaterial(t,r.getScene())},this);s._textures={};for(i in this._textures){var o=this._textures[i];o&&s.setTexture(i,o.clone(),!0)}s._vectors4={};for(i in this._vectors4)s.setVector4(i,this._vectors4[i].clone(),!0);s._floats={};for(i in this._floats)s.setFloat(i,this._floats[i],!0);return s},i.prototype.serialize=function(){var t,i=e.SerializationHelper.Serialize(this);i.customType="BABYLON.UniversalPushMaterial",i.textures={};for(t in this._textures){var r=this._textures[t];r&&(i.textures[t]=r.serialize())}i.vectors4={};for(t in this._vectors4)i.vectors4[t]=this._vectors4[t].asArray();i.floats={};for(t in this._floats)i.floats[t]=this._floats[t];return i},i.Parse=function(t,i,r){var s,o=e.SerializationHelper.Parse(function(){return new e.UniversalPushMaterial(t.name,i)},t,i,r);for(s in t.textures){var n=t.textures[s];n&&o.setTexture(s,e.Texture.Parse(n,i,r),!0)}for(s in t.vectors4)o.setVector4(s,e.Vector4.FromArray(t.vectors4[s]),!0);for(s in t.floats)o.setFloat(s,t.floats[s],!0);return o},i.prototype._buildCustomShader=function(e,t,i,r,s){this._defines=s;var o=this.getShaderName();null!=o&&""!==o||(o=e),null!=o&&""!==o||(o="simple");var n=this.locals.getDefines();if(null!=n&&null!=this._defines){var a=Object.keys(n);if(null!=a&&a.length>0){for(var l=this._defines,h=0,u=a;h<u.length;h++){var m=u[h];l[m]=n[m]}this._defines.rebuild()}}var c=0;if(null!=this._uniforms&&this._uniforms.length>0)for(c=0;c<this._uniforms.length;c++){var p=this._uniforms[c];t.indexOf(p)===-1&&t.push(p)}if(c=0,null!=this._samplers&&this._samplers.length>0)for(c=0;c<this._samplers.length;c++){var f=this._samplers[c];r.indexOf(f)===-1&&r.push(f)}return o},i.prototype._attachAfterBind=function(e,t){var i,r=this.getScene();if(r.texturesEnabled)for(i in this._textures){var s=this._textures[i];null!=s&&(t.setTexture(i,s),t.setFloat2(i+"Infos",s.coordinatesIndex,s.level),t.setMatrix(i+"Matrix",s.getTextureMatrix()))}for(i in this._vectors4)t.setVector4(i,this._vectors4[i]);for(i in this._floats)t.setFloat(i,this._floats[i])},__decorate([e.serializeAsTexture("diffuseTexture")],i.prototype,"_diffuseTexture",void 0),__decorate([e.expandToProperty("_markAllSubMeshesAsTexturesDirty")],i.prototype,"diffuseTexture",void 0),__decorate([e.serializeAsColor3("diffuse")],i.prototype,"diffuseColor",void 0),__decorate([e.serialize("disableLighting")],i.prototype,"_disableLighting",void 0),__decorate([e.expandToProperty("_markAllSubMeshesAsLightsDirty")],i.prototype,"disableLighting",void 0),__decorate([e.serialize("maxSimultaneousLights")],i.prototype,"_maxSimultaneousLights",void 0),__decorate([e.expandToProperty("_markAllSubMeshesAsLightsDirty")],i.prototype,"maxSimultaneousLights",void 0),i}(e.PushMaterial);e.UniversalPushMaterial=o,e._TypeStore.RegisteredTypes.UniversalPushMaterial=o;var n=function(t){function i(i,r){var s=t.call(this,i,r)||this;return s.universalMaterial=!0,s.locals=null,s.terrainInfo=null,s._defines=null,s._uniforms=[],s._samplers=[],s._textures={},s._vectors4={},s._floats={},s.locals=new e.UniversalShaderDefines,s._defines=null,s._setupAttachAfterBind(),s.enableShaderChunks=!1,s.materialShaderChunks=new e.UniversalAlbedoChunks,s.customShaderNameResolve=s._buildCustomShader,s.customShaderChunkResolve(),s}return __extends(i,t),i.prototype.updateShaderChunks=function(){},i.prototype.getClassName=function(){return"UniversalAlbedoMaterial"},i.prototype.getShaderName=function(){return"pbr"},i.prototype.getShaderChunk=function(){return null},i.prototype.getShaderDefines=function(){return this._defines},i.prototype.getTexture=function(e){return this._textures[e]},i.prototype.getVector4=function(e){return this._vectors4[e]},i.prototype.getFloat=function(e){return this._floats[e]},i.prototype.setTexture=function(e,t,i){return void 0===i&&(i=!1),i===!0&&this.checkSampler(e),this._textures[e]=t,this},i.prototype.setVector4=function(e,t,i){return void 0===i&&(i=!1),i===!0&&this.checkUniform(e),this._vectors4[e]=t,this},i.prototype.setFloat=function(e,t,i){return void 0===i&&(i=!1),i===!0&&this.checkUniform(e),this._floats[e]=t,this},i.prototype.checkUniform=function(e){this._uniforms.indexOf(e)===-1&&(this._uniforms.push(e),this.locals.defineBoolean(e.toUpperCase()))},i.prototype.checkSampler=function(e){this._samplers.indexOf(e)===-1&&(this._samplers.push(e),this.locals.defineBoolean(e.toUpperCase()),this.checkUniform(e+"Infos"),this.checkUniform(e+"Matrix"))},i.prototype.getAnimatables=function(){var e=t.prototype.getAnimatables.call(this);for(var i in this._textures){var r=this._textures[i];r&&r.animations&&r.animations.length>0&&e.push(r)}return e},i.prototype.getActiveTextures=function(){var e=t.prototype.getActiveTextures.call(this);for(var i in this._textures){var r=this._textures[i];r&&e.push(r)}return e},i.prototype.hasTexture=function(e){if(t.prototype.hasTexture.call(this,e))return!0;var i=!1;for(var r in this._textures){var s=this._textures[r];if(s===s){i=!0;break}}return i},i.prototype.dispose=function(e,i){if(i)for(var r in this._textures){var s=this._textures[r];s&&s.dispose(),this._textures[r]=null}this._textures={},t.prototype.dispose.call(this,e,i)},i.prototype.clone=function(t){var i,r=this,s=e.SerializationHelper.Clone(function(){return new e.UniversalAlbedoMaterial(t,r.getScene())},this);s._textures={};for(i in this._textures){var o=this._textures[i];o&&s.setTexture(i,o.clone(),!0)}s._vectors4={};for(i in this._vectors4)s.setVector4(i,this._vectors4[i].clone(),!0);s._floats={};for(i in this._floats)s.setFloat(i,this._floats[i],!0);return s},i.prototype.serialize=function(){var t,i=e.SerializationHelper.Serialize(this);i.customType="BABYLON.UniversalAlbedoMaterial",i.textures={};for(t in this._textures){var r=this._textures[t];r&&(i.textures[t]=r.serialize())}i.vectors4={};for(t in this._vectors4)i.vectors4[t]=this._vectors4[t].asArray();i.floats={};for(t in this._floats)i.floats[t]=this._floats[t];return i},i.Parse=function(t,i,r){var s,o=e.SerializationHelper.Parse(function(){return new e.UniversalAlbedoMaterial(t.name,i)},t,i,r);for(s in t.textures){var n=t.textures[s];n&&o.setTexture(s,e.Texture.Parse(n,i,r),!0)}for(s in t.vectors4)o.setVector4(s,e.Vector4.FromArray(t.vectors4[s]),!0);for(s in t.floats)o.setFloat(s,t.floats[s],!0);return o},i.prototype.customShaderChunkResolve=function(){var t=this.getShaderChunk();if(null!=t&&""!==t){var i=t+"ShaderChunks";if(null!=e.Effect.ShadersStore[i]){var r=e.Effect.ShadersStore[i],s=e.Utilities.HasOwnProperty(r,"VertexBegin")?r.VertexBegin:null;null!=s&&""!==s&&(this.materialShaderChunks.Vertex_Begin=s);var o=e.Utilities.HasOwnProperty(r,"VertexDefinitions")?r.VertexDefinitions:null;null!=o&&""!==o&&(this.materialShaderChunks.Vertex_Definitions=o);var n=e.Utilities.HasOwnProperty(r,"VertexMainBegin")?r.VertexMainBegin:null;null!=n&&""!==n&&(this.materialShaderChunks.Vertex_MainBegin=n);var a=e.Utilities.HasOwnProperty(r,"VertexUpdatePosition")?r.VertexUpdatePosition:null;null!=a&&""!==a&&(this.materialShaderChunks.Vertex_Before_PositionUpdated=a.replace("result","positionUpdated"));var l=e.Utilities.HasOwnProperty(r,"VertexUpdateNormal")?r.VertexUpdateNormal:null;null!=l&&""!==l&&(this.materialShaderChunks.Vertex_Before_NormalUpdated=l.replace("result","normalUpdated"));var h=e.Utilities.HasOwnProperty(r,"VertexMainEnd")?r.VertexMainEnd:null;null!=h&&""!==h&&(this.materialShaderChunks.Vertex_MainEnd=h);var u=e.Utilities.HasOwnProperty(r,"FragmentBegin")?r.FragmentBegin:null;null!=u&&""!==u&&(this.materialShaderChunks.Fragment_Begin=u);var m=e.Utilities.HasOwnProperty(r,"FragmentDefinitions")?r.FragmentDefinitions:null;null!=m&&""!==m&&(this.materialShaderChunks.Fragment_Definitions=m);var c=e.Utilities.HasOwnProperty(r,"FragmentMainBegin")?r.FragmentMainBegin:null;null!=c&&""!==c&&(this.materialShaderChunks.Fragment_MainBegin=c);var p=e.Utilities.HasOwnProperty(r,"FragmentUpdateAlbedo")?r.FragmentUpdateAlbedo:null;null!=p&&""!==p&&(this.materialShaderChunks.Fragment_Custom_Albedo=p.replace("result","surfaceAlbedo"));var f=e.Utilities.HasOwnProperty(r,"FragmentUpdateAlpha")?r.FragmentUpdateAlpha:null;null!=f&&""!==f&&(this.materialShaderChunks.Fragment_Custom_Alpha=f.replace("result","alpha"));var _=e.Utilities.HasOwnProperty(r,"FragmentMetallicRoughness")?r.FragmentMetallicRoughness:null;null!=_&&""!==_&&(this.materialShaderChunks.Fragment_MetallicRoughness=_);var d=e.Utilities.HasOwnProperty(r,"FragmentMicroSurface")?r.FragmentMicroSurface:null;null!=d&&""!==d&&(this.materialShaderChunks.Fragment_MicroSurface=d);var y=e.Utilities.HasOwnProperty(r,"FragmentBeforeLights")?r.FragmentBeforeLights:null;null!=y&&""!==y&&(this.materialShaderChunks.Fragment_Before_Lights=y);var v=e.Utilities.HasOwnProperty(r,"FragmentBeforeFog")?r.FragmentBeforeFog:null;null!=v&&""!==v&&(this.materialShaderChunks.Fragment_Before_Fog=v);var g=e.Utilities.HasOwnProperty(r,"FragmentBeforeFragColor")?r.FragmentBeforeFragColor:null;null!=g&&""!==g&&(this.materialShaderChunks.Fragment_Before_FragColor=g.replace("result","color"))}else e.Tools.Warn("Failed To Locate Shader Chunk Base: "+i)}},i.prototype._buildCustomShader=function(e,t,i,r,s){this._defines=s;var o=this.getShaderName();null!=o&&""!==o||(o=e),null!=o&&""!==o||(o="pbr");var n=this.locals.getDefines();if(null!=n&&null!=this._defines){var a=Object.keys(n);if(null!=a&&a.length>0){for(var l=this._defines,h=0,u=a;h<u.length;h++){var m=u[h];l[m]=n[m]}this._defines.rebuild()}}var c=0;if(null!=this._uniforms&&this._uniforms.length>0)for(c=0;c<this._uniforms.length;c++){var p=this._uniforms[c];t.indexOf(p)===-1&&t.push(p)}if(c=0,null!=this._samplers&&this._samplers.length>0)for(c=0;c<this._samplers.length;c++){var f=this._samplers[c];r.indexOf(f)===-1&&r.push(f)}return this.enableShaderChunks===!0?this._createShaderChunks(o):o},i.prototype._createShaderChunks=function(t){if(this._isCreatedShader)return this._createdShaderName;this._isCreatedShader=!1;var i=this.getShaderChunk();null!=i&&""!==i||(i=t),e.UniversalShaderDefines.ShaderIndexer++;var r=(i+"Custom"+e.UniversalShaderDefines.ShaderIndexer).trim(),s=e.Effect.ShadersStore[t+"VertexShader"],o=e.Effect.ShadersStore[t+"PixelShader"];this.updateShaderChunks();var n=r+"VertexShader";e.Effect.ShadersStore[n]=s.replace("#define CUSTOM_VERTEX_BEGIN",this.materialShaderChunks.Vertex_Begin?this.materialShaderChunks.Vertex_Begin:"").replace("#define CUSTOM_VERTEX_DEFINITIONS",this.materialShaderChunks.Vertex_Definitions?this.materialShaderChunks.Vertex_Definitions:"").replace("#define CUSTOM_VERTEX_MAIN_BEGIN",this.materialShaderChunks.Vertex_MainBegin?this.materialShaderChunks.Vertex_MainBegin:"").replace("#define CUSTOM_VERTEX_UPDATE_POSITION",this.materialShaderChunks.Vertex_Before_PositionUpdated?this.materialShaderChunks.Vertex_Before_PositionUpdated:"").replace("#define CUSTOM_VERTEX_UPDATE_NORMAL",this.materialShaderChunks.Vertex_Before_NormalUpdated?this.materialShaderChunks.Vertex_Before_NormalUpdated:"").replace("#define CUSTOM_VERTEX_MAIN_END",this.materialShaderChunks.Vertex_MainEnd?this.materialShaderChunks.Vertex_MainEnd:"");var a=r+"PixelShader";return e.Effect.ShadersStore[a]=o.replace("#define CUSTOM_FRAGMENT_BEGIN",this.materialShaderChunks.Fragment_Begin?this.materialShaderChunks.Fragment_Begin:"").replace("#define CUSTOM_FRAGMENT_DEFINITIONS",this.materialShaderChunks.Fragment_Definitions?this.materialShaderChunks.Fragment_Definitions:"").replace("#define CUSTOM_FRAGMENT_MAIN_BEGIN",this.materialShaderChunks.Fragment_MainBegin?this.materialShaderChunks.Fragment_MainBegin:"").replace("#define CUSTOM_FRAGMENT_UPDATE_ALBEDO",this.materialShaderChunks.Fragment_Custom_Albedo?this.materialShaderChunks.Fragment_Custom_Albedo:"").replace("#define CUSTOM_FRAGMENT_UPDATE_ALPHA",this.materialShaderChunks.Fragment_Custom_Alpha?this.materialShaderChunks.Fragment_Custom_Alpha:"").replace("#define CUSTOM_FRAGMENT_UPDATE_METALLICROUGHNESS",this.materialShaderChunks.Fragment_MetallicRoughness?this.materialShaderChunks.Fragment_MetallicRoughness:"").replace("#define CUSTOM_FRAGMENT_UPDATE_MICROSURFACE",this.materialShaderChunks.Fragment_MicroSurface?this.materialShaderChunks.Fragment_MicroSurface:"").replace("#define CUSTOM_FRAGMENT_BEFORE_LIGHTS",this.materialShaderChunks.Fragment_Before_Lights?this.materialShaderChunks.Fragment_Before_Lights:"").replace("#define CUSTOM_FRAGMENT_BEFORE_FOG",this.materialShaderChunks.Fragment_Before_Fog?this.materialShaderChunks.Fragment_Before_Fog:"").replace("#define CUSTOM_FRAGMENT_BEFORE_FRAGCOLOR",this.materialShaderChunks.Fragment_Before_FragColor?this.materialShaderChunks.Fragment_Before_FragColor:""),this._isCreatedShader=!0,this._createdShaderName=r,r},i.prototype._attachAfterBind=function(e,t){var i,r=this.getScene();if(r.texturesEnabled)for(i in this._textures){var s=this._textures[i];null!=s&&(t.setTexture(i,s),t.setFloat2(i+"Infos",s.coordinatesIndex,s.level),t.setMatrix(i+"Matrix",s.getTextureMatrix()))}for(i in this._vectors4)t.setVector4(i,this._vectors4[i]);for(i in this._floats)t.setFloat(i,this._floats[i])},i.prototype._setupAttachAfterBind=function(){var e=this,t=this._afterBind;this._afterBind=function(i,r){if(e._attachAfterBind(i,r),t)try{t(i,r)}catch(s){}}},i}(e.PBRMaterial);e.UniversalAlbedoMaterial=n,e._TypeStore.RegisteredTypes.UniversalAlbedoMaterial=n;var a=function(t){function i(i,r){var s=t.call(this,i,r)||this;return s.universalMaterial=!0,s.locals=null,s.terrainInfo=null,s._defines=null,s._uniforms=[],s._samplers=[],s._textures={},s._vectors4={},s._floats={},s.locals=new e.UniversalShaderDefines,s._defines=null,s._setupAttachAfterBind(),s.enableShaderChunks=!1,s.materialShaderChunks=new e.UniversalDiffuseChunks,s.customShaderNameResolve=s._buildCustomShader,s.customShaderChunkResolve(),s}return __extends(i,t),i.prototype.updateShaderChunks=function(){},i.prototype.getClassName=function(){return"UniversalDiffuseMaterial"},i.prototype.getShaderName=function(){return"default"},i.prototype.getShaderChunk=function(){return null},i.prototype.getShaderDefines=function(){return this._defines},i.prototype.getTexture=function(e){return this._textures[e]},i.prototype.getVector4=function(e){return this._vectors4[e]},i.prototype.getFloat=function(e){return this._floats[e]},i.prototype.setTexture=function(e,t,i){return void 0===i&&(i=!1),i===!0&&this.checkSampler(e),this._textures[e]=t,this},i.prototype.setVector4=function(e,t,i){return void 0===i&&(i=!1),i===!0&&this.checkUniform(e),this._vectors4[e]=t,this},i.prototype.setFloat=function(e,t,i){return void 0===i&&(i=!1),i===!0&&this.checkUniform(e),this._floats[e]=t,this},i.prototype.checkUniform=function(e){this._uniforms.indexOf(e)===-1&&(this._uniforms.push(e),this.locals.defineBoolean(e.toUpperCase()));
},i.prototype.checkSampler=function(e){this._samplers.indexOf(e)===-1&&(this._samplers.push(e),this.locals.defineBoolean(e.toUpperCase()),this.checkUniform(e+"Infos"),this.checkUniform(e+"Matrix"))},i.prototype.getAnimatables=function(){var e=t.prototype.getAnimatables.call(this);for(var i in this._textures){var r=this._textures[i];r&&r.animations&&r.animations.length>0&&e.push(r)}return e},i.prototype.getActiveTextures=function(){var e=t.prototype.getActiveTextures.call(this);for(var i in this._textures){var r=this._textures[i];r&&e.push(r)}return e},i.prototype.hasTexture=function(e){if(t.prototype.hasTexture.call(this,e))return!0;var i=!1;for(var r in this._textures){var s=this._textures[r];if(s===s){i=!0;break}}return i},i.prototype.dispose=function(e,i){if(i)for(var r in this._textures){var s=this._textures[r];s&&s.dispose(),this._textures[r]=null}this._textures={},t.prototype.dispose.call(this,e,i)},i.prototype.clone=function(t){var i,r=this,s=e.SerializationHelper.Clone(function(){return new e.UniversalDiffuseMaterial(t,r.getScene())},this);s._textures={};for(i in this._textures){var o=this._textures[i];o&&s.setTexture(i,o.clone(),!0)}s._vectors4={};for(i in this._vectors4)s.setVector4(i,this._vectors4[i].clone(),!0);s._floats={};for(i in this._floats)s.setFloat(i,this._floats[i],!0);return s},i.prototype.serialize=function(){var t,i=e.SerializationHelper.Serialize(this);i.customType="BABYLON.UniversalDiffuseMaterial",i.textures={};for(t in this._textures){var r=this._textures[t];r&&(i.textures[t]=r.serialize())}i.vectors4={};for(t in this._vectors4)i.vectors4[t]=this._vectors4[t].asArray();i.floats={};for(t in this._floats)i.floats[t]=this._floats[t];return i},i.Parse=function(t,i,r){var s,o=e.SerializationHelper.Parse(function(){return new e.UniversalDiffuseMaterial(t.name,i)},t,i,r);for(s in t.textures){var n=t.textures[s];n&&o.setTexture(s,e.Texture.Parse(n,i,r),!0)}for(s in t.vectors4)o.setVector4(s,e.Vector4.FromArray(t.vectors4[s]),!0);for(s in t.floats)o.setFloat(s,t.floats[s],!0);return o},i.prototype.customShaderChunkResolve=function(){var t=this.getShaderChunk();if(null!=t&&""!==t){var i=t+"ShaderChunks";if(null!=e.Effect.ShadersStore[i]){var r=e.Effect.ShadersStore[i],s=e.Utilities.HasOwnProperty(r,"VertexBegin")?r.VertexBegin:null;null!=s&&""!==s&&(this.materialShaderChunks.Vertex_Begin=s);var o=e.Utilities.HasOwnProperty(r,"VertexDefinitions")?r.VertexDefinitions:null;null!=o&&""!==o&&(this.materialShaderChunks.Vertex_Definitions=o);var n=e.Utilities.HasOwnProperty(r,"VertexMainBegin")?r.VertexMainBegin:null;null!=n&&""!==n&&(this.materialShaderChunks.Vertex_MainBegin=n);var a=e.Utilities.HasOwnProperty(r,"VertexUpdatePosition")?r.VertexUpdatePosition:null;null!=a&&""!==a&&(this.materialShaderChunks.Vertex_Before_PositionUpdated=a.replace("result","positionUpdated"));var l=e.Utilities.HasOwnProperty(r,"VertexUpdateNormal")?r.VertexUpdateNormal:null;null!=l&&""!==l&&(this.materialShaderChunks.Vertex_Before_NormalUpdated=l.replace("result","normalUpdated"));var h=e.Utilities.HasOwnProperty(r,"VertexMainEnd")?r.VertexMainEnd:null;null!=h&&""!==h&&(this.materialShaderChunks.Vertex_MainEnd=h);var u=e.Utilities.HasOwnProperty(r,"FragmentBegin")?r.FragmentBegin:null;null!=u&&""!==u&&(this.materialShaderChunks.Fragment_Begin=u);var m=e.Utilities.HasOwnProperty(r,"FragmentDefinitions")?r.FragmentDefinitions:null;null!=m&&""!==m&&(this.materialShaderChunks.Fragment_Definitions=m);var c=e.Utilities.HasOwnProperty(r,"FragmentMainBegin")?r.FragmentMainBegin:null;null!=c&&""!==c&&(this.materialShaderChunks.Fragment_MainBegin=c);var p=e.Utilities.HasOwnProperty(r,"FragmentUpdateDiffuse")?r.FragmentUpdateDiffuse:null;null!=p&&""!==p&&(this.materialShaderChunks.Fragment_Custom_Diffuse=p.replace("result","diffuseColor"));var f=e.Utilities.HasOwnProperty(r,"FragmentUpdateAlpha")?r.FragmentUpdateAlpha:null;null!=f&&""!==f&&(this.materialShaderChunks.Fragment_Custom_Alpha=f.replace("result","alpha"));var _=e.Utilities.HasOwnProperty(r,"FragmentBeforeLights")?r.FragmentBeforeLights:null;null!=_&&""!==_&&(this.materialShaderChunks.Fragment_Before_Lights=_);var d=e.Utilities.HasOwnProperty(r,"FragmentBeforeFog")?r.FragmentBeforeFog:null;null!=d&&""!==d&&(this.materialShaderChunks.Fragment_Before_Fog=d);var y=e.Utilities.HasOwnProperty(r,"FragmentBeforeFragColor")?r.FragmentBeforeFragColor:null;null!=y&&""!==y&&(this.materialShaderChunks.Fragment_Before_FragColor=y.replace("result","color"))}else e.Tools.Warn("Failed To Locate Shader Chunk Base: "+i)}},i.prototype._buildCustomShader=function(e,t,i,r,s){this._defines=s;var o=this.getShaderName();null!=o&&""!==o||(o=e),null!=o&&""!==o||(o="default");var n=this.locals.getDefines();if(null!=n&&null!=this._defines){var a=Object.keys(n);if(null!=a&&a.length>0){for(var l=this._defines,h=0,u=a;h<u.length;h++){var m=u[h];l[m]=n[m]}this._defines.rebuild()}}var c=0;if(null!=this._uniforms&&this._uniforms.length>0)for(c=0;c<this._uniforms.length;c++){var p=this._uniforms[c];t.indexOf(p)===-1&&t.push(p)}if(c=0,null!=this._samplers&&this._samplers.length>0)for(c=0;c<this._samplers.length;c++){var f=this._samplers[c];r.indexOf(f)===-1&&r.push(f)}return this.enableShaderChunks===!0?this._createShaderChunks(o):o},i.prototype._createShaderChunks=function(t){if(this._isCreatedShader)return this._createdShaderName;this._isCreatedShader=!1;var i=this.getShaderChunk();null!=i&&""!==i||(i=t),e.UniversalShaderDefines.ShaderIndexer++;var r=(i+"Custom"+e.UniversalShaderDefines.ShaderIndexer).trim(),s=e.Effect.ShadersStore[t+"VertexShader"],o=e.Effect.ShadersStore[t+"PixelShader"];this.updateShaderChunks();var n=r+"VertexShader";e.Effect.ShadersStore[n]=s.replace("#define CUSTOM_VERTEX_BEGIN",this.materialShaderChunks.Vertex_Begin?this.materialShaderChunks.Vertex_Begin:"").replace("#define CUSTOM_VERTEX_DEFINITIONS",this.materialShaderChunks.Vertex_Definitions?this.materialShaderChunks.Vertex_Definitions:"").replace("#define CUSTOM_VERTEX_MAIN_BEGIN",this.materialShaderChunks.Vertex_MainBegin?this.materialShaderChunks.Vertex_MainBegin:"").replace("#define CUSTOM_VERTEX_UPDATE_POSITION",this.materialShaderChunks.Vertex_Before_PositionUpdated?this.materialShaderChunks.Vertex_Before_PositionUpdated:"").replace("#define CUSTOM_VERTEX_UPDATE_NORMAL",this.materialShaderChunks.Vertex_Before_NormalUpdated?this.materialShaderChunks.Vertex_Before_NormalUpdated:"").replace("#define CUSTOM_VERTEX_MAIN_END",this.materialShaderChunks.Vertex_MainEnd?this.materialShaderChunks.Vertex_MainEnd:"");var a=r+"PixelShader";return e.Effect.ShadersStore[a]=o.replace("#define CUSTOM_FRAGMENT_BEGIN",this.materialShaderChunks.Fragment_Begin?this.materialShaderChunks.Fragment_Begin:"").replace("#define CUSTOM_FRAGMENT_DEFINITIONS",this.materialShaderChunks.Fragment_Definitions?this.materialShaderChunks.Fragment_Definitions:"").replace("#define CUSTOM_FRAGMENT_MAIN_BEGIN",this.materialShaderChunks.Fragment_MainBegin?this.materialShaderChunks.Fragment_MainBegin:"").replace("#define CUSTOM_FRAGMENT_UPDATE_DIFFUSE",this.materialShaderChunks.Fragment_Custom_Diffuse?this.materialShaderChunks.Fragment_Custom_Diffuse:"").replace("#define CUSTOM_FRAGMENT_UPDATE_ALPHA",this.materialShaderChunks.Fragment_Custom_Alpha?this.materialShaderChunks.Fragment_Custom_Alpha:"").replace("#define CUSTOM_FRAGMENT_BEFORE_LIGHTS",this.materialShaderChunks.Fragment_Before_Lights?this.materialShaderChunks.Fragment_Before_Lights:"").replace("#define CUSTOM_FRAGMENT_BEFORE_FOG",this.materialShaderChunks.Fragment_Before_Fog?this.materialShaderChunks.Fragment_Before_Fog:"").replace("#define CUSTOM_FRAGMENT_BEFORE_FRAGCOLOR",this.materialShaderChunks.Fragment_Before_FragColor?this.materialShaderChunks.Fragment_Before_FragColor:""),this._isCreatedShader=!0,this._createdShaderName=r,r},i.prototype._attachAfterBind=function(e,t){var i,r=this.getScene();if(r.texturesEnabled)for(i in this._textures){var s=this._textures[i];null!=s&&(t.setTexture(i,s),t.setFloat2(i+"Infos",s.coordinatesIndex,s.level),t.setMatrix(i+"Matrix",s.getTextureMatrix()))}for(i in this._vectors4)t.setVector4(i,this._vectors4[i]);for(i in this._floats)t.setFloat(i,this._floats[i])},i.prototype._setupAttachAfterBind=function(){var e=this,t=this._afterBind;this._afterBind=function(i,r){if(e._attachAfterBind(i,r),t)try{t(i,r)}catch(s){}}},i}(e.StandardMaterial);e.UniversalDiffuseMaterial=a,e._TypeStore.RegisteredTypes.UniversalDiffuseMaterial=a;var l=function(t){function i(e,i){var r=t.call(this,e,i)||this;return r.enableShaderChunks=!0,r}return __extends(i,t),i.prototype.getClassName=function(){return"UniversalTerrainMaterial"},i.prototype.getShaderName=function(){return"pbr"},i.prototype.getShaderChunk=function(){return null},i.prototype.updateShaderChunks=function(){var t="surfaceAlbedo",i="splatmapSampler",r="detailsSampler",s="normalsSampler",o=e.System.gammaCorrection;null!=this.materialShaderChunks.Vertex_Definitions&&""!==this.materialShaderChunks.Vertex_Definitions?this.materialShaderChunks.Vertex_Definitions=this.formatTerrainVertexDefintions()+this.materialShaderChunks.Vertex_Definitions:this.materialShaderChunks.Vertex_Definitions=this.formatTerrainVertexDefintions(),null!=this.materialShaderChunks.Vertex_MainEnd&&""!==this.materialShaderChunks.Vertex_MainEnd?this.materialShaderChunks.Vertex_MainEnd=this.formatTerrainVertexMainEnd()+this.materialShaderChunks.Vertex_MainEnd:this.materialShaderChunks.Vertex_MainEnd=this.formatTerrainVertexMainEnd(),null!=this.materialShaderChunks.Fragment_Definitions&&""!==this.materialShaderChunks.Fragment_Definitions?this.materialShaderChunks.Fragment_Definitions=this.formatTerrainFragmentDefintions(i,r,s)+this.materialShaderChunks.Fragment_Definitions:this.materialShaderChunks.Fragment_Definitions=this.formatTerrainFragmentDefintions(i,r,s),null!=this.materialShaderChunks.Fragment_Custom_Albedo&&""!==this.materialShaderChunks.Fragment_Custom_Albedo?this.materialShaderChunks.Fragment_Custom_Albedo=this.formatTerrainFragmentUpdateColor(this.terrainInfo,t,i,r,s,o)+this.materialShaderChunks.Fragment_Custom_Albedo:this.materialShaderChunks.Fragment_Custom_Albedo=this.formatTerrainFragmentUpdateColor(this.terrainInfo,t,i,r,s,o)},i.prototype.formatTerrainVertexDefintions=function(){return"\r\n#define TERRAIN_VERTEX_DEFINITIONS\r\n\r\nvarying vec2 vSplatmapUV;\r\n\r\n"},i.prototype.formatTerrainVertexMainEnd=function(){return"\r\n#define TERRAIN_VERTEX_MAIN_END\r\n\r\n#ifdef UV1\r\nvSplatmapUV = uv;\r\n#endif\r\n\r\n"},i.prototype.formatTerrainFragmentDefintions=function(e,t,i){return"\r\n#define TERRAIN_FRAGMENT_DEFNITIONS\r\n\r\nvarying vec2 vSplatmapUV;\r\nuniform sampler2D "+e+";\r\nuniform sampler2D "+t+";\r\nuniform sampler2D "+i+";\r\n\r\nfloat calculateMipmapLevel(const in vec2 uvs, const in vec2 size)\r\n{\r\n    vec2 dx = dFdx(uvs * size.x);\r\n    vec2 dy = dFdy(uvs * size.y);\r\n    float d = max(dot(dx, dx), dot(dy, dy));\r\n    return 0.4 * log2(d);\r\n}\r\n\r\nvec4 sampleTextureAtlas2D(const in sampler2D atlas, const in float gamma, const in vec2 tile, const in vec4 rect, in vec2 uvs, in float lod)\r\n{\r\n    if (lod < 0.0) lod = clamp(calculateMipmapLevel(uvs, vec2(tile.x, tile.x)), 0.0, tile.y);   // Tile Info (tile.xy)\r\n    float size = pow(2.0, tile.y - lod);                                                        // Tile Bits (tile.y)\r\n    float sizex = size / rect.z;                                                                // Tile Width (rect.z)\r\n    float sizey = size / rect.w;                                                                // Tile Height (rect.w)\r\n    uvs = fract(uvs);                                                                           // Perfrom Tiling (fract)\r\n    uvs.x = uvs.x * ((sizex * rect.z - 1.0) / sizex) + 0.5 / sizex + rect.z * rect.x;           // Tile Position X (rect.x)\r\n    uvs.y = uvs.y * ((sizey * rect.w - 1.0) / sizey) + 0.5 / sizey + rect.w * rect.y;           // Tile Position Y (rect.y)\r\n    vec4 color = texture2DLodEXT(atlas, uvs, lod);\r\n    if (gamma != 1.0) {\r\n        color.r = pow(color.r, gamma);\r\n        color.g = pow(color.g, gamma);\r\n        color.b = pow(color.b, gamma);\r\n    }\r\n    return color;\r\n}\r\n\r\nvec4 sampleSplatmapAtlas2D(const in sampler2D atlas, const in vec2 tile, const in vec4 rect, in vec2 uvs)\r\n{\r\n    float size = pow(2.0, tile.y);                                                              // Tile Bits (tile.y)\r\n\t   float sizex = size / rect.z;                                                                // Tile Width (rect.z)\r\n\t   float sizey = size / rect.w;                                                                // Tile Height (rect.w)\r\n\t   uvs.x = uvs.x * ((sizex * rect.z - 1.0) / sizex) + 0.5 / sizex + rect.z * rect.x;           // Tile Position X (rect.x)\r\n\t   uvs.y = uvs.y * ((sizey * rect.w - 1.0) / sizey) + 0.5 / sizey + rect.w * rect.y;           // Tile Position Y (rect.y)\r\n    return texture2D(atlas, uvs);\r\n}\r\n\r\nvec3 blendSplatmapAtlasColors(const in vec4 splatmap, in vec4 color1, in vec4 color2, in vec4 color3, in vec4 color4, in vec3 mixbuffer)\r\n{\r\n    mixbuffer += (color1.rgb * splatmap.r);\r\n    mixbuffer += (color2.rgb * splatmap.g);\r\n    mixbuffer += (color3.rgb * splatmap.b);\r\n    mixbuffer += (color4.rgb * splatmap.a);\r\n    return mixbuffer;\r\n}\r\n\r\nvec3 perturbNormalSamplerColor(mat3 cotangentFrame, vec3 samplerColor, float scale)\r\n{\r\n    vec3 map = samplerColor.xyz;\r\n    map = map * 2.00787402 - 1.00787402;\r\n    #ifdef NORMALXYSCALE\r\n        map = normalize(map * vec3(scale, scale, 1.0));\r\n    #endif\r\n    return normalize(cotangentFrame * map);\r\n}\r\n\r\n\r\n"},i.prototype.formatTerrainFragmentUpdateColor=function(e,t,i,r,s,o){void 0===o&&(o=1);var n="";if(null!=e&&null!=e.textureAtlas&&null!=e.splatmapAtlas&&e.splatmapCount>1){n="\r\n#define TERRAIN_FRAGMENT_UPDATE_COLOR\r\n\r\nvec3 normalsColor = vec3(0.5, 0.5, 1.0);\r\nvec3 normalsBuffer = vec3(0.0, 0.0, 0.0);\r\nvec3 splatmapBuffer = vec3(0.0, 0.0, 0.0);\r\nfloat autoMipMapLevel = -1.0;\r\nfloat normalCorrection = 1.0;\r\nfloat detailCorrection = "+o.toFixed(4)+";\r\n\r\n#if defined(ALBEDO) && defined("+i.toUpperCase()+") && defined("+r.toUpperCase()+")\r\n\r\n// Reset Normal Values\r\n#if defined(BUMP) || defined(PARALLAX) || defined(ANISOTROPIC)\r\n    uvOffset = vec2(0.0, 0.0);\r\n    #ifdef NORMAL\r\n        normalW = normalize(vNormalW);\r\n    #else\r\n        normalW = normalize(cross(dFdx(vPositionW), dFdy(vPositionW))) * vEyePosition.w;\r\n    #endif\r\n    #ifdef CLEARCOAT\r\n        clearCoatNormalW = normalW;\r\n    #endif\r\n    #if defined(BUMP) || defined(PARALLAX)\r\n        #if defined(TANGENT) && defined(NORMAL)\r\n            TBN = vTBN;\r\n        #else\r\n            TBN = cotangent_frame(normalW, vPositionW, vSplatmapUV);\r\n        #endif\r\n    #elif defined(ANISOTROPIC)\r\n        #if defined(TANGENT) && defined(NORMAL)\r\n            TBN = vTBN;\r\n        #else\r\n            TBN = cotangent_frame(normalW, vPositionW, vSplatmapUV, vec2(1.0, 1.0));\r\n        #endif\r\n    #endif\r\n    #ifdef PARALLAX\r\n        invTBN = transposeMat3(TBN);\r\n    #endif\r\n    normalW = perturbNormalSamplerColor(TBN, normalsColor, 1.0);\r\n#endif\r\n\r\n// Global Atlas Values\r\nfloat splatTileSize = "+e.splatmapAtlas[2].toFixed(4)+";\r\nfloat splatTileBits = "+e.splatmapAtlas[3].toFixed(4)+";\r\nfloat detailTileSize = "+e.textureAtlas[2].toFixed(4)+";\r\nfloat detailTileBits = "+e.textureAtlas[3].toFixed(4)+";\r\n\r\n// Sample splatmap textures\r\n";for(var a=0,l=0;l<e.splatmapCount;l++){a=4*l;var h=e["splatmapRect"+l];if(n+="vec4 splatmapRect"+l+" = vec4("+h[0].toFixed(4)+", "+h[1].toFixed(4)+", "+h[2].toFixed(4)+", "+h[3].toFixed(4)+");\r\n",n+="vec4 splatmapAlbedo"+l+" = sampleSplatmapAtlas2D("+i+", vec2(splatTileSize, splatTileBits), splatmapRect"+l+", (vSplatmapUV + uvOffset));\r\n",n+="vec4 textureAlbedo"+(a+0)+" = vec4(0.0, 0.0, 0.0, 1.0);\r\n",n+="vec4 textureAlbedo"+(a+1)+" = vec4(0.0, 0.0, 0.0, 1.0);\r\n",n+="vec4 textureAlbedo"+(a+2)+" = vec4(0.0, 0.0, 0.0, 1.0);\r\n",n+="vec4 textureAlbedo"+(a+3)+" = vec4(0.0, 0.0, 0.0, 1.0);\r\n",e["textureRect"+(a+0)]){var u=e["textureRect"+(a+0)],m=e["textureInfo"+(a+0)];n+="vec4 textureRect"+(a+0)+" = vec4("+u[0].toFixed(4)+", "+u[1].toFixed(4)+", "+u[2].toFixed(4)+", "+u[3].toFixed(4)+");\r\n",n+="vec2 textureScale"+(a+0)+" = vec2("+m[0].toFixed(4)+", "+m[1].toFixed(4)+");\r\n",n+="vec2 textureOffset"+(a+0)+" = vec2("+m[2].toFixed(4)+", "+m[3].toFixed(4)+");\r\n",n+="vec2 textureTileUV"+(a+0)+" = ((vSplatmapUV + textureOffset"+(a+0)+") * textureScale"+(a+0)+");\r\n",n+="textureAlbedo"+(a+0)+" = sampleTextureAtlas2D("+r+", detailCorrection, vec2(detailTileSize, detailTileBits), textureRect"+(a+0)+", textureTileUV"+(a+0)+", autoMipMapLevel);\r\n"}if(e["textureRect"+(a+1)]){var u=e["textureRect"+(a+1)],m=e["textureInfo"+(a+1)];n+="vec4 textureRect"+(a+1)+" = vec4("+u[0].toFixed(4)+", "+u[1].toFixed(4)+", "+u[2].toFixed(4)+", "+u[3].toFixed(4)+");\r\n",n+="vec2 textureScale"+(a+1)+" = vec2("+m[0].toFixed(4)+", "+m[1].toFixed(4)+");\r\n",n+="vec2 textureOffset"+(a+1)+" = vec2("+m[2].toFixed(4)+", "+m[3].toFixed(4)+");\r\n",n+="vec2 textureTileUV"+(a+1)+" = ((vSplatmapUV + textureOffset"+(a+1)+") * textureScale"+(a+1)+");\r\n",n+="textureAlbedo"+(a+1)+" = sampleTextureAtlas2D("+r+", detailCorrection, vec2(detailTileSize, detailTileBits), textureRect"+(a+1)+", textureTileUV"+(a+1)+", autoMipMapLevel);\r\n"}if(e["textureRect"+(a+2)]){var u=e["textureRect"+(a+2)],m=e["textureInfo"+(a+2)];n+="vec4 textureRect"+(a+2)+" = vec4("+u[0].toFixed(4)+", "+u[1].toFixed(4)+", "+u[2].toFixed(4)+", "+u[3].toFixed(4)+");\r\n",n+="vec2 textureScale"+(a+2)+" = vec2("+m[0].toFixed(4)+", "+m[1].toFixed(4)+");\r\n",n+="vec2 textureOffset"+(a+2)+" = vec2("+m[2].toFixed(4)+", "+m[3].toFixed(4)+");\r\n",n+="vec2 textureTileUV"+(a+2)+" = ((vSplatmapUV + textureOffset"+(a+2)+") * textureScale"+(a+2)+");\r\n",n+="textureAlbedo"+(a+2)+" = sampleTextureAtlas2D("+r+", detailCorrection, vec2(detailTileSize, detailTileBits), textureRect"+(a+2)+", textureTileUV"+(a+2)+", autoMipMapLevel);\r\n"}if(e["textureRect"+(a+3)]){var u=e["textureRect"+(a+3)],m=e["textureInfo"+(a+3)];n+="vec4 textureRect"+(a+3)+" = vec4("+u[0].toFixed(4)+", "+u[1].toFixed(4)+", "+u[2].toFixed(4)+", "+u[3].toFixed(4)+");\r\n",n+="vec2 textureScale"+(a+3)+" = vec2("+m[0].toFixed(4)+", "+m[1].toFixed(4)+");\r\n",n+="vec2 textureOffset"+(a+3)+" = vec2("+m[2].toFixed(4)+", "+m[3].toFixed(4)+");\r\n",n+="vec2 textureTileUV"+(a+3)+" = ((vSplatmapUV + textureOffset"+(a+3)+") * textureScale"+(a+3)+");\r\n",n+="textureAlbedo"+(a+3)+" = sampleTextureAtlas2D("+r+", detailCorrection, vec2(detailTileSize, detailTileBits), textureRect"+(a+3)+", textureTileUV"+(a+3)+", autoMipMapLevel);\r\n"}if(n+="splatmapBuffer = blendSplatmapAtlasColors(splatmapAlbedo"+l+", textureAlbedo"+(a+0)+", textureAlbedo"+(a+1)+", textureAlbedo"+(a+2)+", textureAlbedo"+(a+3)+", splatmapBuffer);\r\n",n+="#if defined(BUMP) || defined(PARALLAX) || defined(ANISOTROPIC)\r\n",n+="    #if defined("+s.toUpperCase()+")\r\n",n+="        vec4 normalColor"+(a+0)+" = vec4(0.0, 0.0, 0.0, 1.0);\r\n",n+="        vec4 normalColor"+(a+1)+" = vec4(0.0, 0.0, 0.0, 1.0);\r\n",n+="        vec4 normalColor"+(a+2)+" = vec4(0.0, 0.0, 0.0, 1.0);\r\n",n+="        vec4 normalColor"+(a+3)+" = vec4(0.0, 0.0, 0.0, 1.0);\r\n",e["textureRect"+(a+0)]){var c=e["normalsScale"+(a+0)];n+="        float normalScale"+(a+0)+" = "+c.toFixed(4)+";\r\n",n+="        normalColor"+(a+0)+" = sampleTextureAtlas2D("+s+", normalCorrection, vec2(detailTileSize, detailTileBits), textureRect"+(a+0)+", textureTileUV"+(a+0)+", autoMipMapLevel);\r\n",n+="        normalColor"+(a+0)+".rgb = perturbNormalSamplerColor(TBN, normalColor"+(a+0)+".rgb, normalScale"+(a+0)+");\r\n"}if(e["textureRect"+(a+1)]){var c=e["normalsScale"+(a+1)];n+="        float normalScale"+(a+1)+" = "+c.toFixed(4)+";\r\n",n+="        normalColor"+(a+1)+" = sampleTextureAtlas2D("+s+", normalCorrection, vec2(detailTileSize, detailTileBits), textureRect"+(a+1)+", textureTileUV"+(a+1)+", autoMipMapLevel);\r\n",n+="        normalColor"+(a+1)+".rgb = perturbNormalSamplerColor(TBN, normalColor"+(a+1)+".rgb, normalScale"+(a+1)+");\r\n"}if(e["textureRect"+(a+2)]){var c=e["normalsScale"+(a+2)];n+="        float normalScale"+(a+2)+" = "+c.toFixed(4)+";\r\n",n+="        normalColor"+(a+2)+" = sampleTextureAtlas2D("+s+", normalCorrection, vec2(detailTileSize, detailTileBits), textureRect"+(a+2)+", textureTileUV"+(a+2)+", autoMipMapLevel);\r\n",n+="        normalColor"+(a+2)+".rgb = perturbNormalSamplerColor(TBN, normalColor"+(a+2)+".rgb, normalScale"+(a+2)+");\r\n"}if(e["textureRect"+(a+3)]){var c=e["normalsScale"+(a+3)];n+="        float normalScale"+(a+3)+" = "+c.toFixed(4)+";\r\n",n+="        normalColor"+(a+3)+" = sampleTextureAtlas2D("+s+", normalCorrection, vec2(detailTileSize, detailTileBits), textureRect"+(a+3)+", textureTileUV"+(a+3)+", autoMipMapLevel);\r\n",n+="        normalColor"+(a+3)+".rgb = perturbNormalSamplerColor(TBN, normalColor"+(a+3)+".rgb, normalScale"+(a+3)+");\r\n"}n+="        normalsBuffer = blendSplatmapAtlasColors(splatmapAlbedo"+l+", normalColor"+(a+0)+", normalColor"+(a+1)+", normalColor"+(a+2)+", normalColor"+(a+3)+", normalsBuffer);\r\n",n+="    #endif\r\n",n+="#endif\r\n",n+="\r\n"}n+="// Update Color Values\r\n"+t+".rgb = splatmapBuffer;\r\n#if defined(BUMP) || defined(PARALLAX) || defined(ANISOTROPIC)\r\n    #if defined("+s.toUpperCase()+")\r\n        normalW = normalsBuffer;\r\n    #endif\r\n    #if defined(FORCENORMALFORWARD) && defined(NORMAL)\r\n        vec3 faceNormal = normalize(cross(dFdx(vPositionW), dFdy(vPositionW))) * vEyePosition.w;\r\n        #if defined(TWOSIDEDLIGHTING)\r\n            faceNormal = gl_FrontFacing ? faceNormal : -faceNormal;\r\n        #endif\r\n        normalW *= sign(dot(normalW, faceNormal));\r\n    #endif\r\n    #if defined(TWOSIDEDLIGHTING) && defined(NORMAL)\r\n        normalW = gl_FrontFacing ? normalW : -normalW;\r\n    #endif\r\n#endif\r\n\r\n#endif\r\n\r\n"}return n},i}(e.UniversalAlbedoMaterial);e.UniversalTerrainMaterial=l,e._TypeStore.RegisteredTypes.UniversalTerrainMaterial=l}(BABYLON||(BABYLON={}));var __extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function r(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(r.prototype=i.prototype,new r)}}(),BABYLON;!function(e){var t=function(t){function i(e,i,r){return void 0===r&&(r={}),t.call(this,e,i,r)||this}return __extends(i,t),i.prototype.start=function(){},i.prototype.update=function(){},i.prototype.after=function(){},i.prototype.destroy=function(){},i.IsXboxLivePluginEnabled=function(){return!!window.isXboxLivePluginEnabled&&window.isXboxLivePluginEnabled()},i.IsXboxLiveUserSignedIn=function(t,i){if(void 0===t&&(t=null),void 0===i&&(i=e.PlayerNumber.One),e.WindowsPlatform.IsXboxLivePluginEnabled()){var r=null!=t?e.WindowsPlatform.GetXboxLiveSystemUser(t,i):e.WindowsPlatform.GetXboxLiveUser(i);return null!=r&&1==r.isSignedIn}return!1},i.XboxLiveUserSignIn=function(t,i,r,s){void 0===t&&(t=e.PlayerNumber.One),e.WindowsPlatform.IsXboxLivePluginEnabled()&&e.WindowsPlatform.XboxLiveUserSilentSignIn(t,function(o){o.status===Microsoft.Xbox.Services.System.SignInStatus.userInteractionRequired?e.WindowsPlatform.XboxLiveUserDialogSignIn(t,function(e){i&&i(e)},r,s):i&&i(o)},r,s)},i.XboxLiveUserSilentSignIn=function(t,i,r,s){return void 0===t&&(t=e.PlayerNumber.One),e.WindowsPlatform.IsXboxLivePluginEnabled()?e.WindowsPlatform.GetXboxLiveUser(t).signInSilentlyAsync(null).then(i,r,s):null},i.XboxLiveUserDialogSignIn=function(t,i,r,s){return void 0===t&&(t=e.PlayerNumber.One),e.WindowsPlatform.IsXboxLivePluginEnabled()?e.WindowsPlatform.GetXboxLiveUser(t).signInAsync(null).then(i,r,s):null},i.LoadXboxLiveUserProfile=function(t,i,r,s){return void 0===t&&(t=e.PlayerNumber.One),e.WindowsPlatform.IsXboxLivePluginEnabled()?e.WindowsPlatform.GetXboxLiveUserContext(t).profileService.getUserProfileAsync(e.WindowsPlatform.GetXboxLiveUser(t).xboxUserId).then(i,r,s):null},i.GetXboxLiveUser=function(t){void 0===t&&(t=e.PlayerNumber.One);var i=null;if(e.WindowsPlatform.IsXboxLivePluginEnabled())switch(t){case e.PlayerNumber.One:i=window.BabylonToolkit.XboxLive.Plugin.getXboxLiveUserOne();break;case e.PlayerNumber.Two:i=window.BabylonToolkit.XboxLive.Plugin.getXboxLiveUserTwo();break;case e.PlayerNumber.Three:i=window.BabylonToolkit.XboxLive.Plugin.getXboxLiveUserThree();break;case e.PlayerNumber.Four:i=window.BabylonToolkit.XboxLive.Plugin.getXboxLiveUserFour()}return i},i.GetXboxLiveSystemUser=function(t,i){void 0===i&&(i=e.PlayerNumber.One);var r=null;if(e.WindowsPlatform.IsXboxLivePluginEnabled())switch(i){case e.PlayerNumber.One:r=window.BabylonToolkit.XboxLive.Plugin.getXboxLiveSystemUserOne(t);break;case e.PlayerNumber.Two:r=window.BabylonToolkit.XboxLive.Plugin.getXboxLiveSystemUserTwo(t);break;case e.PlayerNumber.Three:r=window.BabylonToolkit.XboxLive.Plugin.getXboxLiveSystemUserThree(t);break;case e.PlayerNumber.Four:r=window.BabylonToolkit.XboxLive.Plugin.getXboxLiveSystemUserFour(t)}return r},i.GetXboxLiveUserContext=function(t){void 0===t&&(t=e.PlayerNumber.One);var i=null;if(e.WindowsPlatform.IsXboxLivePluginEnabled())switch(t){case e.PlayerNumber.One:i=window.BabylonToolkit.XboxLive.Plugin.getXboxLiveContextOne();break;case e.PlayerNumber.Two:i=window.BabylonToolkit.XboxLive.Plugin.getXboxLiveContextTwo();break;case e.PlayerNumber.Three:i=window.BabylonToolkit.XboxLive.Plugin.getXboxLiveContextThree();break;case e.PlayerNumber.Four:i=window.BabylonToolkit.XboxLive.Plugin.getXboxLiveContextFour()}return i},i.ResetXboxLiveUserContext=function(t){if(void 0===t&&(t=e.PlayerNumber.One),e.WindowsPlatform.IsXboxLivePluginEnabled()&&e.WindowsPlatform.IsXboxLivePluginEnabled())switch(t){case e.PlayerNumber.One:window.BabylonToolkit.XboxLive.Plugin.resetXboxLiveUserContextOne();break;case e.PlayerNumber.Two:window.BabylonToolkit.XboxLive.Plugin.resetXboxLiveUserContextTwo();break;case e.PlayerNumber.Three:window.BabylonToolkit.XboxLive.Plugin.resetXboxLiveUserContextThree();break;case e.PlayerNumber.Four:window.BabylonToolkit.XboxLive.Plugin.resetXboxLiveUserContextFour()}},i.GetXboxLiveContextProperty=function(t){return e.WindowsPlatform.IsXboxLivePluginEnabled()?window.BabylonToolkit.XboxLive.Plugin.getXboxLiveContextProperty(t):null},i.SetXboxLiveContextProperty=function(t,i){e.WindowsPlatform.IsXboxLivePluginEnabled()&&window.BabylonToolkit.XboxLive.Plugin.setXboxLiveContextProperty(t,i)},i.ResetXboxLivePropertyContexts=function(){e.WindowsPlatform.IsXboxLivePluginEnabled()&&window.BabylonToolkit.XboxLive.Plugin.resetXboxLivePropertyContexts()},i.SetXboxLiveSignOutHandler=function(t){void 0===t&&(t=null),e.WindowsPlatform.IsXboxLivePluginEnabled()&&(window.BabylonToolkit.XboxLive.Plugin.onusersignout=t)},i}(e.ScriptComponent);e.WindowsPlatform=t}(BABYLON||(BABYLON={})),BABYLON.SceneManager.IsXboxOne()&&navigator.gamepadInputEmulation&&(navigator.gamepadInputEmulation="gamepad"),BABYLON.SceneManager.IsWindows()&&"undefined"!=typeof Windows.UI.ViewManagement&&"undefined"!=typeof Windows.UI.ViewManagement.ApplicationViewBoundsMode&&"undefined"!=typeof Windows.UI.ViewManagement.ApplicationViewBoundsMode.useCoreWindow&&Windows.UI.ViewManagement.ApplicationView.getForCurrentView().setDesiredBoundsMode(Windows.UI.ViewManagement.ApplicationViewBoundsMode.useCoreWindow);

// worker.js
var versionStamp = '###VERSION###';
var installFiles = ['###INSTALL###'];
// ..
// Post Service Worker Version Message
// ..
self.addEventListener('message', function(evt) {
    if (evt.data != null && evt.data === 'version' && evt.ports != null && evt.ports.length > 0) {
        var port = evt.ports[0];
        if (port && port.postMessage) {
            // console.log('WORKER: Version check: ' + versionStamp);
            port.postMessage(versionStamp);
        }
    }
});
// ..
// Install Service Worker File System
// ..
self.addEventListener('install', function(evt) {
    evt.waitUntil(
        caches.open(versionStamp).then(function(cache) {
            // console.log('WORKER: Fetching cache: ' + versionStamp);
            var cachePromises = installFiles.map(function(urlToPrefetch) {
                var url = new URL(urlToPrefetch, location.href);
                url.search += (url.search ? '&' : '?') + 'time=' + new Date().getTime().toString();
                var request = new Request(url, { mode: 'no-cors' });
                return fetch(request, { cache: 'no-store' }).then(function(response) {
                    if (response.status >= 400) throw new Error('request for ' + urlToPrefetch + ' failed with status ' + response.statusText);
                    return cache.put(urlToPrefetch, response);
                }).catch(function(error) {
                    // console.warn('WORKER: Not caching ' + urlToPrefetch + ' due to ' + error);
                });
            });
            return Promise.all(cachePromises).then(function() {
                // console.log('WORKER: Cache updated: ' + versionStamp);
                return self.skipWaiting();
            });
        }).catch(function(error) {
            // console.warn('WORKER: Pre-Fetching Failed: ', error);
        })
    );
});
// ..
// Activate Service Worker File System
// ..
self.addEventListener('activate', function(evt) {
    evt.waitUntil(
        caches.keys().then(function(cacheNames) {
            return Promise.all(
                cacheNames.map(function(cache) {
                    if (cache !== versionStamp) {
                        // console.log('WORKER: Cleaning cache: ' + cache);
                        return caches.delete(cache);
                    }
                })
            );
        })
    );
    // console.log('WORKER: Activate cache: ' + versionStamp);
    return self.clients.claim();
});
// ..
// Fetch Service Worker Request Files
// ..
self.addEventListener('fetch', function(evt) {
    // Chrome Dev Tools Bug - Temporary Workaround
    // https://bugs.chromium.org/p/chromium/issues/detail?id=823392    
    if (evt.request.cache === 'only-if-cached' && evt.request.mode !== 'same-origin') {
        var oStrangeRequest = evt.request.clone();
        console.warn('Chrome Dev Tools. Request cache has only-if-cached, but not same-origin.', oStrangeRequest.cache, oStrangeRequest.mode, 'request redirect:', oStrangeRequest.redirect, oStrangeRequest.url, oStrangeRequest);
        return;
    }
    evt.respondWith(
        caches.match(evt.request).then(function(response) {
            return response || fetch(evt.request, { cache: 'no-store' });
        })
    );
});

// BabylonToolkit2019.js
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
/**
 * Babylon Script Component
 * @class DebugInformation
 */
var DebugInformation = /** @class */ (function (_super) {
    __extends(DebugInformation, _super);
    function DebugInformation(transform, scene, properties) {
        if (properties === void 0) { properties = {}; }
        var _this = _super.call(this, transform, scene, properties) || this;
        _this.keys = true;
        _this.show = true;
        _this.popup = false;
        _this.views = false;
        _this.xbox = false;
        _this.keys = _this.getEditorProperty("enableDebugKeys", _this.keys);
        _this.show = _this.getEditorProperty("showDebugLabels", _this.show);
        _this.popup = _this.getEditorProperty("popupDebugPanel", _this.popup);
        _this.views = _this.getEditorProperty("togglePlayerViews", _this.views);
        _this.xbox = _this.getEditorProperty("allowXboxLiveSignIn", _this.xbox);
        // ..
        if (BABYLON.SceneManager.IsWindows())
            _this.popup = false;
        BABYLON.Tools.Log("Debug information overlay loaded");
        return _this;
    }
    DebugInformation.prototype.start = function () {
        var _this = this;
        //this.screen = document.getElementById("screen");
        //this.toggle = document.getElementById("toggle");
        //this.signin = document.getElementById("signin");
        //this.reload = document.getElementById("reload");
        //this.mouse = document.getElementById("mouse");
        //this.debug = document.getElementById("debug");
        if (this.show === true) {
            /*
            if (this.keys === true) {
                if (!BABYLON.SceneManager.IsXboxOne()) {
                    if (this.screen) this.screen.innerHTML = "F - Show Full Screen";
                }
                if (BABYLON.CameraSystem.IsMultiPlayerView() && this.views === true) {
                    if (this.toggle) {
                        if (BABYLON.SceneManager.IsXboxOne()) {
                            this.toggle.style.top = "29px";
                        }
                        this.toggle.innerHTML = "1 - 4 Toggle Player View";
                    }
                }
                if (BABYLON.SceneManager.IsXboxLivePluginEnabled() && this.xbox === true) {
                    if (this.signin) {
                        if (BABYLON.SceneManager.IsXboxOne()) {
                            this.signin.style.top = "49px";
                        }
                        this.signin.innerHTML = "X - Xbox Live Sign In";
                    }
                }
                if (this.mouse) this.mouse.innerHTML = (BABYLON.SceneManager.IsXboxOne()) ? "M - Mouse" : "";
                if (this.reload) this.reload.innerHTML = "R - Reload";
                if (this.debug) this.debug.innerHTML = "P - Debug";
            }
            */
        }
        if (this.keys === true) {
            if (this.views === true) {
                console.log("Enable Multiplayer Keys");
                BABYLON.SceneManager.OnKeyboardPress(BABYLON.UserInputKey.Num1, function () {
                    BABYLON.UniversalCameraSystem.SetMultiPlayerViewLayout(_this.scene, 1);
                    console.log("1 player pressed");
                });
                BABYLON.SceneManager.OnKeyboardPress(BABYLON.UserInputKey.Num2, function () {
                    BABYLON.UniversalCameraSystem.SetMultiPlayerViewLayout(_this.scene, 2);
                    console.log("2 players pressed");
                });
                BABYLON.SceneManager.OnKeyboardPress(BABYLON.UserInputKey.Num3, function () {
                    BABYLON.UniversalCameraSystem.SetMultiPlayerViewLayout(_this.scene, 3);
                    console.log("3 players pressed");
                });
                BABYLON.SceneManager.OnKeyboardPress(BABYLON.UserInputKey.Num4, function () {
                    BABYLON.UniversalCameraSystem.SetMultiPlayerViewLayout(_this.scene, 4);
                    console.log("4 players pressed");
                });
            }
            BABYLON.SceneManager.OnKeyboardPress(BABYLON.UserInputKey.R, function () {
                window.location.reload();
            });
            BABYLON.SceneManager.OnKeyboardPress(BABYLON.UserInputKey.I, function () {
                if (_this.popup === true) {
                    BABYLON.SceneManager.PopupDebug(_this.scene);
                }
                else {
                    BABYLON.SceneManager.ToggleDebug(_this.scene, true, null);
                }
            });
            if (BABYLON.SceneManager.IsXboxOne()) {
                if (navigator.gamepadInputEmulation) {
                    BABYLON.SceneManager.OnKeyboardPress(BABYLON.UserInputKey.M, function () {
                        if (navigator.gamepadInputEmulation !== "mouse") {
                            navigator.gamepadInputEmulation = "mouse";
                        }
                        else {
                            navigator.gamepadInputEmulation = "gamepad";
                        }
                    });
                }
            }
            else {
                BABYLON.SceneManager.OnKeyboardPress(BABYLON.UserInputKey.F, function () {
                    //BABYLON.Tools.RequestFullscreen(document.documentElement);
                    _this.scene.getEngine().enterFullscreen(true);
                });
            }
            if (BABYLON.WindowsPlatform.IsXboxLivePluginEnabled() && this.xbox === true) {
                BABYLON.SceneManager.OnKeyboardPress(BABYLON.UserInputKey.X, function () {
                    var player = BABYLON.PlayerNumber.One;
                    if (!BABYLON.WindowsPlatform.IsXboxLiveUserSignedIn(null, player)) {
                        BABYLON.Tools.Log("===> Trying Xbox Live Sign In For Player: " + player.toString());
                        BABYLON.WindowsPlatform.XboxLiveUserSignIn(player, function (result) {
                            var user = BABYLON.WindowsPlatform.GetXboxLiveUser(player);
                            var msg = "(" + user.xboxUserId + ") - " + user.gamertag;
                            BABYLON.SceneManager.AlertMessage(msg, "Xbox Live User Signed In");
                        }, function (err) {
                            console.log(err);
                            var msg = "Encountered Sign Error";
                            BABYLON.Tools.Warn(msg);
                            BABYLON.SceneManager.AlertMessage(msg, "Xbox Live Warning");
                        });
                    }
                    else {
                        BABYLON.Tools.Warn("Xbox Live User Already Signed In");
                        BABYLON.SceneManager.AlertMessage("User Already Signed In", "Xbox Live Warning");
                    }
                });
            }
        }
        // Default Print To Screen Text
        var printColor = (this.scene.getEngine().webGLVersion < 2) ? "red" : "#0c0";
        var graphicsVersion = BABYLON.SceneManager.GetWebGLVersionString(this.scene);
        BABYLON.Utilities.PrintToScreen(graphicsVersion, printColor);
    };
    DebugInformation.prototype.destroy = function () {
        //this.screen = null;
        //this.toggle = null;
        //this.signin = null;
        //this.reload = null;
        //this.mouse = null;
        //this.debug = null;
    };
    return DebugInformation;
}(BABYLON.ScriptComponent));
/**
 * Babylon Script Component
 * @class SoftbodyMesh
 */
var SoftbodyMesh = /** @class */ (function (_super) {
    __extends(SoftbodyMesh, _super);
    function SoftbodyMesh(transform, scene, properties) {
        if (properties === void 0) { properties = {}; }
        var _this = _super.call(this, transform, scene, properties) || this;
        var type = _this.getEditorProperty("type", 0);
        var options = {
            mass: _this.getEditorProperty("mass", 1),
            friction: _this.getEditorProperty("friction", 0.3),
            restitution: _this.getEditorProperty("restitution", 0.3),
            pressure: _this.getEditorProperty("pressure", 200),
            velocityIterations: _this.getEditorProperty("velocityIterations", 20),
            positionIterations: _this.getEditorProperty("positionIterations", 20),
            stiffness: _this.getEditorProperty("stiffness", 1),
            margin: _this.getEditorProperty("margin", 0.0),
            damping: _this.getEditorProperty("damping", 0.01)
        };
        var mesh = _this.getTransformMesh();
        var forceSharedVertices = _this.getEditorProperty("forceSharedVertices", true);
        if (forceSharedVertices === true)
            mesh.forceSharedVertices();
        var increaseVertices = _this.getEditorProperty("increaseVertices", 4);
        if (increaseVertices > 0)
            mesh.increaseVertices(increaseVertices);
        var impostor = null;
        if (type === 0) { // Mesh
            impostor = new BABYLON.PhysicsImpostor(mesh, BABYLON.PhysicsImpostor.SoftbodyImpostor, options, _this.scene);
        }
        else if (type === 1) { // Cloth
            impostor = new BABYLON.PhysicsImpostor(mesh, BABYLON.PhysicsImpostor.ClothImpostor, options, _this.scene);
        }
        else if (type === 2) { // Rope
            impostor = new BABYLON.PhysicsImpostor(mesh, BABYLON.PhysicsImpostor.RopeImpostor, options, _this.scene);
        }
        if (impostor != null) {
            impostor.executeNativeFunction(function (word, body) {
                // TODO: Setup Native Softbody Physics Options
            });
        }
        return _this;
    }
    SoftbodyMesh.prototype.start = function () {
        // Start render loop function
    };
    SoftbodyMesh.prototype.update = function () {
        // Update render loop function
    };
    SoftbodyMesh.prototype.after = function () {
        // After render loop function
    };
    SoftbodyMesh.prototype.destroy = function () {
        // Destroy component function
    };
    return SoftbodyMesh;
}(BABYLON.ScriptComponent));
/**
 * Babylon Script Component
 * @class FirstPersonController
 */
var FirstPersonController = /** @class */ (function (_super) {
    __extends(FirstPersonController, _super);
    function FirstPersonController(transform, scene, properties) {
        if (properties === void 0) { properties = {}; }
        var _this = _super.call(this, transform, scene, properties) || this;
        _this.deltaFactor = 2.0;
        _this.attachCamera = true;
        _this.cameraPivot = null;
        _this.cameraRigger = null;
        _this.movementSpeed = 1.0;
        _this.jumpingVelocity = 10.0;
        _this.playerMovement = BABYLON.Vector3.Zero();
        _this.playerTurnRate = 0.0;
        _this.cameraPitchRate = 0.0;
        _this.horzSensitivity = 1.0;
        _this.vertSensitivity = 1.0;
        _this.mouseSensitivity = 1.0;
        _this.minimumPitchAngle = -60.0;
        _this.maximumPitchAngle = 60.0;
        _this.isCharacterGrounded = false;
        _this.isCharacterJumpFrame = false;
        _this.cameraEulerAngles = BABYLON.Vector3.Zero();
        _this.characterController = null;
        _this.buttonJump = BABYLON.Xbox360Button.A;
        _this.keyboardJump = BABYLON.UserInputKey.SpaceBar;
        _this.playerNumber = BABYLON.PlayerNumber.One;
        _this.playerDeltaX = 0.0;
        _this.playerDeltaZ = 0.0;
        _this.playerMouseX = 0.0;
        _this.playerMouseY = 0.0;
        _this.playerEyeLevel = 0.5;
        _this.attachCamera = _this.getEditorProperty("attachCamera", _this.attachCamera);
        _this.playerNumber = _this.getEditorProperty("playerNumber", _this.playerNumber);
        _this.playerEyeLevel = _this.getEditorProperty("playerEyeLevel", _this.playerEyeLevel);
        _this.movementSpeed = _this.getEditorProperty("movementSpeed", _this.movementSpeed);
        _this.mouseSensitivity = _this.getEditorProperty("mouseSensitivity", _this.mouseSensitivity);
        _this.minimumPitchAngle = _this.getEditorProperty("minimumPitchAngle", _this.minimumPitchAngle);
        _this.maximumPitchAngle = _this.getEditorProperty("maximumPitchAngle", _this.maximumPitchAngle);
        _this.vertSensitivity = _this.getEditorProperty("verticalSensitivity", _this.vertSensitivity);
        _this.horzSensitivity = _this.getEditorProperty("horizontalSensitivity", _this.horzSensitivity);
        _this.jumpingVelocity = _this.getEditorProperty("impulseJumpVelocity", _this.jumpingVelocity);
        // Scale Mouse Pointer Sensitivity
        if (_this.playerNumber == BABYLON.PlayerNumber.One) {
            BABYLON.UserInputOptions.PointerAngularSensibility = (BABYLON.UserInputOptions.PointerAngularSensibility * _this.mouseSensitivity);
        }
        return _this;
    }
    FirstPersonController.prototype.isCharacterJumping = function () { return false; /* TODO: Determine If Character Is Jumping - ??? */ };
    FirstPersonController.prototype.isCharacterFalling = function () { return false; /* TODO: Determine If Character Is Falling - ??? */ };
    FirstPersonController.prototype.getCharacterController = function () { return this.characterController; };
    FirstPersonController.prototype.start = function () { this.setupFirstPersonController(); };
    FirstPersonController.prototype.update = function () { this.updateFirstPersonController(); };
    FirstPersonController.prototype.destroy = function () { this.destroyFirstPersonController(); };
    FirstPersonController.prototype.setupFirstPersonController = function () {
        // Setup Camera Aattachments
        this.cameraPivot = this.getChildTransform("Pivot");
        if (this.cameraPivot == null) {
            this.cameraPivot = new BABYLON.TransformNode("Pivot", this.scene);
            this.cameraPivot.setParent(this.transform);
            this.cameraPivot.position = new BABYLON.Vector3(0.0, this.playerEyeLevel, 0.0); // NOTE: POSITION CAMERA EYE LEVEL (TO SEE ARMS)
        }
        BABYLON.Utilities.ValidateTransformQuaternion(this.cameraPivot);
        //console.log("Attach Camera For: " + this.transform.name + " --> " + this.attachCamera.toString());
        //console.log(this.transform.metadata);
        if (this.attachCamera === true) {
            // TODO: Create Multi Player Camera (No Attach Camera)
            this.cameraRigger = BABYLON.SceneManager.GetTransformNode(this.scene, "Main Camera");
            if (this.cameraRigger != null && this.cameraPivot != null) {
                this.cameraPivot.position = new BABYLON.Vector3(0.0, this.playerEyeLevel, 0.0); // NOTE: POSITION CAMERA EYE LEVEL (TO SEE ARMS)
                this.cameraRigger.setParent(this.cameraPivot);
                this.cameraRigger.position = new BABYLON.Vector3(0.0, 0.0, 0.0);
                this.cameraRigger.rotationQuaternion = BABYLON.Quaternion.Identity();
                console.log("FPC: Attached main camera to player controller: " + this.transform.name);
            }
            else {
                BABYLON.Tools.Warn("Failed to locate camera or local pivot for: " + this.transform.name);
            }
        }
        // Setup Character Controller
        this.characterController = this.getComponent("BABYLON.CharacterController");
        if (this.characterController == null)
            BABYLON.Tools.Warn("Failed to locate character controller for: " + this.transform.name);
        // Character Collision Contact (TEST)
        if (this.characterController != null) {
            // Test Static Only Collisions
            // this.characterController.setCollisionFilterMask(BABYLON.CollisionFilters.StaticFilter);
            this.characterController.registerOnCollisionEnter(function (mesh) {
                var tag = BABYLON.SceneManager.GetTransformTag(mesh);
                //console.log("PLAYER: ===> Got Collision Enter Event: " + mesh.name + " --> " + tag);
            });
            this.characterController.registerOnCollisionStay(function (mesh) {
                var tag = BABYLON.SceneManager.GetTransformTag(mesh);
                //console.log("PLAYER: ===> Got Collision Stay Event: " + mesh.name + " --> " + tag);
            });
            this.characterController.registerOnCollisionExit(function (mesh) {
                var tag = BABYLON.SceneManager.GetTransformTag(mesh);
                //console.warn("PLAYER ===> DESTROY: Collision Exit Event: " + mesh.name + " --> " + tag);
            });
        }
    };
    FirstPersonController.prototype.updateFirstPersonController = function () {
        var deltaTime = this.getDeltaSeconds();
        this.playerDeltaX = BABYLON.SceneManager.GetUserInput(BABYLON.UserInputAxis.Horizontal, this.playerNumber);
        this.playerDeltaZ = BABYLON.SceneManager.GetUserInput(BABYLON.UserInputAxis.Vertical, this.playerNumber);
        this.playerMouseX = BABYLON.SceneManager.GetUserInput(BABYLON.UserInputAxis.MouseX, this.playerNumber);
        this.playerMouseY = BABYLON.SceneManager.GetUserInput(BABYLON.UserInputAxis.MouseY, this.playerNumber);
        // Update Dead Input Values
        if (Math.abs(this.playerDeltaX) <= BABYLON.UserInputOptions.GamepadDeadStickValue)
            this.playerDeltaX = 0;
        if (Math.abs(this.playerDeltaZ) <= BABYLON.UserInputOptions.GamepadDeadStickValue)
            this.playerDeltaZ = 0;
        if (Math.abs(this.playerMouseX) <= BABYLON.UserInputOptions.GamepadDeadStickValue)
            this.playerMouseX = 0;
        if (Math.abs(this.playerMouseY) <= BABYLON.UserInputOptions.GamepadDeadStickValue)
            this.playerMouseY = 0;
        // Update Character Movement
        if (this.characterController != null) {
            this.isCharacterGrounded = this.characterController.isGrounded();
            this.isCharacterJumpFrame = false;
            // Rotate Player Left And Right With Mouse-X
            this.playerTurnRate = (this.playerMouseX * (this.horzSensitivity * this.deltaFactor));
            this.characterController.turn(this.playerTurnRate);
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            // FPC: Pitch Camera Pivot Up And Down With Mouse-Y
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            this.cameraPitchRate = (this.playerMouseY * (this.vertSensitivity * this.deltaFactor));
            this.cameraPivot.rotate(BABYLON.Axis.X, -(this.cameraPitchRate * BABYLON.System.Deg2Rad), BABYLON.Space.LOCAL);
            BABYLON.Utilities.ToEulerToRef(this.cameraPivot.rotationQuaternion, this.cameraEulerAngles);
            this.cameraEulerAngles.x = BABYLON.Scalar.Clamp(this.cameraEulerAngles.x, this.minimumPitchAngle, this.maximumPitchAngle);
            BABYLON.Utilities.FromEulerToRef(this.cameraEulerAngles.x, this.cameraEulerAngles.y, this.cameraEulerAngles.z, this.cameraPivot.rotationQuaternion);
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            // Update Player Input With Delta-X And Delta-Z
            if (this.isCharacterGrounded === true) {
                this.playerMovement.x = this.playerDeltaX;
                this.playerMovement.y = 0.0;
                this.playerMovement.z = this.playerDeltaZ;
                this.isCharacterJumpFrame = (BABYLON.SceneManager.GetKeyboardInput(this.keyboardJump) || BABYLON.SceneManager.GetGamepadButtonInput(this.buttonJump));
                // Transform Movement Direction And Scale Speed
                BABYLON.Utilities.TransformDirectionToRef(this.transform, this.playerMovement, this.playerMovement);
                BABYLON.Vector3.NormalizeToRef(this.playerMovement, this.playerMovement);
                this.playerMovement.scaleInPlace((BABYLON.System.WalkingVelocity * this.movementSpeed) * deltaTime);
                // Move Player Using Physics Character Controller
                this.characterController.move(this.playerMovement);
                // Jump Player Using Physics Character Controller
                if (this.isCharacterJumpFrame === true) {
                    this.characterController.jump(this.jumpingVelocity);
                }
            }
        }
    };
    FirstPersonController.prototype.destroyFirstPersonController = function () {
        this.cameraPivot = null;
        this.cameraRigger = null;
        this.characterController = null;
    };
    return FirstPersonController;
}(BABYLON.ScriptComponent));
/**
 * Babylon Script Component
 * @class ThirdPersonController
 */
var ThirdPersonController = /** @class */ (function (_super) {
    __extends(ThirdPersonController, _super);
    function ThirdPersonController(transform, scene, properties) {
        if (properties === void 0) { properties = {}; }
        var _this = _super.call(this, transform, scene, properties) || this;
        _this.deltaFactor = 2.0;
        _this.attachCamera = true;
        _this.cameraPivot = null;
        _this.cameraRigger = null;
        _this.movementSpeed = 1.0;
        _this.jumpingVelocity = 10.0;
        _this.playerMovement = BABYLON.Vector3.Zero();
        _this.playerTurnRate = 0.0;
        _this.cameraPitchRate = 0.0;
        _this.horzSensitivity = 1.0;
        _this.vertSensitivity = 1.0;
        _this.mouseSensitivity = 1.0;
        _this.minimumPitchAngle = -60.0;
        _this.maximumPitchAngle = 60.0;
        _this.isCharacterGrounded = false;
        _this.isCharacterJumpFrame = false;
        _this.characterController = null;
        _this.buttonJump = BABYLON.Xbox360Button.A;
        _this.keyboardJump = BABYLON.UserInputKey.SpaceBar;
        _this.playerNumber = BABYLON.PlayerNumber.One;
        _this.playerDeltaX = 0.0;
        _this.playerDeltaZ = 0.0;
        _this.playerMouseX = 0.0;
        _this.playerMouseY = 0.0;
        _this.attachCamera = _this.getEditorProperty("attachCamera", _this.attachCamera);
        _this.playerNumber = _this.getEditorProperty("playerNumber", _this.playerNumber);
        _this.movementSpeed = _this.getEditorProperty("movementSpeed", _this.movementSpeed);
        _this.mouseSensitivity = _this.getEditorProperty("mouseSensitivity", _this.mouseSensitivity);
        _this.minimumPitchAngle = _this.getEditorProperty("minimumPitchAngle", _this.minimumPitchAngle);
        _this.maximumPitchAngle = _this.getEditorProperty("maximumPitchAngle", _this.maximumPitchAngle);
        _this.vertSensitivity = _this.getEditorProperty("verticalSensitivity", _this.vertSensitivity);
        _this.horzSensitivity = _this.getEditorProperty("horizontalSensitivity", _this.horzSensitivity);
        _this.jumpingVelocity = _this.getEditorProperty("impulseJumpVelocity", _this.jumpingVelocity);
        // Scale Mouse Pointer Sensitivity
        if (_this.playerNumber == BABYLON.PlayerNumber.One) {
            BABYLON.UserInputOptions.PointerAngularSensibility = (BABYLON.UserInputOptions.PointerAngularSensibility * _this.mouseSensitivity);
        }
        return _this;
    }
    ThirdPersonController.prototype.getCharacterController = function () { return this.characterController; };
    ThirdPersonController.prototype.start = function () { this.setupThirdPersonController(); };
    ThirdPersonController.prototype.update = function () { this.updateThirdPersonController(); };
    ThirdPersonController.prototype.destroy = function () { this.destroyThirdPersonController(); };
    ThirdPersonController.prototype.setupThirdPersonController = function () {
        // Setup Camera Attachments
        this.cameraPivot = this.getChildTransform("Pivot");
        if (this.cameraPivot == null) {
            this.cameraPivot = new BABYLON.TransformNode("Pivot", this.scene);
            this.cameraPivot.setParent(this.transform);
            this.cameraPivot.position = new BABYLON.Vector3(0.0, 1.85, 0.0);
        }
        BABYLON.Utilities.ValidateTransformQuaternion(this.cameraPivot);
        if (this.attachCamera === true) {
            // TODO: Create Multi Player Camera (No Attach Camera)
            this.cameraRigger = BABYLON.SceneManager.GetTransformNode(this.scene, "Main Camera");
            if (this.cameraRigger != null && this.cameraPivot != null) {
                this.cameraRigger.setParent(this.cameraPivot);
                this.cameraRigger.position = new BABYLON.Vector3(0.0, 0.0, -4.5);
                this.cameraRigger.rotationQuaternion = BABYLON.Quaternion.Identity();
                console.log("TPC: Attached main camera to player controller: " + this.transform.name);
            }
            else {
                BABYLON.Tools.Warn("Failed to locate camera or local pivot for: " + this.transform.name);
            }
        }
        // Setup Character Controller
        this.characterController = this.getComponent("BABYLON.CharacterController");
        if (this.characterController == null)
            BABYLON.Tools.Warn("Failed to locate character controller for: " + this.transform.name);
    };
    ThirdPersonController.prototype.updateThirdPersonController = function () {
        this.playerDeltaX = BABYLON.SceneManager.GetUserInput(BABYLON.UserInputAxis.Horizontal, this.playerNumber);
        this.playerDeltaZ = BABYLON.SceneManager.GetUserInput(BABYLON.UserInputAxis.Vertical, this.playerNumber);
        this.playerMouseX = BABYLON.SceneManager.GetUserInput(BABYLON.UserInputAxis.MouseX, this.playerNumber);
        this.playerMouseY = BABYLON.SceneManager.GetUserInput(BABYLON.UserInputAxis.MouseY, this.playerNumber);
        // Update Dead Input Values
        if (Math.abs(this.playerDeltaX) <= BABYLON.UserInputOptions.GamepadDeadStickValue)
            this.playerDeltaX = 0;
        if (Math.abs(this.playerDeltaZ) <= BABYLON.UserInputOptions.GamepadDeadStickValue)
            this.playerDeltaZ = 0;
        if (Math.abs(this.playerMouseX) <= BABYLON.UserInputOptions.GamepadDeadStickValue)
            this.playerMouseX = 0;
        if (Math.abs(this.playerMouseY) <= BABYLON.UserInputOptions.GamepadDeadStickValue)
            this.playerMouseY = 0;
        // Update Character Movement
        if (this.characterController != null) {
        }
    };
    ThirdPersonController.prototype.destroyThirdPersonController = function () {
        this.cameraPivot = null;
        this.cameraRigger = null;
        this.characterController = null;
    };
    return ThirdPersonController;
}(BABYLON.ScriptComponent));
/**
 * Babylon Script Component
 * @class BoundingBoxSkins
 */
var BoundingBoxSkins = /** @class */ (function (_super) {
    __extends(BoundingBoxSkins, _super);
    function BoundingBoxSkins(transform, scene, properties) {
        if (properties === void 0) { properties = {}; }
        var _this = _super.call(this, transform, scene, properties) || this;
        _this.skins = null;
        _this.syncBoundingInfo = true;
        _this.updateEveryFrame = false;
        _this.positionThreashold = 0.1;
        _this.lastPosition = BABYLON.Vector3.Zero();
        // ..
        // Validate Skin Bounding Box Info
        // ..
        _this.syncBoundingInfo = _this.getEditorProperty("syncBoundingInfo", _this.syncBoundingInfo);
        _this.updateEveryFrame = _this.getEditorProperty("updateEveryFrame", _this.updateEveryFrame);
        _this.positionThreashold = _this.getEditorProperty("positionThreashold", _this.positionThreashold);
        if (_this.syncBoundingInfo === true) {
            var skinned_1 = false;
            var metadata = _this.getMetadata();
            if (metadata != null && metadata.skin === true) {
                skinned_1 = true;
            }
            _this.skins = _this.transform.getChildMeshes(false, function (node) {
                var data = BABYLON.SceneManager.FindSceneMetadata(node);
                return ((data != null && data.skin === true) || (skinned_1 === true && node.name.indexOf("_primitive") >= 0)); // TODO: Remove Primitives
            });
            if (skinned_1 === true && _this.transform instanceof BABYLON.AbstractMesh) {
                if (_this.skins == null)
                    _this.skins = [];
                _this.skins.unshift(_this.transform);
            }
        }
        return _this;
    }
    BoundingBoxSkins.prototype.start = function () {
        this.checkSkins();
    };
    BoundingBoxSkins.prototype.update = function () {
        if (this.updateEveryFrame === true) {
            this.checkSkins();
        }
    };
    BoundingBoxSkins.prototype.after = function () {
    };
    BoundingBoxSkins.prototype.destroy = function () {
        this.skins = null;
    };
    BoundingBoxSkins.prototype.checkSkins = function () {
        // Start render loop function
        if (this.skins != null && this.skins.length > 0) {
            if (this.transform.position.x !== this.lastPosition.x || this.transform.position.y !== this.lastPosition.y || this.transform.position.z !== this.lastPosition.z) {
                if (Math.abs(this.transform.position.x - this.lastPosition.x) >= this.positionThreashold || Math.abs(this.transform.position.y - this.lastPosition.y) >= this.positionThreashold || Math.abs(this.transform.position.z - this.lastPosition.z) >= this.positionThreashold) {
                    this.skins.forEach(function (skin) { skin.refreshBoundingInfo(true); });
                    //console.log("===> Position Change Update: " + this.transform.name);
                    //console.log(this.transform.position.toString());
                    this.lastPosition.x = this.transform.position.x;
                    this.lastPosition.y = this.transform.position.y;
                    this.lastPosition.z = this.transform.position.z;
                }
            }
        }
    };
    return BoundingBoxSkins;
}(BABYLON.ScriptComponent));
/**
 * Babylon skidmark section class (Native Bullet Physics 2.82)
 * @class SkidmarkSection
 */
var SkidmarkSection = /** @class */ (function () {
    function SkidmarkSection() {
        this.Pos = BABYLON.Vector3.Zero();
        this.Normal = BABYLON.Vector3.Zero();
        this.Tangent = BABYLON.Vector4.Zero();
        this.Posl = BABYLON.Vector3.Zero();
        this.Posr = BABYLON.Vector3.Zero();
        this.Intensity = 0.0;
        this.LastIndex = -1;
    }
    return SkidmarkSection;
}());
/**
 * Babylon Script Component
 * @class SkidmarkManager
 */
var SkidmarkManager = /** @class */ (function (_super) {
    __extends(SkidmarkManager, _super);
    function SkidmarkManager(transform, scene, properties) {
        if (properties === void 0) { properties = {}; }
        var _this = _super.call(this, transform, scene, properties) || this;
        SkidmarkManager.MAX_MARKS = _this.getEditorProperty("maxSections", SkidmarkManager.MAX_MARKS);
        SkidmarkManager.MARK_COLOR = BABYLON.Utilities.ParseColor3(_this.getEditorProperty("textureColor", SkidmarkManager.MARK_COLOR));
        SkidmarkManager.MARK_WIDTH = _this.getEditorProperty("textureWidth", SkidmarkManager.MARK_WIDTH);
        SkidmarkManager.GROUND_OFFSET = _this.getEditorProperty("groundOffset", SkidmarkManager.GROUND_OFFSET);
        SkidmarkManager.VELOCITY_SCALE = _this.getEditorProperty("velocityScale", SkidmarkManager.VELOCITY_SCALE);
        SkidmarkManager.GPU_TRIANGLES = _this.getEditorProperty("gpuQuadIndices", SkidmarkManager.GPU_TRIANGLES);
        SkidmarkManager.TEXTURE_MARKS = _this.getEditorProperty("textureMarks", SkidmarkManager.TEXTURE_MARKS);
        SkidmarkManager.MIN_DISTANCE = _this.getEditorProperty("textureDistance", SkidmarkManager.MIN_DISTANCE);
        SkidmarkManager.MIN_SQR_DISTANCE = (SkidmarkManager.MIN_DISTANCE * SkidmarkManager.MIN_DISTANCE);
        return _this;
    }
    SkidmarkManager.prototype.start = function () { SkidmarkManager.CreateSkidmarkManager(this.scene); };
    SkidmarkManager.prototype.update = function () { SkidmarkManager.UpdateSkidmarkManager(); };
    SkidmarkManager.GetVelocityScale = function () { return SkidmarkManager.VELOCITY_SCALE; };
    SkidmarkManager.AddSkidmarkSegment = function (pos, normal, intensity, lastIndex) {
        if (SkidmarkManager.SkidmarkMesh == null)
            return null;
        SkidmarkManager.TempVector3_POS.set(0, 0, 0);
        SkidmarkManager.TempVector3_DIR.set(0, 0, 0);
        SkidmarkManager.TempVector3_XDIR.set(0, 0, 0);
        SkidmarkManager.TempVector3_SDIR.set(0, 0, 0);
        // ..
        if (intensity > 1.0)
            intensity = 1.0;
        else if (intensity < 0.0)
            return -1.0;
        // ..
        if (lastIndex > 0) {
            pos.subtractToRef(SkidmarkManager.SkidmarkSections[lastIndex].Pos, SkidmarkManager.TempVector3_POS);
            var sqrDistance = SkidmarkManager.TempVector3_POS.lengthSquared();
            if (sqrDistance < SkidmarkManager.MIN_SQR_DISTANCE)
                return lastIndex;
        }
        // ..
        var curSection = SkidmarkManager.SkidmarkSections[SkidmarkManager.SkidmarkIndex];
        normal.scaleToRef(SkidmarkManager.GROUND_OFFSET, SkidmarkManager.TempVector3_POS);
        pos.addToRef(SkidmarkManager.TempVector3_POS, curSection.Pos);
        curSection.Normal.copyFrom(normal);
        curSection.Intensity = intensity;
        curSection.LastIndex = lastIndex;
        // ..
        if (lastIndex != -1) {
            var lastSection = SkidmarkManager.SkidmarkSections[lastIndex];
            curSection.Pos.subtractToRef(lastSection.Pos, SkidmarkManager.TempVector3_DIR);
            BABYLON.Vector3.CrossToRef(SkidmarkManager.TempVector3_DIR, normal, SkidmarkManager.TempVector3_XDIR);
            SkidmarkManager.TempVector3_XDIR.normalizeToRef(SkidmarkManager.TempVector3_XDIR);
            // ..
            SkidmarkManager.TempVector3_XDIR.scaleToRef(SkidmarkManager.MARK_WIDTH * 0.5, SkidmarkManager.TempVector3_SDIR);
            curSection.Pos.addToRef(SkidmarkManager.TempVector3_SDIR, curSection.Posl);
            curSection.Pos.subtractToRef(SkidmarkManager.TempVector3_SDIR, curSection.Posr);
            curSection.Tangent.set(SkidmarkManager.TempVector3_XDIR.x, SkidmarkManager.TempVector3_XDIR.y, SkidmarkManager.TempVector3_XDIR.z, 1);
            // ..
            if (lastSection.LastIndex === -1) {
                curSection.Pos.addToRef(SkidmarkManager.TempVector3_SDIR, lastSection.Posl);
                curSection.Pos.subtractToRef(SkidmarkManager.TempVector3_SDIR, lastSection.Posr);
                lastSection.Tangent.copyFrom(curSection.Tangent);
            }
        }
        // ..
        SkidmarkManager.AddSkidmarkVertexData();
        var curIndex = SkidmarkManager.SkidmarkIndex;
        SkidmarkManager.SkidmarkIndex = ++SkidmarkManager.SkidmarkIndex % SkidmarkManager.MAX_MARKS;
        return curIndex;
    };
    SkidmarkManager.CreateSkidmarkManager = function (scene) {
        if (SkidmarkManager.SkidmarkMesh == null) {
            var skidmarkMaterial = new BABYLON.StandardMaterial("SkidmarkMaterial", scene);
            skidmarkMaterial.backFaceCulling = false;
            skidmarkMaterial.disableLighting = true;
            skidmarkMaterial.emissiveColor = SkidmarkManager.MARK_COLOR;
            skidmarkMaterial.diffuseColor = SkidmarkManager.MARK_COLOR;
            skidmarkMaterial.diffuseTexture = BABYLON.Utilities.ParseTexture(SkidmarkManager.TEXTURE_MARKS, scene);
            if (skidmarkMaterial.diffuseTexture != null) {
                skidmarkMaterial.diffuseTexture.hasAlpha = true;
                skidmarkMaterial.useAlphaFromDiffuseTexture = true;
            }
            skidmarkMaterial.freeze();
            SkidmarkManager.SkidmarkMesh = new BABYLON.Mesh("SkidmarkMesh", scene);
            SkidmarkManager.SkidmarkMesh.material = skidmarkMaterial;
            SkidmarkManager.SkidmarkMesh.alwaysSelectAsActiveMesh = true;
            SkidmarkManager.SkidmarkMesh.doNotSyncBoundingInfo = true;
            SkidmarkManager.SkidmarkMesh.receiveShadows = false;
            SkidmarkManager.SkidmarkMesh.checkCollisions = false;
            SkidmarkManager.SkidmarkMesh.useVertexColors = true;
            SkidmarkManager.SkidmarkMesh.hasVertexAlpha = true;
            SkidmarkManager.SkidmarkMesh.isPickable = false;
            // ..
            // Setup Skidmark Section Properties
            // ..
            SkidmarkManager.SkidmarkSections = new Array(SkidmarkManager.MAX_MARKS);
            for (var i = 0; i < SkidmarkManager.SkidmarkSections.length; i++) {
                SkidmarkManager.SkidmarkSections[i] = new SkidmarkSection();
            }
            // ..
            // Setup Raw Mesh Vertex Buffer Data
            // ..
            SkidmarkManager.SkidBufferPositions = new Float32Array(SkidmarkManager.MAX_MARKS * 4 * 3);
            SkidmarkManager.SkidBufferNormals = new Float32Array(SkidmarkManager.MAX_MARKS * 4 * 3);
            SkidmarkManager.SkidBufferTangents = new Float32Array(SkidmarkManager.MAX_MARKS * 4 * 4);
            SkidmarkManager.SkidBufferColors = new Float32Array(SkidmarkManager.MAX_MARKS * 4 * 4);
            SkidmarkManager.SkidBufferUvs = new Float32Array(SkidmarkManager.MAX_MARKS * 4 * 2);
            SkidmarkManager.SkidBufferIndices = new Int32Array(SkidmarkManager.MAX_MARKS * 6);
            // ..
            // Apply Raw Vertex Buffer Data To Mesh
            // ..
            var vertexData = new BABYLON.VertexData();
            vertexData.positions = SkidmarkManager.SkidBufferPositions;
            vertexData.normals = SkidmarkManager.SkidBufferNormals;
            vertexData.tangents = SkidmarkManager.SkidBufferTangents;
            vertexData.colors = SkidmarkManager.SkidBufferColors;
            vertexData.uvs = SkidmarkManager.SkidBufferUvs;
            vertexData.indices = SkidmarkManager.SkidBufferIndices;
            vertexData.applyToMesh(SkidmarkManager.SkidmarkMesh, true);
            SkidmarkManager.SkidmarkMesh.freezeWorldMatrix();
        }
    };
    SkidmarkManager.AddSkidmarkVertexData = function () {
        var curr = SkidmarkManager.SkidmarkSections[SkidmarkManager.SkidmarkIndex];
        if (curr.LastIndex === -1)
            return;
        var last = SkidmarkManager.SkidmarkSections[curr.LastIndex];
        SkidmarkManager.SkidmarkUpdated = true;
        // ..
        // Update Position Buffers Directly
        // ..
        var index = SkidmarkManager.SkidmarkIndex * 4 + 0;
        SkidmarkManager.SkidBufferPositions[index * 3] = last.Posl.x;
        SkidmarkManager.SkidBufferPositions[(index * 3) + 1] = last.Posl.y;
        SkidmarkManager.SkidBufferPositions[(index * 3) + 2] = last.Posl.z;
        index = SkidmarkManager.SkidmarkIndex * 4 + 1;
        SkidmarkManager.SkidBufferPositions[index * 3] = last.Posr.x;
        SkidmarkManager.SkidBufferPositions[(index * 3) + 1] = last.Posr.y;
        SkidmarkManager.SkidBufferPositions[(index * 3) + 2] = last.Posr.z;
        index = SkidmarkManager.SkidmarkIndex * 4 + 2;
        SkidmarkManager.SkidBufferPositions[index * 3] = curr.Posl.x;
        SkidmarkManager.SkidBufferPositions[(index * 3) + 1] = curr.Posl.y;
        SkidmarkManager.SkidBufferPositions[(index * 3) + 2] = curr.Posl.z;
        index = SkidmarkManager.SkidmarkIndex * 4 + 3;
        SkidmarkManager.SkidBufferPositions[index * 3] = curr.Posr.x;
        SkidmarkManager.SkidBufferPositions[(index * 3) + 1] = curr.Posr.y;
        SkidmarkManager.SkidBufferPositions[(index * 3) + 2] = curr.Posr.z;
        // ..
        // Update Normal Buffers Directly
        // ..
        index = SkidmarkManager.SkidmarkIndex * 4 + 0;
        SkidmarkManager.SkidBufferNormals[index * 3] = last.Normal.x;
        SkidmarkManager.SkidBufferNormals[(index * 3) + 1] = last.Normal.y;
        SkidmarkManager.SkidBufferNormals[(index * 3) + 2] = last.Normal.z;
        index = SkidmarkManager.SkidmarkIndex * 4 + 1;
        SkidmarkManager.SkidBufferNormals[index * 3] = last.Normal.x;
        SkidmarkManager.SkidBufferNormals[(index * 3) + 1] = last.Normal.y;
        SkidmarkManager.SkidBufferNormals[(index * 3) + 2] = last.Normal.z;
        index = SkidmarkManager.SkidmarkIndex * 4 + 2;
        SkidmarkManager.SkidBufferNormals[index * 3] = curr.Normal.x;
        SkidmarkManager.SkidBufferNormals[(index * 3) + 1] = curr.Normal.y;
        SkidmarkManager.SkidBufferNormals[(index * 3) + 2] = curr.Normal.z;
        index = SkidmarkManager.SkidmarkIndex * 4 + 3;
        SkidmarkManager.SkidBufferNormals[index * 3] = curr.Normal.x;
        SkidmarkManager.SkidBufferNormals[(index * 3) + 1] = curr.Normal.y;
        SkidmarkManager.SkidBufferNormals[(index * 3) + 2] = curr.Normal.z;
        // ..
        // Update Tangent Buffers Directly
        // ..
        index = SkidmarkManager.SkidmarkIndex * 4 + 0;
        SkidmarkManager.SkidBufferTangents[index * 4] = last.Tangent.x;
        SkidmarkManager.SkidBufferTangents[(index * 4) + 1] = last.Tangent.y;
        SkidmarkManager.SkidBufferTangents[(index * 4) + 2] = last.Tangent.z;
        SkidmarkManager.SkidBufferTangents[(index * 4) + 3] = last.Tangent.w;
        index = SkidmarkManager.SkidmarkIndex * 4 + 1;
        SkidmarkManager.SkidBufferTangents[index * 4] = last.Tangent.x;
        SkidmarkManager.SkidBufferTangents[(index * 4) + 1] = last.Tangent.y;
        SkidmarkManager.SkidBufferTangents[(index * 4) + 2] = last.Tangent.z;
        SkidmarkManager.SkidBufferTangents[(index * 4) + 3] = last.Tangent.w;
        index = SkidmarkManager.SkidmarkIndex * 4 + 2;
        SkidmarkManager.SkidBufferTangents[index * 4] = curr.Tangent.x;
        SkidmarkManager.SkidBufferTangents[(index * 4) + 1] = curr.Tangent.y;
        SkidmarkManager.SkidBufferTangents[(index * 4) + 2] = curr.Tangent.z;
        SkidmarkManager.SkidBufferTangents[(index * 4) + 3] = curr.Tangent.w;
        index = SkidmarkManager.SkidmarkIndex * 4 + 3;
        SkidmarkManager.SkidBufferTangents[index * 4] = curr.Tangent.x;
        SkidmarkManager.SkidBufferTangents[(index * 4) + 1] = curr.Tangent.y;
        SkidmarkManager.SkidBufferTangents[(index * 4) + 2] = curr.Tangent.z;
        SkidmarkManager.SkidBufferTangents[(index * 4) + 3] = curr.Tangent.w;
        // ..
        // Update Color Buffers Directly
        // ..
        index = SkidmarkManager.SkidmarkIndex * 4 + 0;
        SkidmarkManager.SkidBufferColors[index * 4] = 1.0;
        SkidmarkManager.SkidBufferColors[(index * 4) + 1] = 1.0;
        SkidmarkManager.SkidBufferColors[(index * 4) + 2] = 1.0;
        SkidmarkManager.SkidBufferColors[(index * 4) + 3] = last.Intensity;
        index = SkidmarkManager.SkidmarkIndex * 4 + 1;
        SkidmarkManager.SkidBufferColors[index * 4] = 1.0;
        SkidmarkManager.SkidBufferColors[(index * 4) + 1] = 1.0;
        SkidmarkManager.SkidBufferColors[(index * 4) + 2] = 1.0;
        SkidmarkManager.SkidBufferColors[(index * 4) + 3] = last.Intensity;
        index = SkidmarkManager.SkidmarkIndex * 4 + 2;
        SkidmarkManager.SkidBufferColors[index * 4] = 1.0;
        SkidmarkManager.SkidBufferColors[(index * 4) + 1] = 1.0;
        SkidmarkManager.SkidBufferColors[(index * 4) + 2] = 1.0;
        SkidmarkManager.SkidBufferColors[(index * 4) + 3] = curr.Intensity;
        index = SkidmarkManager.SkidmarkIndex * 4 + 3;
        SkidmarkManager.SkidBufferColors[index * 4] = 1.0;
        SkidmarkManager.SkidBufferColors[(index * 4) + 1] = 1.0;
        SkidmarkManager.SkidBufferColors[(index * 4) + 2] = 1.0;
        SkidmarkManager.SkidBufferColors[(index * 4) + 3] = curr.Intensity;
        // ..
        // Update Coord Buffers Directly
        // ..
        index = SkidmarkManager.SkidmarkIndex * 4 + 0;
        SkidmarkManager.SkidBufferUvs[index * 2] = 0;
        SkidmarkManager.SkidBufferUvs[(index * 2) + 1] = 0;
        index = SkidmarkManager.SkidmarkIndex * 4 + 1;
        SkidmarkManager.SkidBufferUvs[index * 2] = 1;
        SkidmarkManager.SkidBufferUvs[(index * 2) + 1] = 0;
        index = SkidmarkManager.SkidmarkIndex * 4 + 2;
        SkidmarkManager.SkidBufferUvs[index * 2] = 0;
        SkidmarkManager.SkidBufferUvs[(index * 2) + 1] = 1;
        index = SkidmarkManager.SkidmarkIndex * 4 + 3;
        SkidmarkManager.SkidBufferUvs[index * 2] = 1;
        SkidmarkManager.SkidBufferUvs[(index * 2) + 1] = 1;
        // ..
        // Update Triangle 1 Buffers Directly (QUAD)
        //..
        SkidmarkManager.SkidBufferIndices[SkidmarkManager.SkidmarkIndex * 6 + 0] = SkidmarkManager.SkidmarkIndex * 4 + 0;
        SkidmarkManager.SkidBufferIndices[SkidmarkManager.SkidmarkIndex * 6 + 2] = SkidmarkManager.SkidmarkIndex * 4 + 1;
        SkidmarkManager.SkidBufferIndices[SkidmarkManager.SkidmarkIndex * 6 + 1] = SkidmarkManager.SkidmarkIndex * 4 + 2;
        // ..
        // Update Triangle 2 Buffers Directly (QUAD)
        // ..
        SkidmarkManager.SkidBufferIndices[SkidmarkManager.SkidmarkIndex * 6 + 3] = SkidmarkManager.SkidmarkIndex * 4 + 2;
        SkidmarkManager.SkidBufferIndices[SkidmarkManager.SkidmarkIndex * 6 + 5] = SkidmarkManager.SkidmarkIndex * 4 + 1;
        SkidmarkManager.SkidBufferIndices[SkidmarkManager.SkidmarkIndex * 6 + 4] = SkidmarkManager.SkidmarkIndex * 4 + 3;
    };
    SkidmarkManager.UpdateSkidmarkManager = function () {
        if (SkidmarkManager.SkidmarkMesh != null && SkidmarkManager.SkidmarkUpdated === true) {
            SkidmarkManager.SkidmarkUpdated = false;
            if (SkidmarkManager.SkidmarkMesh.geometry != null) {
                SkidmarkManager.SkidmarkMesh.geometry.updateVerticesDataDirectly(BABYLON.VertexBuffer.PositionKind, SkidmarkManager.SkidBufferPositions, 0, false);
                SkidmarkManager.SkidmarkMesh.geometry.updateVerticesDataDirectly(BABYLON.VertexBuffer.NormalKind, SkidmarkManager.SkidBufferNormals, 0, false);
                SkidmarkManager.SkidmarkMesh.geometry.updateVerticesDataDirectly(BABYLON.VertexBuffer.TangentKind, SkidmarkManager.SkidBufferTangents, 0, false);
                SkidmarkManager.SkidmarkMesh.geometry.updateVerticesDataDirectly(BABYLON.VertexBuffer.ColorKind, SkidmarkManager.SkidBufferColors, 0, false);
                SkidmarkManager.SkidmarkMesh.geometry.updateVerticesDataDirectly(BABYLON.VertexBuffer.UVKind, SkidmarkManager.SkidBufferUvs, 0, false);
                SkidmarkManager.SkidmarkMesh.geometry.updateIndices(SkidmarkManager.SkidBufferIndices, 0, SkidmarkManager.GPU_TRIANGLES);
            }
        }
    };
    SkidmarkManager.MAX_MARKS = 4096; // Max number of marks total for everyone together
    SkidmarkManager.GROUND_OFFSET = 0.01; // Distance above surface in metres
    SkidmarkManager.VELOCITY_SCALE = 0.02; // Velocity offset scale factor
    SkidmarkManager.GPU_TRIANGLES = true; // GPU quad triangle indices only
    SkidmarkManager.MARK_COLOR = BABYLON.Color3.Black(); // Skidmark Color
    SkidmarkManager.MARK_WIDTH = 0.3; // Width of the Skidmarks. Should match the width of the wheels
    SkidmarkManager.MIN_DISTANCE = 0.1; // Distance between skid texture sections in metres. Bigger = better performance, less smooth
    SkidmarkManager.MIN_SQR_DISTANCE = (SkidmarkManager.MIN_DISTANCE * SkidmarkManager.MIN_DISTANCE);
    SkidmarkManager.TEXTURE_MARKS = null;
    SkidmarkManager.SkidBufferPositions = null;
    SkidmarkManager.SkidBufferNormals = null;
    SkidmarkManager.SkidBufferTangents = null;
    SkidmarkManager.SkidBufferColors = null;
    SkidmarkManager.SkidBufferUvs = null;
    SkidmarkManager.SkidBufferIndices = null;
    SkidmarkManager.SkidmarkSections = null;
    SkidmarkManager.SkidmarkIndex = 0;
    SkidmarkManager.SkidmarkMesh = null;
    SkidmarkManager.SkidmarkUpdated = false;
    SkidmarkManager.TempVector3_POS = new BABYLON.Vector3(0, 0, 0);
    SkidmarkManager.TempVector3_DIR = new BABYLON.Vector3(0, 0, 0);
    SkidmarkManager.TempVector3_XDIR = new BABYLON.Vector3(0, 0, 0);
    SkidmarkManager.TempVector3_SDIR = new BABYLON.Vector3(0, 0, 0);
    return SkidmarkManager;
}(BABYLON.ScriptComponent));
/**
 * Babylon standard rigidbody vehicle controller class (Native Bullet Physics 2.82)
 * @class StandardCarController
 */
var StandardCarController = /** @class */ (function (_super) {
    __extends(StandardCarController, _super);
    function StandardCarController(transform, scene, properties) {
        if (properties === void 0) { properties = {}; }
        var _this = _super.call(this, transform, scene, properties) || this;
        _this._rigidbody = null;
        _this._engineAudioSource = null;
        _this._skidFLAudioSource = null;
        _this._skidFRAudioSource = null;
        _this._skidRLAudioSource = null;
        _this._skidRRAudioSource = null;
        _this.gearIndex = 1; // 0: Reverse, 1: Neutral, 2: 1st
        _this.shiftingGears = false;
        _this.vehicleSteer = 0;
        _this.engineForce = 0;
        _this.brakingForce = 0;
        _this.forwardSpeed = 0;
        _this.absoluteSpeed = 0;
        _this.americanSpeed = 0;
        _this.normalizedSpeed = 0;
        _this.raycastVehicle = null;
        _this.frontLeftWheelMesh = null;
        _this.frontRightWheelMesh = null;
        _this.backLeftWheelMesh = null;
        _this.backRightWheelMesh = null;
        _this.frontLeftWheelTrans = null;
        _this.frontRightWheelTrans = null;
        _this.backLeftWheelTrans = null;
        _this.backRightWheelTrans = null;
        _this.frontLeftWheelCollider = null;
        _this.frontRightWheelCollider = null;
        _this.backLeftWheelCollider = null;
        _this.backRightWheelCollider = null;
        _this.engineTorqueCurve = null;
        _this.wheelRadius = 0;
        _this.shiftDelay = 0;
        _this.clutchSlip = 0;
        _this.engineRPM = 0;
        _this.lerpedRPM = 0;
        _this.oldRPM = 0;
        _this.STEER_RADIUS = 0.5;
        _this.FRONT_LEFT = -1;
        _this.FRONT_RIGHT = -1;
        _this.BACK_LEFT = -1;
        _this.BACK_RIGHT = -1;
        _this.smokeTexture = null;
        _this.shadowTexture = null;
        _this.setEngineTorque = null;
        _this.topEngineSpeed = 120;
        _this.lowSpeedAngle = 0.25;
        _this.highSpeedAngle = 0.0125;
        _this.transmissionRatio = 0.7;
        _this.differentialRatio = 3.55;
        _this.maxBrakingForce = 100;
        _this.maxReverseSpeed = 0.66;
        _this.lerpEnginePitching = 5000;
        _this.handBrakingForce = 1000;
        _this.wheelLockFriction = 0.1;
        _this.driftingInfluence = 0;
        _this.lowSpeedIncrement = 0.0125;
        _this.highSpeedIncrement = 0.0125;
        _this.frictionSlipSpeed = 10;
        _this.wheelDriveType = 0;
        _this.gearBoxShiftDelay = 0.3;
        _this.gearBoxShiftNext = 3500;
        _this.gearBoxShiftDown = 2500;
        _this.gearBoxShiftRatios = [3.437, 0.00, 3.626, 2.2, 1.541, 1.213, 1.0, 0.767];
        _this.gearBoxShiftScales = [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0];
        _this.m_frontLeftWheel = null;
        _this.m_frontRightWheel = null;
        _this.m_backLeftWheel = null;
        _this.m_backRightWheel = null;
        _this.m_physicsWorld = null;
        _this.m_frontLeftWheelSkid = -1;
        _this.m_frontRightWheelSkid = -1;
        _this.m_backLeftWheelSkid = -1;
        _this.m_backRightWheelSkid = -1;
        _this.m_velocityOffset = new BABYLON.Vector3(0, 0, 0);
        ////////////////////////////////////////////////////
        // Public Vehicle Controller Movement Functions   //
        ////////////////////////////////////////////////////
        _this.steeringIncrement = 0;
        _this.allowedTurningAngle = 0;
        _this.vehicleSteer = 0;
        _this.brakingForce = 0;
        _this.engineForce = 0;
        _this.m_physicsWorld = BABYLON.SceneManager.GetPhysicsWorld(_this.scene);
        _this.smokeTexture = _this.getEditorProperty("smokeTexture", _this.smokeTexture);
        _this.shadowTexture = _this.getEditorProperty("shadowTexture", _this.shadowTexture);
        _this.setEngineTorque = _this.getEditorProperty("setEngineTorque", _this.setEngineTorque);
        _this.topEngineSpeed = _this.getEditorProperty("topEngineSpeed", _this.topEngineSpeed);
        _this.lowSpeedAngle = _this.getEditorProperty("lowSpeedAngle", _this.lowSpeedAngle);
        _this.highSpeedAngle = _this.getEditorProperty("highSpeedAngle", _this.highSpeedAngle);
        _this.wheelDriveType = _this.getEditorProperty("wheelDriveType", _this.wheelDriveType);
        _this.maxBrakingForce = _this.getEditorProperty("maxBrakingForce", _this.maxBrakingForce);
        _this.handBrakingForce = _this.getEditorProperty("handBrakingForce", _this.handBrakingForce);
        _this.driftingInfluence = _this.getEditorProperty("driftingInfluence", _this.driftingInfluence);
        _this.wheelLockFriction = _this.getEditorProperty("wheelLockFriction", _this.wheelLockFriction);
        _this.lowSpeedIncrement = _this.getEditorProperty("lowSpeedIncrement", _this.lowSpeedIncrement);
        _this.highSpeedIncrement = _this.getEditorProperty("highSpeedIncrement", _this.highSpeedIncrement);
        _this.frontLeftWheelTrans = _this.getEditorProperty("frontLeftWheelMesh", _this.frontLeftWheelTrans);
        _this.frontRightWheelTrans = _this.getEditorProperty("frontRightWheelMesh", _this.frontRightWheelTrans);
        _this.backLeftWheelTrans = _this.getEditorProperty("rearLeftWheelMesh", _this.backLeftWheelTrans);
        _this.backRightWheelTrans = _this.getEditorProperty("rearRightWheelMesh", _this.backRightWheelTrans);
        _this.frontLeftWheelCollider = _this.getEditorProperty("frontLeftWheelCollider", _this.frontLeftWheelCollider);
        _this.frontRightWheelCollider = _this.getEditorProperty("frontRightWheelCollider", _this.frontRightWheelCollider);
        _this.backLeftWheelCollider = _this.getEditorProperty("rearLeftWheelCollider", _this.backLeftWheelCollider);
        _this.backRightWheelCollider = _this.getEditorProperty("rearRightWheelCollider", _this.backRightWheelCollider);
        _this.frictionSlipSpeed = _this.getEditorProperty("frictionSlipSpeed", _this.frictionSlipSpeed);
        _this.lerpEnginePitching = _this.getEditorProperty("lerpEnginePitching", _this.lerpEnginePitching);
        _this.differentialRatio = _this.getEditorProperty("gearBoxDifferential", _this.differentialRatio);
        _this.transmissionRatio = _this.getEditorProperty("gearBoxOverdrive", _this.transmissionRatio);
        _this.gearBoxShiftNext = _this.getEditorProperty("gearBoxShiftNext", _this.gearBoxShiftNext);
        _this.gearBoxShiftDown = _this.getEditorProperty("gearBoxShiftDown", _this.gearBoxShiftDown);
        _this.gearBoxShiftDelay = _this.getEditorProperty("gearBoxShiftDelay", _this.gearBoxShiftDelay);
        _this.gearBoxShiftRatios = _this.getEditorProperty("gearBoxShiftRatios", _this.gearBoxShiftRatios);
        _this.gearBoxShiftScales = _this.getEditorProperty("gearBoxShiftScales", _this.gearBoxShiftScales);
        if (_this.lowSpeedAngle <= 0)
            _this.lowSpeedAngle = 0.3;
        if (_this.highSpeedAngle <= 0)
            _this.highSpeedAngle = 0.0125;
        if (_this.lowSpeedIncrement <= 0)
            _this.lowSpeedIncrement = 0.0125;
        if (_this.highSpeedIncrement <= 0)
            _this.highSpeedIncrement = 0.0125;
        if (_this.lerpEnginePitching <= 0)
            _this.lerpEnginePitching = 5000;
        if (_this.gearBoxShiftNext <= 0)
            _this.gearBoxShiftNext = 3500;
        if (_this.gearBoxShiftDown <= 0)
            _this.gearBoxShiftNext = 2500;
        if (_this.gearBoxShiftDelay <= 0)
            _this.gearBoxShiftDelay = 0.3;
        if (_this.transmissionRatio <= 0)
            _this.transmissionRatio = 1;
        if (_this.differentialRatio <= 0)
            _this.differentialRatio = 1;
        if (_this.driftingInfluence <= 0)
            _this.driftingInfluence = 1;
        if (_this.frictionSlipSpeed <= 0)
            _this.frictionSlipSpeed = 1;
        if (_this.setEngineTorque != null) {
            // TODO: USE ENGINE TORQUE CURVES
            console.warn("Setup Engine Torque Animation");
            console.log(_this.setEngineTorque);
            //this.engineTorqueCurve = null;
        }
        return _this;
    }
    StandardCarController.prototype.getRaycastVehicle = function () { return this.raycastVehicle; };
    StandardCarController.prototype.getAbsoluteSpeed = function () { return this.absoluteSpeed; };
    StandardCarController.prototype.getNormalizedSpeed = function () { return this.normalizedSpeed; };
    StandardCarController.prototype.getCurrentGearIndex = function () { return this.gearIndex; };
    StandardCarController.prototype.getCurrentEngineRPM = function () { return this.engineRPM; };
    StandardCarController.prototype.getCurrentEnginePitch = function () { return BABYLON.Scalar.Clamp((this.lerpedRPM / this.lerpEnginePitching) + 0.1); };
    StandardCarController.prototype.getGearShiftRatioCount = function () { return (this.gearBoxShiftRatios != null) ? this.gearBoxShiftRatios.length : 0; };
    StandardCarController.prototype.start = function () { this.initVehicleState(); };
    StandardCarController.prototype.update = function () { this.updateVehicleState(); };
    StandardCarController.prototype.destroy = function () { this.destroyVehicleState(); };
    //////////////////////////////////////////////////
    // Protected Vehicle Movement State Functions //
    //////////////////////////////////////////////////
    StandardCarController.prototype.initVehicleState = function () {
        BABYLON.Utilities.ValidateTransformQuaternion(this.transform);
        // Setup Engine Audio
        this._engineAudioSource = this.getComponent("BABYLON.AudioSource");
        if (this._engineAudioSource == null)
            BABYLON.Tools.Warn("No engine audio source manager found for: " + this.transform.name);
        // Setup Raycast Vehicle
        this._rigidbody = this.getComponent("BABYLON.RigidbodyPhysics");
        if (this._rigidbody != null) {
            if (this._rigidbody.hasRaycastVehicle()) {
                this.raycastVehicle = this._rigidbody.getRaycastVehicle();
                if (this.raycastVehicle != null) {
                    var frontLeftWheelName = (this.frontLeftWheelTrans.name != null && this.frontLeftWheelTrans.name !== "") ? this.frontLeftWheelTrans.name : null;
                    var frontRightWheelName = (this.frontRightWheelTrans.name != null && this.frontRightWheelTrans.name !== "") ? this.frontRightWheelTrans.name : null;
                    var backLeftWheelName = (this.backLeftWheelTrans.name != null && this.backLeftWheelTrans.name !== "") ? this.backLeftWheelTrans.name : null;
                    var backRightWheelName = (this.backRightWheelTrans.name != null && this.backRightWheelTrans.name !== "") ? this.backRightWheelTrans.name : null;
                    var frontLeftWheelLabel = (this.frontLeftWheelCollider.name != null && this.frontLeftWheelCollider.name !== "") ? this.frontLeftWheelCollider.name : null;
                    var frontRightWheelLabel = (this.frontRightWheelCollider.name != null && this.frontRightWheelCollider.name !== "") ? this.frontRightWheelCollider.name : null;
                    var backLeftWheelLabel = (this.backLeftWheelCollider.name != null && this.backLeftWheelCollider.name !== "") ? this.backLeftWheelCollider.name : null;
                    var backRightWheelLabel = (this.backRightWheelCollider.name != null && this.backRightWheelCollider.name !== "") ? this.backRightWheelCollider.name : null;
                    // Get Wheel Indexs from Wheel Names
                    if (frontLeftWheelLabel != null)
                        this.FRONT_LEFT = this.raycastVehicle.getWheelIndexByName(frontLeftWheelLabel);
                    if (frontRightWheelLabel != null)
                        this.FRONT_RIGHT = this.raycastVehicle.getWheelIndexByName(frontRightWheelLabel);
                    if (backLeftWheelLabel != null)
                        this.BACK_LEFT = this.raycastVehicle.getWheelIndexByName(backLeftWheelLabel);
                    if (backRightWheelLabel != null)
                        this.BACK_RIGHT = this.raycastVehicle.getWheelIndexByName(backRightWheelLabel);
                    // Setup Wheel Info And Transform Meshes
                    if (this.raycastVehicle.getNumWheels() >= 4) {
                        if (this.FRONT_LEFT >= 0 && frontLeftWheelName != null) {
                            this.m_frontLeftWheel = this.raycastVehicle.getWheelInfo(this.FRONT_LEFT);
                            this.frontLeftWheelMesh = this.getChildTransform(frontLeftWheelName, BABYLON.SearchType.StartsWith, false);
                            if (this.frontLeftWheelMesh != null) {
                                this.raycastVehicle.setWheelTransformMesh(this.FRONT_LEFT, this.frontLeftWheelMesh);
                                this._skidFLAudioSource = BABYLON.SceneManager.FindScriptComponent(this.frontLeftWheelMesh, "BABYLON.AudioSource");
                                if (this._skidFLAudioSource == null)
                                    BABYLON.Tools.Warn("No front left skid audio source manager found for: " + this.transform.name);
                            }
                        }
                        if (this.FRONT_RIGHT >= 0 && frontRightWheelName != null) {
                            this.m_frontRightWheel = this.raycastVehicle.getWheelInfo(this.FRONT_RIGHT);
                            this.frontRightWheelMesh = this.getChildTransform(frontRightWheelName, BABYLON.SearchType.StartsWith, false);
                            if (this.frontRightWheelMesh != null) {
                                this.raycastVehicle.setWheelTransformMesh(this.FRONT_RIGHT, this.frontRightWheelMesh);
                                this._skidFRAudioSource = BABYLON.SceneManager.FindScriptComponent(this.frontRightWheelMesh, "BABYLON.AudioSource");
                                if (this._skidFRAudioSource == null)
                                    BABYLON.Tools.Warn("No front right skid audio source manager found for: " + this.transform.name);
                            }
                        }
                        if (this.BACK_LEFT >= 0 && backLeftWheelName != null) {
                            this.m_backLeftWheel = this.raycastVehicle.getWheelInfo(this.BACK_LEFT);
                            if (this.wheelRadius <= 0 && this.m_backLeftWheel != null) {
                                this.wheelRadius = this.m_backLeftWheel.get_m_wheelsRadius();
                            }
                            this.backLeftWheelMesh = this.getChildTransform(backLeftWheelName, BABYLON.SearchType.StartsWith, false);
                            if (this.backLeftWheelMesh != null) {
                                this.raycastVehicle.setWheelTransformMesh(this.BACK_LEFT, this.backLeftWheelMesh);
                                this._skidRLAudioSource = BABYLON.SceneManager.FindScriptComponent(this.backLeftWheelMesh, "BABYLON.AudioSource");
                                if (this._skidRLAudioSource == null)
                                    BABYLON.Tools.Warn("No rear left skid audio source manager found for: " + this.transform.name);
                            }
                        }
                        if (this.BACK_RIGHT >= 0 && backRightWheelName != null) {
                            this.m_backRightWheel = this.raycastVehicle.getWheelInfo(this.BACK_RIGHT);
                            if (this.wheelRadius <= 0 && this.m_backRightWheel != null) {
                                this.wheelRadius = this.m_backRightWheel.get_m_wheelsRadius();
                            }
                            this.backRightWheelMesh = this.getChildTransform(backRightWheelName, BABYLON.SearchType.StartsWith, false);
                            if (this.backRightWheelMesh != null) {
                                this.raycastVehicle.setWheelTransformMesh(this.BACK_RIGHT, this.backRightWheelMesh);
                                this._skidRRAudioSource = BABYLON.SceneManager.FindScriptComponent(this.backRightWheelMesh, "BABYLON.AudioSource");
                                if (this._skidRRAudioSource == null)
                                    BABYLON.Tools.Warn("No rear right skid audio source manager found for: " + this.transform.name);
                            }
                        }
                    }
                    else {
                        BABYLON.Tools.Warn("Invalid vehicle controller wheel count info for: " + this.transform.name);
                    }
                }
                else {
                    BABYLON.Tools.Warn("Failed to create vehicle controller for: " + this.transform.name);
                }
            }
            else {
                BABYLON.Tools.Warn("No wheel collider information found for: " + this.transform.name);
            }
        }
        else {
            BABYLON.Tools.Warn("Failed to get rigidbody component: " + this.transform.name);
        }
    };
    StandardCarController.prototype.updateVehicleState = function () {
        var deltaTime = this.getDeltaSeconds();
        if (this.shiftDelay > 0) {
            this.shiftDelay -= deltaTime;
        }
        if (this.shiftDelay <= 0) {
            this.shiftDelay = 0;
            this.shiftingGears = false;
        }
        if (this._rigidbody != null && this.raycastVehicle != null) {
            this.forwardSpeed = this.raycastVehicle.getRawCurrentSpeedKph();
            if (this.forwardSpeed < 0.2)
                this.forwardSpeed = 0;
            this.absoluteSpeed = this.raycastVehicle.getAbsCurrentSpeedKph();
            if (this.absoluteSpeed < 0.2)
                this.absoluteSpeed = 0;
            this.americanSpeed = (this.absoluteSpeed * BABYLON.System.Kph2Mph);
            this.normalizedSpeed = BABYLON.Scalar.Clamp((this.absoluteSpeed / this.topEngineSpeed));
            if (this.gearBoxShiftRatios != null && this.gearIndex >= 0 && this.gearIndex < this.getGearShiftRatioCount()) {
                var minimumDelta = Math.min(Math.max(deltaTime, 1 / 200), 1);
                var wheelDiameter = (this.wheelRadius * 2 * BABYLON.System.Meter2Inch);
                var finalGearRatio = (this.gearBoxShiftRatios[this.gearIndex] * this.differentialRatio * this.transmissionRatio);
                this.engineRPM = (this.americanSpeed * finalGearRatio * 336) / wheelDiameter + 1000;
                this.clutchSlip = BABYLON.Utilities.LerpClamp(this.clutchSlip, 0, 1 - Math.pow(0.01, minimumDelta));
                this.lerpedRPM = BABYLON.Utilities.LerpClamp(this.oldRPM, this.engineRPM, (1 - this.clutchSlip));
                if (this.engineRPM > this.gearBoxShiftNext && this.gearIndex > 1 && this.clutchSlip < 0.05) {
                    if (this.gearIndex < (this.getGearShiftRatioCount() - 1)) {
                        this.gearIndex++; // Gear Shift Up
                        this.clutchSlip = 1.0;
                        this.oldRPM = this.engineRPM;
                        this.shiftDelay = this.gearBoxShiftDelay;
                        this.shiftingGears = true;
                    }
                }
                else if (this.engineRPM < this.gearBoxShiftDown && this.gearIndex > 2 && this.clutchSlip < 0.05) {
                    this.gearIndex--; // Gear Shift Down
                    this.clutchSlip = 1.0;
                    this.oldRPM = this.engineRPM;
                    //this.shiftDelay = (this.gearBoxShiftDelay * 0.5);
                    //this.shiftingGears = true;
                }
            }
        }
        // Account for further movement since the last wheel update
        var velocityScale = SkidmarkManager.GetVelocityScale();
        if (velocityScale > 0.0 && this._rigidbody != null) {
            this.m_velocityOffset.copyFrom(this._rigidbody.getLinearVelocity());
            this.m_velocityOffset.scaleInPlace(velocityScale);
        }
        // Update Wheel Skidding Info
        var skidThreashold = 0.65;
        var skid_FL = 0, skid_FR = 0, skid_RL = 0, skid_RR = 0;
        if (this.m_frontLeftWheel != null) {
            skid_FL = BABYLON.Scalar.Clamp((1 - this.m_frontLeftWheel.get_m_skidInfo()));
            if (skid_FL < skidThreashold)
                skid_FL = 0;
            if (skid_FL > 0) {
                var contactPointFL = this.m_frontLeftWheel.get_m_raycastInfo().get_m_contactPointWS();
                var contactNormalFL = this.m_frontLeftWheel.get_m_raycastInfo().get_m_contactNormalWS();
                var skidPosFL = new BABYLON.Vector3(contactPointFL.x(), contactPointFL.y(), contactPointFL.z());
                var skidNormFL = new BABYLON.Vector3(contactNormalFL.x(), contactNormalFL.y(), contactNormalFL.z());
                var skidScaleFL = BABYLON.Scalar.Normalize(skid_FL, skidThreashold, 1.0);
                if (velocityScale > 0.0)
                    skidPosFL.addInPlace(this.m_velocityOffset);
                this.m_frontLeftWheelSkid = SkidmarkManager.AddSkidmarkSegment(skidPosFL, skidNormFL, skidScaleFL, this.m_frontLeftWheelSkid);
            }
            else {
                this.m_frontLeftWheelSkid = -1;
            }
        }
        if (this.m_frontRightWheel != null) {
            skid_FR = BABYLON.Scalar.Clamp((1 - this.m_frontRightWheel.get_m_skidInfo()));
            if (skid_FR < skidThreashold)
                skid_FR = 0;
            if (skid_FR > 0) {
                var contactPointFR = this.m_frontRightWheel.get_m_raycastInfo().get_m_contactPointWS();
                var contactNormalFR = this.m_frontRightWheel.get_m_raycastInfo().get_m_contactNormalWS();
                var skidPosFR = new BABYLON.Vector3(contactPointFR.x(), contactPointFR.y(), contactPointFR.z());
                var skidNormFR = new BABYLON.Vector3(contactNormalFR.x(), contactNormalFR.y(), contactNormalFR.z());
                var skidScaleFR = BABYLON.Scalar.Normalize(skid_FR, skidThreashold, 1.0);
                if (velocityScale > 0.0)
                    skidPosFR.addInPlace(this.m_velocityOffset);
                this.m_frontRightWheelSkid = SkidmarkManager.AddSkidmarkSegment(skidPosFR, skidNormFR, skidScaleFR, this.m_frontRightWheelSkid);
            }
            else {
                this.m_frontRightWheelSkid = -1;
            }
        }
        if (this.m_backLeftWheel != null) {
            skid_RL = BABYLON.Scalar.Clamp((1 - this.m_backLeftWheel.get_m_skidInfo()));
            if (skid_RL < skidThreashold)
                skid_RL = 0;
            if (skid_RL > 0) {
                var contactPointRL = this.m_backLeftWheel.get_m_raycastInfo().get_m_contactPointWS();
                var contactNormalRL = this.m_backLeftWheel.get_m_raycastInfo().get_m_contactNormalWS();
                var skidPosRL = new BABYLON.Vector3(contactPointRL.x(), contactPointRL.y(), contactPointRL.z());
                var skidNormRL = new BABYLON.Vector3(contactNormalRL.x(), contactNormalRL.y(), contactNormalRL.z());
                var skidScaleRL = BABYLON.Scalar.Normalize(skid_RL, skidThreashold, 1.0);
                if (velocityScale > 0.0)
                    skidPosRL.addInPlace(this.m_velocityOffset);
                this.m_backLeftWheelSkid = SkidmarkManager.AddSkidmarkSegment(skidPosRL, skidNormRL, skidScaleRL, this.m_backLeftWheelSkid);
            }
            else {
                this.m_backLeftWheelSkid = -1;
            }
        }
        if (this.m_backRightWheel != null) {
            skid_RR = BABYLON.Scalar.Clamp((1 - this.m_backRightWheel.get_m_skidInfo()));
            if (skid_RR < skidThreashold)
                skid_RR = 0;
            if (skid_RR > 0) {
                var contactPointRR = this.m_backRightWheel.get_m_raycastInfo().get_m_contactPointWS();
                var contactNormalRR = this.m_backRightWheel.get_m_raycastInfo().get_m_contactNormalWS();
                var skidPosRR = new BABYLON.Vector3(contactPointRR.x(), contactPointRR.y(), contactPointRR.z());
                var skidNormRR = new BABYLON.Vector3(contactNormalRR.x(), contactNormalRR.y(), contactNormalRR.z());
                var skidScaleRR = BABYLON.Scalar.Normalize(skid_RR, skidThreashold, 1.0);
                if (velocityScale > 0.0)
                    skidPosRR.addInPlace(this.m_velocityOffset);
                this.m_backRightWheelSkid = SkidmarkManager.AddSkidmarkSegment(skidPosRR, skidNormRR, skidScaleRR, this.m_backRightWheelSkid);
            }
            else {
                this.m_backRightWheelSkid = -1;
            }
        }
        // Update Engine And Wheel Pitch
        if (this._engineAudioSource != null) {
            var engineSoundClip = this._engineAudioSource.getSoundClip();
            if (engineSoundClip != null)
                engineSoundClip.setPlaybackRate(this.getCurrentEnginePitch() * 0.75);
        }
        if (this._skidFLAudioSource != null) {
            var skidFLSoundClip = this._skidFLAudioSource.getSoundClip();
            if (skidFLSoundClip != null)
                skidFLSoundClip.setPlaybackRate(skid_FL);
        }
        if (this._skidFRAudioSource != null) {
            var skidFRSoundClip = this._skidFRAudioSource.getSoundClip();
            if (skidFRSoundClip != null)
                skidFRSoundClip.setPlaybackRate(skid_FR);
        }
        if (this._skidRLAudioSource != null) {
            var skidRLSoundClip = this._skidRLAudioSource.getSoundClip();
            if (skidRLSoundClip != null)
                skidRLSoundClip.setPlaybackRate(skid_RL);
        }
        if (this._skidRRAudioSource != null) {
            var skidRRSoundClip = this._skidRRAudioSource.getSoundClip();
            if (skidRRSoundClip != null)
                skidRRSoundClip.setPlaybackRate(skid_RR);
        }
        //const msg:string = ("MPH: " + this.americanSpeed.toFixed(1) + " --> Skid Info - FL: " + skid_FL.toFixed(2) + " - FR: " + skid_FR.toFixed(2) + " - RL: " + skid_RL.toFixed(2) + " - RR: " + skid_RR.toFixed(2));
        //BABYLON.Utilities.PrintToScreen(msg, "#008000");
    };
    StandardCarController.prototype.destroyVehicleState = function () {
        this._rigidbody = null;
        this._engineAudioSource = null;
        this._skidFLAudioSource = null;
        this._skidFRAudioSource = null;
        this._skidRLAudioSource = null;
        this._skidRRAudioSource = null;
        if (this.m_frontLeftWheel != null) {
            Ammo.destroy(this.m_frontLeftWheel); // ???
            this.m_frontLeftWheel = null;
        }
        if (this.m_frontRightWheel != null) {
            Ammo.destroy(this.m_frontRightWheel); // ???
            this.m_frontRightWheel = null;
        }
        if (this.m_backLeftWheel != null) {
            Ammo.destroy(this.m_backLeftWheel); // ???
            this.m_backLeftWheel = null;
        }
        if (this.m_backRightWheel != null) {
            Ammo.destroy(this.m_backRightWheel); // ???
            this.m_backRightWheel = null;
        }
        this.m_physicsWorld = null;
        this.raycastVehicle = null;
        this.frontLeftWheelMesh = null;
        this.frontRightWheelMesh = null;
        this.backLeftWheelMesh = null;
        this.backRightWheelMesh = null;
        this.frontLeftWheelTrans = null;
        this.frontRightWheelTrans = null;
        this.backLeftWheelTrans = null;
        this.backRightWheelTrans = null;
        this.frontLeftWheelCollider = null;
        this.frontRightWheelCollider = null;
        this.backLeftWheelCollider = null;
        this.backRightWheelCollider = null;
    };
    /** Drives the raycast vehicle with the specfied movement and hand braking properties. */
    StandardCarController.prototype.drive = function (forward, turn, braking) {
        if (braking === void 0) { braking = false; }
        if (this._rigidbody == null || this.raycastVehicle == null)
            return;
        if (this.FRONT_LEFT >= 0 && this.FRONT_RIGHT >= 0 && this.BACK_LEFT >= 0 && this.BACK_RIGHT >= 0) {
            var deltaTime = this.getDeltaSeconds();
            this.brakingForce = 0;
            this.engineForce = 0;
            // ..
            // Update Gearing Box (TODO: Fix Start Gear Engine Sound)
            // ..
            var throttleAmount = 0;
            var brakingAmount = 0;
            if (forward > 0.1) { // Forward
                brakingAmount = 0;
                throttleAmount = Math.abs(forward);
            }
            else if (forward < 0.1) { // Reverse
                throttleAmount = 0;
                brakingAmount = Math.abs(forward);
            }
            if (this.absoluteSpeed >= 0.2) {
                if (this.gearIndex > 0) {
                    // TODO: Get Engine Curve Power
                }
                else {
                    // TODO: Get Engine Curve Power
                }
            }
            else {
                if (throttleAmount > 0.1) {
                    this.gearIndex = 2; // Set First Gear
                }
                else if (brakingAmount > 0.1) {
                    this.gearIndex = 0; // Set Reverse Gear
                }
                else {
                    this.gearIndex = 1; // Set Neutral Gear
                }
            }
            // ..
            // Update Engine Forces
            // ..
            var gearShiftScale = (this.gearBoxShiftScales != null && this.gearBoxShiftScales.length > this.gearIndex) ? this.gearBoxShiftScales[this.gearIndex] : 1.0;
            var gearShiftRatio = (this.gearBoxShiftRatios != null && this.gearBoxShiftRatios.length > this.gearIndex) ? this.gearBoxShiftRatios[this.gearIndex] : 1.0;
            var finalGearRatio = (gearShiftRatio * this.differentialRatio * this.transmissionRatio);
            var engineMotorTorque = this.getVehicleEngineTorque(this.engineRPM) * Math.abs(forward) * gearShiftScale;
            var allowedEnginePower = (engineMotorTorque * finalGearRatio);
            if (forward > 0.1) { // Forward
                if (this.forwardSpeed < -1)
                    this.brakingForce = this.maxBrakingForce;
                else
                    this.engineForce = allowedEnginePower;
            }
            else if (forward < -0.1) { // Reverse
                if (this.forwardSpeed > 1)
                    this.brakingForce = this.maxBrakingForce;
                else
                    this.engineForce = -(allowedEnginePower * this.maxReverseSpeed);
            }
            else {
                this.engineForce = 0;
                this.brakingForce = 10; // Static
            }
            if (this.shiftingGears === true || this.americanSpeed > this.topEngineSpeed)
                this.engineForce = 0;
            // ..
            // Update Turning Angle
            // ..
            this.steeringIncrement = BABYLON.Scalar.Lerp(this.lowSpeedIncrement, this.highSpeedIncrement, this.normalizedSpeed);
            this.allowedTurningAngle = BABYLON.Scalar.Lerp(this.lowSpeedAngle, this.highSpeedAngle, this.normalizedSpeed);
            if (turn > 0) { // Right
                if (this.vehicleSteer < this.allowedTurningAngle) {
                    this.vehicleSteer += (this.steeringIncrement);
                }
            }
            else if (turn < 0) { // Left
                if (this.vehicleSteer > -this.allowedTurningAngle) {
                    this.vehicleSteer -= (this.steeringIncrement);
                }
            }
            else {
                if (this.vehicleSteer < -this.steeringIncrement) {
                    this.vehicleSteer += this.steeringIncrement;
                }
                else {
                    if (this.vehicleSteer > this.steeringIncrement) {
                        this.vehicleSteer -= this.steeringIncrement;
                    }
                    else {
                        this.vehicleSteer = 0;
                    }
                }
            }
            // ..
            // Update Vehicle Controls
            // ..
            if (braking === true && this.handBrakingForce > 0) {
                if (this.americanSpeed > 20) {
                    var frontLockFriction = (this.wheelLockFriction > 0.01) ? (this.wheelLockFriction - 0.01) : this.wheelLockFriction;
                    if (this.m_frontLeftWheel != null && this.m_frontLeftWheel.defaultFriction != null) {
                        this.m_frontLeftWheel.set_m_frictionSlip(this.m_frontLeftWheel.defaultFriction * frontLockFriction);
                    }
                    if (this.m_frontRightWheel != null && this.m_frontRightWheel.defaultFriction != null) {
                        this.m_frontRightWheel.set_m_frictionSlip(this.m_frontLeftWheel.defaultFriction * frontLockFriction);
                    }
                    if (this.m_backLeftWheel != null && this.m_backLeftWheel.defaultFriction != null) {
                        this.m_backLeftWheel.set_m_frictionSlip(this.m_frontLeftWheel.defaultFriction * this.wheelLockFriction);
                    }
                    if (this.m_backRightWheel != null && this.m_backRightWheel.defaultFriction != null) {
                        this.m_backRightWheel.set_m_frictionSlip(this.m_frontLeftWheel.defaultFriction * this.wheelLockFriction);
                    }
                }
                this.updateCurrentFrictionSlip(deltaTime * this.frictionSlipSpeed);
                if (this.raycastVehicle.lockedWheelIndexes == null)
                    this.raycastVehicle.lockedWheelIndexes = [this.BACK_LEFT, this.BACK_RIGHT];
                this.raycastVehicle.setSteeringAngle(this.vehicleSteer, this.FRONT_LEFT);
                this.raycastVehicle.setSteeringAngle(this.vehicleSteer, this.FRONT_RIGHT);
                this.raycastVehicle.setEngineForce(0, this.FRONT_LEFT);
                this.raycastVehicle.setEngineForce(0, this.FRONT_RIGHT);
                this.raycastVehicle.setEngineForce(0, this.BACK_LEFT);
                this.raycastVehicle.setEngineForce(0, this.BACK_RIGHT);
                this.raycastVehicle.setBrakingForce(0, this.FRONT_LEFT);
                this.raycastVehicle.setBrakingForce(0, this.FRONT_RIGHT);
                this.raycastVehicle.setBrakingForce(this.handBrakingForce, this.BACK_LEFT);
                this.raycastVehicle.setBrakingForce(this.handBrakingForce, this.BACK_RIGHT);
                // ..
                // TODO: Support Angular Rotation Boost - ???
                // ..
                // let angularBoostFactor:number = 0; 
                // if (angularBoostFactor !== 0) {
                //    const angularVelocity:BABYLON.Vector3 = this._rigidbody.getAngularVelocity();
                //    angularVelocity.y += (angularBoostFactor * this.driftingInfluence);
                //    this._rigidbody.setAngularVelocity(angularVelocity);
                // }
            }
            else {
                //this.m_frontLeftWheel.set_m_frictionSlip(0);
                //this.m_frontRightWheel.set_m_frictionSlip(0);
                //this.m_backLeftWheel.set_m_frictionSlip(0.0);
                //this.m_backRightWheel.set_m_frictionSlip(0.0);
                this.updateCurrentFrictionSlip(deltaTime);
                if (this.raycastVehicle.lockedWheelIndexes != null)
                    this.raycastVehicle.lockedWheelIndexes = null;
                this.raycastVehicle.setSteeringAngle(this.vehicleSteer, this.FRONT_LEFT);
                this.raycastVehicle.setSteeringAngle(this.vehicleSteer, this.FRONT_RIGHT);
                if (this.wheelDriveType === 1 || this.wheelDriveType === 2) { // FRONT OR ALL WHEEL DRIVE
                    this.raycastVehicle.setEngineForce(this.engineForce, this.FRONT_LEFT);
                    this.raycastVehicle.setEngineForce(this.engineForce, this.FRONT_RIGHT);
                }
                if (this.wheelDriveType === 0 || this.wheelDriveType === 2) { // REAR OR ALL WHEEL DRIVE
                    this.raycastVehicle.setEngineForce(this.engineForce, this.BACK_LEFT);
                    this.raycastVehicle.setEngineForce(this.engineForce, this.BACK_RIGHT);
                }
                this.raycastVehicle.setBrakingForce(this.brakingForce * 0.5, this.FRONT_LEFT);
                this.raycastVehicle.setBrakingForce(this.brakingForce * 0.5, this.FRONT_RIGHT);
                this.raycastVehicle.setBrakingForce(this.brakingForce, this.BACK_LEFT);
                this.raycastVehicle.setBrakingForce(this.brakingForce, this.BACK_RIGHT);
            }
            // Trace Current Speed
            // const msg:string = ("Speed: " + this.americanSpeed.toFixed(1) + " --> Turn Angle: " + this.allowedTurningAngle.toFixed(4) + " --> Turn Increment: " + this.steeringIncrement.toFixed(4));
            // const msg:string = ("MPH: " + this.americanSpeed.toFixed(1) + " --> Gear Index: " + this.gearIndex.toFixed(0) + " --> Engine RPM: " + this.engineRPM.toFixed(0) + " ---> Engine Pitch: " + this.getCurrentEnginePitch().toFixed(2) + " ---> Clutch Slip: " + this.clutchSlip.toFixed(4) + " ---> Raw KPH: " + this.absoluteSpeed.toFixed(1));
            //const msg:string = ("Car Speed: " + this.americanSpeed.toFixed(1) + " --> Gear Index: " + this.gearIndex.toFixed(0) + " --> Engine RPM: " + this.engineRPM.toFixed(0) + " ---> Engine Toruqe: " + engineMotorTorque.toFixed(2)+ " ---> Engine Power: " + allowedEnginePower.toFixed(2));
            //BABYLON.Utilities.PrintToScreen(msg, "#008000");
        }
    };
    StandardCarController.prototype.getVehicleEngineTorque = function (rpm) {
        var result = 2000;
        //if (this.engineTorqueCurve != null) {
        //    result = 1000; // TODO: Sample Animation Curve
        //}
        //if (result <= 0) {
        //    result = 100;
        //}
        return result;
    };
    StandardCarController.prototype.updateCurrentFrictionSlip = function (deltaTime) {
        if (this.m_frontLeftWheel != null && this.m_frontLeftWheel.defaultFriction != null) {
            var frontLeftFriction = this.m_frontLeftWheel.get_m_frictionSlip();
            if (frontLeftFriction !== this.m_frontLeftWheel.defaultFriction) {
                frontLeftFriction = BABYLON.Scalar.Lerp(frontLeftFriction, this.m_frontLeftWheel.defaultFriction, deltaTime);
                this.m_frontLeftWheel.set_m_frictionSlip(frontLeftFriction);
            }
        }
        if (this.m_frontRightWheel != null && this.m_frontRightWheel.defaultFriction != null) {
            var frontRightFriction = this.m_frontRightWheel.get_m_frictionSlip();
            if (frontRightFriction !== this.m_frontRightWheel.defaultFriction) {
                frontRightFriction = BABYLON.Scalar.Lerp(frontRightFriction, this.m_frontRightWheel.defaultFriction, deltaTime);
                this.m_frontRightWheel.set_m_frictionSlip(frontRightFriction);
            }
        }
        if (this.m_backLeftWheel != null && this.m_backLeftWheel.defaultFriction != null) {
            var backLeftFriction = this.m_backLeftWheel.get_m_frictionSlip();
            if (backLeftFriction !== this.m_backLeftWheel.defaultFriction) {
                backLeftFriction = BABYLON.Scalar.Lerp(backLeftFriction, this.m_backLeftWheel.defaultFriction, deltaTime);
                this.m_backLeftWheel.set_m_frictionSlip(backLeftFriction);
            }
        }
        if (this.m_backRightWheel != null && this.m_backRightWheel.defaultFriction != null) {
            var backRightFriction = this.m_backRightWheel.get_m_frictionSlip();
            if (backRightFriction !== this.m_backRightWheel.defaultFriction) {
                backRightFriction = BABYLON.Scalar.Lerp(backRightFriction, this.m_backRightWheel.defaultFriction, deltaTime);
                this.m_backRightWheel.set_m_frictionSlip(backRightFriction);
            }
        }
    };
    return StandardCarController;
}(BABYLON.ScriptComponent));
/**
 * Babylon Script Component
 * @class VehicleInputController
 */
var VehicleInputController = /** @class */ (function (_super) {
    __extends(VehicleInputController, _super);
    function VehicleInputController(transform, scene, properties) {
        if (properties === void 0) { properties = {}; }
        var _this = _super.call(this, transform, scene, properties) || this;
        _this.playerDeltaX = 0;
        _this.playerDeltaY = 0;
        _this.playerMouseX = 0;
        _this.playerMouseY = 0;
        _this.enableInput = false;
        _this.attachCamera = false;
        _this.followBehind = true;
        _this.playerNumber = BABYLON.PlayerNumber.One;
        _this.triggerForward = BABYLON.Xbox360Trigger.Right;
        _this.keyboardForawrd = BABYLON.UserInputKey.W;
        _this.auxKeyboardForawrd = BABYLON.UserInputKey.UpArrow;
        _this.triggerBackwards = BABYLON.Xbox360Trigger.Left;
        _this.keyboardBackwards = BABYLON.UserInputKey.S;
        _this.auxKeyboardBackwards = BABYLON.UserInputKey.DownArrow;
        _this.buttonHandbrake = BABYLON.Xbox360Button.X;
        _this.keyboardHandbrake = BABYLON.UserInputKey.SpaceBar;
        //protected m_currentFollowSpeed:number = 0.1;
        //protected m_followTargetManager:BABYLON.FollowTargetManager = null;
        _this.m_standardCarController = null;
        _this.enableInput = _this.getEditorProperty("enableInput", _this.enableInput);
        _this.playerNumber = _this.getEditorProperty("playerNumber", _this.playerNumber);
        _this.attachCamera = _this.getEditorProperty("attachCamera", _this.attachCamera);
        _this.followBehind = _this.getEditorProperty("followBehind", _this.followBehind);
        return _this;
    }
    VehicleInputController.prototype.getPlayerDeltaX = function () { return this.playerDeltaX; };
    ;
    VehicleInputController.prototype.getPlayerDeltaY = function () { return this.playerDeltaY; };
    ;
    VehicleInputController.prototype.getPlayerMouseX = function () { return this.playerMouseX; };
    ;
    VehicleInputController.prototype.getPlayerMouseY = function () { return this.playerMouseY; };
    ;
    VehicleInputController.prototype.start = function () { this.initVehicleController(); };
    VehicleInputController.prototype.update = function () { this.updateVehicleController(); };
    VehicleInputController.prototype.after = function () { this.afterVehicleController(); };
    VehicleInputController.prototype.destroy = function () { this.destroyVehicleController(); };
    //////////////////////////////////////////////////
    // Protected Character Movement State Functions //
    //////////////////////////////////////////////////
    //protected m_cameraBoom:BABYLON.TransformNode = null;
    VehicleInputController.prototype.initVehicleController = function () {
        if (this.attachCamera === true) {
            //this.m_cameraBoom = BABYLON.Mesh.CreateBox("Camera Boom", 0.5, this.scene);
            //this.m_cameraBoom.parent = this.transform;
            //this.m_cameraBoom.position.set(0,1.5,0);
            //this.m_cameraBoom.rotationQuaternion = BABYLON.Utilities.FromEuler(0,0,0);
            //const transformCamera:BABYLON.TransformNode = BABYLON.SceneManager.GetTransformNode(this.scene, "Main Camera");
            /*
            //const transformCamera:BABYLON.TransformNode = BABYLON.UniversalCameraSystem.GetPlayerCameraTransform(this.playerNumber);
            const transformCamera:BABYLON.TransformNode = BABYLON.SceneManager.GetTransformNode(this.scene, "Main Camera");
            this.m_followTargetManager = new BABYLON.FollowTargetManager(transformCamera, this.getAbstractMesh());
            // Acceleration of camera in moving from current to goal position
            this.m_followTargetManager.followAcceleration = this.m_currentFollowSpeed;
            // The goal distance of camera from target
            this.m_followTargetManager.followDistance = 6;
            // The goal height of camera above local origin (centre) of target
            this.m_followTargetManager.heightOffset = 2;
            // The goal rotation of camera around local origin (centre) of target in x y plane
            this.m_followTargetManager.rotationOffset = 180;
            // The speed at which acceleration is halted
            this.m_followTargetManager.maxFollowSpeed = 10000;
            // The lower hight offset limit value
            this.m_followTargetManager.lowerHeightOffsetLimit = 1;
            */
            //
            var startPos = this.transform.position.clone();
            startPos.y += 2;
            startPos.z += -6;
            // ..
            var followCamera = new BABYLON.FollowCamera("FollowCam", startPos, this.scene);
            followCamera.cameraAcceleration = 0.06;
            followCamera.maxCameraSpeed = 1800;
            followCamera.rotationOffset = 180;
            followCamera.heightOffset = 2.0;
            followCamera.inertia = 40.0;
            followCamera.radius = 10;
            followCamera.lockedTarget = this.getAbstractMesh();
            followCamera.lowerHeightOffsetLimit = 1;
            this.scene.activeCamera = followCamera;
            //
        }
        this.m_standardCarController = this.getComponent("StandardCarController");
        if (this.m_standardCarController == null)
            BABYLON.Tools.Warn("Null standard car controller for: " + this.transform.name);
    };
    VehicleInputController.prototype.updateVehicleController = function () {
        if (this.m_standardCarController != null) {
            if (this.enableInput === true) {
                this.playerDeltaX = BABYLON.SceneManager.GetUserInput(BABYLON.UserInputAxis.Horizontal, this.playerNumber);
                this.playerDeltaY = BABYLON.SceneManager.GetUserInput(BABYLON.UserInputAxis.Vertical, this.playerNumber);
                this.playerMouseX = BABYLON.SceneManager.GetUserInput(BABYLON.UserInputAxis.MouseX, this.playerNumber);
                this.playerMouseY = BABYLON.SceneManager.GetUserInput(BABYLON.UserInputAxis.MouseY, this.playerNumber);
                if (Math.abs(this.playerDeltaX) <= BABYLON.UserInputOptions.GamepadDeadStickValue)
                    this.playerDeltaX = 0;
                if (Math.abs(this.playerDeltaY) <= BABYLON.UserInputOptions.GamepadDeadStickValue)
                    this.playerDeltaY = 0;
                if (Math.abs(this.playerMouseX) <= BABYLON.UserInputOptions.GamepadDeadStickValue)
                    this.playerMouseX = 0;
                if (Math.abs(this.playerMouseY) <= BABYLON.UserInputOptions.GamepadDeadStickValue)
                    this.playerMouseY = 0;
                var auxForwardKeyboard = BABYLON.SceneManager.GetKeyboardInput(this.auxKeyboardForawrd); // Player One Only
                var forwardKeyboard = BABYLON.SceneManager.GetKeyboardInput(this.keyboardForawrd); // Player One Only
                var forwardTrigger = BABYLON.SceneManager.GetGamepadTriggerInput(this.triggerForward, this.playerNumber);
                var auxBackwardKeyboard = BABYLON.SceneManager.GetKeyboardInput(this.auxKeyboardBackwards); // Player One Only
                var backwardKeyboard = BABYLON.SceneManager.GetKeyboardInput(this.keyboardBackwards); // Player One Only
                var backwardTrigger = BABYLON.SceneManager.GetGamepadTriggerInput(this.triggerBackwards, this.playerNumber);
                var handbrakeKeyboard = BABYLON.SceneManager.GetKeyboardInput(this.keyboardHandbrake); // Player One Only
                var handbrakeButton = BABYLON.SceneManager.GetGamepadButtonInput(this.buttonHandbrake, this.playerNumber);
                var playerMovement = 0;
                var playerSteering = 0;
                var playerHandbrake = false;
                // Primary Accelerattion
                if (forwardTrigger > 0.2)
                    playerMovement = forwardTrigger;
                else if (this.playerNumber === BABYLON.PlayerNumber.One && (forwardKeyboard === true || auxForwardKeyboard === true))
                    playerMovement = 1;
                // Braking Takes Precedence
                if (backwardTrigger > 0.2)
                    playerMovement = -backwardTrigger;
                else if (this.playerNumber === BABYLON.PlayerNumber.One && (backwardKeyboard === true || auxBackwardKeyboard === true))
                    playerMovement = -1;
                // Includes AD And Arrow Keys
                playerSteering = this.playerDeltaX;
                // Pull Hard Hand Brake Lever
                playerHandbrake = (handbrakeKeyboard === true || handbrakeButton === true);
                // Drive Standard Car Controller
                this.m_standardCarController.drive(playerMovement, playerSteering, playerHandbrake);
            }
        }
    };
    VehicleInputController.prototype.afterVehicleController = function () {
        if (this.attachCamera === true) {
            /*
            if (this.m_followTargetManager != null) {
                const targetDistance:number = this.m_followTargetManager.getTargetDistance();
                // ..
                // TODO: Calculate Smooth Follow Acceleration Speed
                // ..
                this.m_followTargetManager.followAcceleration = this.m_currentFollowSpeed;
                this.m_followTargetManager.update(this.followBehind, true);

                const msg:string = "Target Distance: " + targetDistance.toFixed(2) + " --> Follow Speed: " + this.m_currentFollowSpeed.toFixed(2);
                BABYLON.Utilities.PrintToScreen(msg, "#00FF00");
            }
            */
        }
    };
    VehicleInputController.prototype.destroyVehicleController = function () {
        this.m_standardCarController = null;
        /*
        if (this.m_followTargetManager != null) {
            this.m_followTargetManager.dispose();
            this.m_followTargetManager = null;
        }
        */
    };
    return VehicleInputController;
}(BABYLON.ScriptComponent));
/**
 * Babylon Script Component
 * @class ItemRotator
 */
var ItemRotator = /** @class */ (function (_super) {
    __extends(ItemRotator, _super);
    function ItemRotator(transform, scene, properties) {
        if (properties === void 0) { properties = {}; }
        var _this = _super.call(this, transform, scene, properties) || this;
        _this.rotateSpeed = 1.0;
        _this.rotateSpeed = _this.getEditorProperty("rotateSpeed", _this.rotateSpeed);
        return _this;
    }
    ItemRotator.prototype.start = function () {
        console.log("===> Starting item rotator for: " + this.transform.name);
    };
    ItemRotator.prototype.update = function () {
        var delta = this.getDeltaSeconds();
        this.transform.addRotation(0, (this.rotateSpeed * delta), 0);
    };
    ItemRotator.prototype.destroy = function () {
        console.log("===> Destroying item rotator for: " + this.transform.name);
    };
    return ItemRotator;
}(BABYLON.ScriptComponent));
/**
 * Babylon Script Component
 * @class TestAnimation
 */
var TestAnimation = /** @class */ (function (_super) {
    __extends(TestAnimation, _super);
    function TestAnimation(transform, scene, properties) {
        if (properties === void 0) { properties = {}; }
        var _this = _super.call(this, transform, scene, properties) || this;
        //private animator:BABYLON.AnimationState = null;
        _this.animator = null;
        return _this;
    }
    TestAnimation.prototype.start = function () {
        console.log("===> Starting animation test for: " + this.transform.name);
        this.animator = this.getComponent("BABYLON.AnimationState");
        if (this.animator == null) {
            BABYLON.Tools.Warn("Failed to get animation state component: " + this.transform.name);
        }
    };
    TestAnimation.prototype.update = function () {
        // Update render loop function
    };
    TestAnimation.prototype.after = function () {
        // After render loop function
    };
    TestAnimation.prototype.destroy = function () {
        // Destroy component function
    };
    return TestAnimation;
}(BABYLON.ScriptComponent));
/**
 * Babylon Script Component
 * @class TestCollision
 */
var TestCollision = /** @class */ (function (_super) {
    __extends(TestCollision, _super);
    function TestCollision(transform, scene, properties) {
        if (properties === void 0) { properties = {}; }
        var _this = _super.call(this, transform, scene, properties) || this;
        _this.rigidbody = null;
        return _this;
    }
    TestCollision.prototype.start = function () {
        var _this = this;
        // Start render loop function
        console.log("Test collision for: " + this.transform.name);
        this.rigidbody = this.getComponent("BABYLON.RigidbodyPhysics");
        if (this.rigidbody != null) {
            this.rigidbody.registerOnCollisionEnter(function (mesh) {
                var tag = BABYLON.SceneManager.GetTransformTag(mesh);
                console.log("###: " + _this.transform.name + ": Begin Contact With: " + mesh.name);
            });
            this.rigidbody.registerOnCollisionStay(function (mesh) {
                var tag = BABYLON.SceneManager.GetTransformTag(mesh);
                //console.log("###: " + this.transform.name + ": Update Contact With: " + mesh.name);
            });
            this.rigidbody.registerOnCollisionExit(function (mesh) {
                var tag = BABYLON.SceneManager.GetTransformTag(mesh);
                console.warn("###: " + _this.transform.name + ": End Contact With: " + mesh.name);
            });
        }
        else {
            console.warn("Failed to locate rigidbody component for: " + this.transform.name);
        }
    };
    TestCollision.prototype.update = function () {
        // Update render loop function
    };
    TestCollision.prototype.after = function () {
        // After render loop function
    };
    TestCollision.prototype.destroy = function () {
        // Destroy component function
    };
    return TestCollision;
}(BABYLON.ScriptComponent));
/**
 * Babylon Script Component
 * @class TestController
 */
var TestController = /** @class */ (function (_super) {
    __extends(TestController, _super);
    function TestController(transform, scene, properties) {
        if (properties === void 0) { properties = {}; }
        var _this = _super.call(this, transform, scene, properties) || this;
        _this.testTexture = null;
        _this.m_physicsWorld = null;
        _this.m_physicsEngine = null;
        _this.ran = false;
        _this.testTexture = _this.getEditorProperty("testTexture", _this.testTexture);
        return _this;
    }
    TestController.prototype.start = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                // Start render loop function
                console.log("===> Starting test controller...");
                this.m_physicsWorld = BABYLON.SceneManager.GetPhysicsWorld(this.scene);
                this.m_physicsEngine = BABYLON.SceneManager.GetPhysicsEngine(this.scene);
                return [2 /*return*/];
            });
        });
    };
    TestController.prototype.update = function () {
        // Update render loop function
        // const num_manifolds:number = this.m_physicsWorld.getBroadphase().getOverlappingPairCache().getNumOverlappingPairs();
        //const num_manifolds:number = this.m_physicsWorld.getDispatcher().getNumManifolds();
        //const msg = "Total Overlapping Paris: " + num_manifolds;
        //BABYLON.Utilities.PrintToScreen(msg);   
        // Test Running Loop
        //if (this.ran === false) {
        //    this.ran = true;
        //    
        //}
    };
    TestController.prototype.after = function () {
        // After render loop function
    };
    TestController.prototype.destroy = function () {
        // Destroy component function
    };
    return TestController;
}(BABYLON.ScriptComponent));
//# sourceMappingURL=data:application/json;base64,

// Project Data Store
if (navigator.dataStore == null) navigator.dataStore = {};

navigator.dataStore['manifest'] = JSON.parse(window.atob("ewogICJuYW1lIjogIiMjI1RJVExFIyMjIiwKICAic2hvcnRfbmFtZSI6ICIjIyNTSE9SVCMjIyIsCiAgInRoZW1lX2NvbG9yIjogIiMjI1NQTEFTSCMjIyIsCiAgImJhY2tncm91bmRfY29sb3IiOiAiIyMjU1BMQVNIIyMjIiwKICAib3JpZW50YXRpb24iOiAiIyMjT1JJRU5UIyMjIiwgIAogICJkaXNwbGF5IjogIiMjI0RJU1BMQVkjIyMiLAogICJzdGFydF91cmwiOiAiIyMjU1RBUlQjIyMiLAogICJpY29ucyI6IFsKICAgIHsKICAgICAgInNyYyI6ICJpY29ucy9pY29uLTcyeDcyLnBuZyIsCiAgICAgICJzaXplcyI6ICI3Mng3MiIsCiAgICAgICJ0eXBlIjogImltYWdlL3BuZyIKICAgIH0sCiAgICB7CiAgICAgICJzcmMiOiAiaWNvbnMvaWNvbi05Nng5Ni5wbmciLAogICAgICAic2l6ZXMiOiAiOTZ4OTYiLAogICAgICAidHlwZSI6ICJpbWFnZS9wbmciCiAgICB9LAogICAgewogICAgICAic3JjIjogImljb25zL2ljb24tMTI4eDEyOC5wbmciLAogICAgICAic2l6ZXMiOiAiMTI4eDEyOCIsCiAgICAgICJ0eXBlIjogImltYWdlL3BuZyIKICAgIH0sCiAgICB7CiAgICAgICJzcmMiOiAiaWNvbnMvaWNvbi0xNDR4MTQ0LnBuZyIsCiAgICAgICJzaXplcyI6ICIxNDR4MTQ0IiwKICAgICAgInR5cGUiOiAiaW1hZ2UvcG5nIgogICAgfSwKICAgIHsKICAgICAgInNyYyI6ICJpY29ucy9pY29uLTE1MngxNTIucG5nIiwKICAgICAgInNpemVzIjogIjE1MngxNTIiLAogICAgICAidHlwZSI6ICJpbWFnZS9wbmciCiAgICB9LAogICAgewogICAgICAic3JjIjogImljb25zL2ljb24tMTkyeDE5Mi5wbmciLAogICAgICAic2l6ZXMiOiAiMTkyeDE5MiIsCiAgICAgICJ0eXBlIjogImltYWdlL3BuZyIKICAgIH0sCiAgICB7CiAgICAgICJzcmMiOiAiaWNvbnMvaWNvbi0zODR4Mzg0LnBuZyIsCiAgICAgICJzaXplcyI6ICIzODR4Mzg0IiwKICAgICAgInR5cGUiOiAiaW1hZ2UvcG5nIgogICAgfSwKICAgIHsKICAgICAgInNyYyI6ICJpY29ucy9pY29uLTUxMng1MTIucG5nIiwKICAgICAgInNpemVzIjogIjUxMng1MTIiLAogICAgICAidHlwZSI6ICJpbWFnZS9wbmciCiAgICB9CiAgXQp9"));


// Project Shader Store
// Project Shader Chunks
